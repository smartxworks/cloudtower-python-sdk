# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class ROLEACTION(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    _ = "*"
    MANAGE_DATA_CENTER = "MANAGE_DATA_CENTER"
    MANAGE_CLUSTER_CONNECTION = "MANAGE_CLUSTER_CONNECTION"
    MANAGE_STORAGE_CLUSTER_CONNECTION = "MANAGE_STORAGE_CLUSTER_CONNECTION"
    MANAGE_HOST = "MANAGE_HOST"
    MANAGE_NIC_MTU = "MANAGE_NIC_MTU"
    MANAGE_DISK = "MANAGE_DISK"
    MANAGE_HARDWARE_TOPO = "MANAGE_HARDWARE_TOPO"
    MANAGE_USB_DEVICE = "MANAGE_USB_DEVICE"
    MANAGE_GPU_DEVICE = "MANAGE_GPU_DEVICE"
    MANAGE_VDS = "MANAGE_VDS"
    MANAGE_VLAN = "MANAGE_VLAN"
    MANAGE_SYSTEM_VLAN = "MANAGE_SYSTEM_VLAN"
    MANAGE_ISCSI_DATA_STORE = "MANAGE_ISCSI_DATA_STORE"
    MANAGE_NFS_DATA_STORE = "MANAGE_NFS_DATA_STORE"
    MANAGE_NVMF_DATA_STORE = "MANAGE_NVMF_DATA_STORE"
    CREATE_VM = "CREATE_VM"
    UPDATE_VM = "UPDATE_VM"
    DELETE_VM = "DELETE_VM"
    UPDATE_VM_ADVANCED_SETTING = "UPDATE_VM_ADVANCED_SETTING"
    UPDATE_VM_GUEST = "UPDATE_VM_GUEST"
    VM_OPERATION_OPEN_TERMINAL = "VM_OPERATION_OPEN_TERMINAL"
    VM_OPERATION_MIGRATE = "VM_OPERATION_MIGRATE"
    VM_OPERATION_VM_FOLDER = "VM_OPERATION_VM_FOLDER"
    VM_OPERATION_VM_POWER = "VM_OPERATION_VM_POWER"
    VM_OPERATION_CLONE = "VM_OPERATION_CLONE"
    VM_OPERATION_INSTALL_TOOLS = "VM_OPERATION_INSTALL_TOOLS"
    VM_IMPORT_EXPORT = "VM_IMPORT_EXPORT"
    CREATE_VM_TEMPLATE = "CREATE_VM_TEMPLATE"
    MANAGE_VM_TEMPLATE = "MANAGE_VM_TEMPLATE"
    VM_TEMPLATE_IMPORT_EXPORT = "VM_TEMPLATE_IMPORT_EXPORT"
    MANAGE_VM_SNAPSHOT = "MANAGE_VM_SNAPSHOT"
    MANAGE_VM_VOLUME = "MANAGE_VM_VOLUME"
    VM_VOLUME_IMPORT_EXPORT = "VM_VOLUME_IMPORT_EXPORT"
    MANAGE_ISO = "MANAGE_ISO"
    DOWNLOAD_ISO = "DOWNLOAD_ISO"
    QUERY_SENSITIVE_RESOURCE_LIST = "QUERY_SENSITIVE_RESOURCE_LIST"
    QUERY_SENSITIVE_RESOURCE = "QUERY_SENSITIVE_RESOURCE"
    MANAGE_SENSITIVE_RESOURCE = "MANAGE_SENSITIVE_RESOURCE"
    MANAGE_VM_PLACEMENT_GROUP = "MANAGE_VM_PLACEMENT_GROUP"
    MANAGE_SNAPSHOT_PLAN = "MANAGE_SNAPSHOT_PLAN"
    MANAGE_ALERT = "MANAGE_ALERT"
    MANAGE_MONITOR_VIEW = "MANAGE_MONITOR_VIEW"
    MANAGE_ENTITY_FILTER = "MANAGE_ENTITY_FILTER"
    MANAGE_CLUSTER_BASIC_INFO = "MANAGE_CLUSTER_BASIC_INFO"
    MANAGE_CLUSTER_LICENCE = "MANAGE_CLUSTER_LICENCE"
    MANAGE_CLUSTER_SNMP_TRANSPORT = "MANAGE_CLUSTER_SNMP_TRANSPORT"
    MANAGE_SNMP_TRAP = "MANAGE_SNMP_TRAP"
    MANAGE_CLUSTER_VIP = "MANAGE_CLUSTER_VIP"
    MANAGE_CLUSTER_MANAGEMENT_IP = "MANAGE_CLUSTER_MANAGEMENT_IP"
    MANAGE_DNS_SERVER = "MANAGE_DNS_SERVER"
    MANAGE_NTP_SERVER = "MANAGE_NTP_SERVER"
    MANAGE_IPMI = "MANAGE_IPMI"
    MANAGE_CLUSTER_VM_CPU_MODEL = "MANAGE_CLUSTER_VM_CPU_MODEL"
    MANAGE_CLUSTER_VM_TOOLS = "MANAGE_CLUSTER_VM_TOOLS"
    MANAGE_CLUSTER_HOT_MIGRATION = "MANAGE_CLUSTER_HOT_MIGRATION"
    MANAGE_CLUSTER_HA = "MANAGE_CLUSTER_HA"
    MANAGE_SSL_CERTIFICATE = "MANAGE_SSL_CERTIFICATE"
    MANAGE_LOG_COLLECTION = "MANAGE_LOG_COLLECTION"
    MANAGE_SYSLOG = "MANAGE_SYSLOG"
    MANAGE_LOG_FIND = "MANAGE_LOG_FIND"
    MANAGE_LABEL = "MANAGE_LABEL"
    MANAGE_USER_AND_ROLE = "MANAGE_USER_AND_ROLE"
    MANAGE_PASSWORD_SETTINGS = "MANAGE_PASSWORD_SETTINGS"
    MANAGE_ACCESS_CONTROL = "MANAGE_ACCESS_CONTROL"
    MANAGE_SESSION_EXPIRATION = "MANAGE_SESSION_EXPIRATION"
    MANAGE_VCENTER_ASSOCIATION = "MANAGE_VCENTER_ASSOCIATION"
    MANAGE_ESXI_ASSOCIATION = "MANAGE_ESXI_ASSOCIATION"
    MANAGE_AUDIT_LOG = "MANAGE_AUDIT_LOG"
    MANAGE_ALERT_EMAIL_SETTING = "MANAGE_ALERT_EMAIL_SETTING"
    MANAGE_SMTP_SERVER = "MANAGE_SMTP_SERVER"
    MANAGE_UPGRADE_CENTER = "MANAGE_UPGRADE_CENTER"
    MANAGE_VM_RECYCLE_BIN_SETTING = "MANAGE_VM_RECYCLE_BIN_SETTING"
    MANAGE_REPORT = "MANAGE_REPORT"
    MANAGE_SHARING_VM_TOOLS = "MANAGE_SHARING_VM_TOOLS"
    MANAGE_ADVANCED_MONITOR = "MANAGE_ADVANCED_MONITOR"
    MANAGE_THIRD_PARTY_DRIVER = "MANAGE_THIRD_PARTY_DRIVER"
    MANAGE_ORGANIZATION_NAME = "MANAGE_ORGANIZATION_NAME"
    MANAGE_CLOUD_TOWER_LICENSE = "MANAGE_CLOUD_TOWER_LICENSE"
    MANAGE_CONSISTENCY_GROUP = "MANAGE_CONSISTENCY_GROUP"
    MANAGE_NIC = "MANAGE_NIC"
    MANAGE_CLUSTER_ISCSI = "MANAGE_CLUSTER_ISCSI"
    MANAGE_BACKUP_LICENSE = "MANAGE_BACKUP_LICENSE"
    MANAGE_BACKUP_PACKAGE = "MANAGE_BACKUP_PACKAGE"
    MANAGE_BACKUP_SERVICE = "MANAGE_BACKUP_SERVICE"
    MANAGE_BACKUP_STORE_REPOSITORY = "MANAGE_BACKUP_STORE_REPOSITORY"
    MANAGE_BACKUP_PLAN = "MANAGE_BACKUP_PLAN"
    MANAGE_BACKUP_TASK = "MANAGE_BACKUP_TASK"
    MANAGE_BACKUP_RESTORE_POINT = "MANAGE_BACKUP_RESTORE_POINT"
    MANAGE_BACKUP_RESTORE_POINT_TASK = "MANAGE_BACKUP_RESTORE_POINT_TASK"
    MANAGE_SECURITY_POLICY = "MANAGE_SECURITY_POLICY"
    MANAGE_SECURITY_GROUP = "MANAGE_SECURITY_GROUP"
    ISOLATE_VM = "ISOLATE_VM"
    MANAGE_EVEROUTE_LICENSE = "MANAGE_EVEROUTE_LICENSE"
    MANAGE_EVEROUTE_PACKAGE = "MANAGE_EVEROUTE_PACKAGE"
    DEPLOY_EVEROUTE_CLUSTER = "DEPLOY_EVEROUTE_CLUSTER"
    UNDEPLOY_EVEROUTE_CLUSTER = "UNDEPLOY_EVEROUTE_CLUSTER"
    UPDATE_EVEROUTE_CLUSTER = "UPDATE_EVEROUTE_CLUSTER"
    UPGRADE_EVEROUTE_CLUSTER = "UPGRADE_EVEROUTE_CLUSTER"
    MANAGE_EVEROUTE_NETWORK_POLICY_RULE_SERVICE = "MANAGE_EVEROUTE_NETWORK_POLICY_RULE_SERVICE"
    MANAGE_EVEROUTE_CLUSTER_ASSOCIATION = "MANAGE_EVEROUTE_CLUSTER_ASSOCIATION"
    MANAGE_EVEROUTE_CLUSTER_GLOBAL_POLICY = "MANAGE_EVEROUTE_CLUSTER_GLOBAL_POLICY"
    MANAGE_MICRO_SEGMENTATION = "MANAGE_MICRO_SEGMENTATION"
    MANAGE_LOAD_BALANCER_RESOURCE = "MANAGE_LOAD_BALANCER_RESOURCE"
    MANAGE_LOAD_BALANCER = "MANAGE_LOAD_BALANCER"
    MANAGE_LOAD_BALANCER_VNET_BOND = "MANAGE_LOAD_BALANCER_VNET_BOND"
    MANAGE_VIRTUAL_PRIVATE_CLOUD_SERVICE = "MANAGE_VIRTUAL_PRIVATE_CLOUD_SERVICE"
    MANAGE_VIRTUAL_PRIVATE_CLOUD_CLUSTER_BINDING = "MANAGE_VIRTUAL_PRIVATE_CLOUD_CLUSTER_BINDING"
    MANAGE_VIRTUAL_PRIVATE_CLOUD_EDGE_GATEWAY = "MANAGE_VIRTUAL_PRIVATE_CLOUD_EDGE_GATEWAY"
    MANAGE_VIRTUAL_PRIVATE_CLOUD_EXTERNAL_SUBNET = "MANAGE_VIRTUAL_PRIVATE_CLOUD_EXTERNAL_SUBNET"
    MANAGE_VIRTUAL_PRIVATE_CLOUD_BASIC_RESOURCE = "MANAGE_VIRTUAL_PRIVATE_CLOUD_BASIC_RESOURCE"
    MANAGE_VIRTUAL_PRIVATE_CLOUD_SECURITY_GROUP = "MANAGE_VIRTUAL_PRIVATE_CLOUD_SECURITY_GROUP"
    MANAGE_VIRTUAL_PRIVATE_CLOUD_SECURITY_POLICY = "MANAGE_VIRTUAL_PRIVATE_CLOUD_SECURITY_POLICY"
    MANAGE_VIRTUAL_PRIVATE_CLOUD_ISOLATION_POLICY = "MANAGE_VIRTUAL_PRIVATE_CLOUD_ISOLATION_POLICY"
    MANAGE_VIRTUAL_PRIVATE_CLOUD_FLOATING_IP = "MANAGE_VIRTUAL_PRIVATE_CLOUD_FLOATING_IP"
    MANAGE_VIRTUAL_PRIVATE_CLOUD_ROUTER_GATEWAY = "MANAGE_VIRTUAL_PRIVATE_CLOUD_ROUTER_GATEWAY"
    MANAGE_VIRTUAL_PRIVATE_CLOUD_NAT_GATEWAY = "MANAGE_VIRTUAL_PRIVATE_CLOUD_NAT_GATEWAY"
    MANAGE_VIRTUAL_PRIVATE_CLOUD_LAYER2_GATEWAY = "MANAGE_VIRTUAL_PRIVATE_CLOUD_LAYER2_GATEWAY"
    MANAGE_VIRTUAL_PRIVATE_CLOUD_PEERING = "MANAGE_VIRTUAL_PRIVATE_CLOUD_PEERING"
    MANAGE_VIRTUAL_PRIVATE_CLOUD_LOAD_BALANCER_RESOURCE = "MANAGE_VIRTUAL_PRIVATE_CLOUD_LOAD_BALANCER_RESOURCE"
    MANAGE_LDAP_AD_CONFIG = "MANAGE_LDAP_AD_CONFIG"
    MANAGE_MFA_CONFIG = "MANAGE_MFA_CONFIG"
    MANAGE_DEFAULT_LOGIN_OPTION = "MANAGE_DEFAULT_LOGIN_OPTION"
    MANAGE_CLUSTER_STORAGE_POLICY = "MANAGE_CLUSTER_STORAGE_POLICY"
    MANAGE_SKS_SERVICE = "MANAGE_SKS_SERVICE"
    MANAGE_SKS_LICENSE = "MANAGE_SKS_LICENSE"
    CONFIGURE_SKS_SERVICE = "CONFIGURE_SKS_SERVICE"
    CREATE_SKS_WORKLOAD_CLUSTER = "CREATE_SKS_WORKLOAD_CLUSTER"
    DELETE_SKS_WORKLOAD_CLUSTER = "DELETE_SKS_WORKLOAD_CLUSTER"
    UPDATE_SKS_WORKLOAD_CLUSTER = "UPDATE_SKS_WORKLOAD_CLUSTER"
    MANAGE_CONTAINER_REGISTRY = "MANAGE_CONTAINER_REGISTRY"
    DOWNLOAD_SKS_WORKLOAD_CLUSTER_KUBECONFIG = "DOWNLOAD_SKS_WORKLOAD_CLUSTER_KUBECONFIG"
    DOWNLOAD_SKS_WORKLOAD_SPEC_FILE = "DOWNLOAD_SKS_WORKLOAD_SPEC_FILE"
    MANAGE_SKS_WORKLOAD_CLUSTER_RECONCILE = "MANAGE_SKS_WORKLOAD_CLUSTER_RECONCILE"
    MANAGE_OBSERVABILITY_PACKAGE = "MANAGE_OBSERVABILITY_PACKAGE"
    MANAGE_OBSERVABILITY_SERVICE = "MANAGE_OBSERVABILITY_SERVICE"
    CONFIG_DYNAMIC_RESOURCE_SCHEDULE = "CONFIG_DYNAMIC_RESOURCE_SCHEDULE"
    GENERATE_DRS_PROPOSALS = "GENERATE_DRS_PROPOSALS"
    APPLY_DRS_PROPOSAL = "APPLY_DRS_PROPOSAL"
    MANAGE_AGENT_MESH = "MANAGE_AGENT_MESH"
    MANAGE_REPLICATION_SERVICE = "MANAGE_REPLICATION_SERVICE"
    MANAGE_REPLICATION_RESTORE_POINT = "MANAGE_REPLICATION_RESTORE_POINT"
    MANAGE_REPLICATION_PLAN = "MANAGE_REPLICATION_PLAN"
    MANAGE_REPLICATION_TASK = "MANAGE_REPLICATION_TASK"
    MANAGE_REPLICATION_FAULT_TASK = "MANAGE_REPLICATION_FAULT_TASK"
    MANAGE_REPLICA_OBJECT = "MANAGE_REPLICA_OBJECT"
    MANAGE_CLUSTER_PRIORITIZED = "MANAGE_CLUSTER_PRIORITIZED"
    SMTX_INSPECTOR = "SMTX_INSPECTOR"
    MANAGE_SFS_LICENSE = "MANAGE_SFS_LICENSE"
    MANAGE_SFS_IMAGE = "MANAGE_SFS_IMAGE"
    MANAGE_SFS_FILE_STORAGE_CLUSTER = "MANAGE_SFS_FILE_STORAGE_CLUSTER"
    MANAGE_SFS_FILE_SYSTEM_CONFIG = "MANAGE_SFS_FILE_SYSTEM_CONFIG"
    MANAGE_SFS_FILE_SYSTEM_ACCESSIBILITY = "MANAGE_SFS_FILE_SYSTEM_ACCESSIBILITY"
    MANAGE_SFS_SNAPSHOT = "MANAGE_SFS_SNAPSHOT"
    MANAGE_CLOUDTOWER_SNMP_TRANSPORT = "MANAGE_CLOUDTOWER_SNMP_TRANSPORT"
    MANAGE_CLOUD_TOWER_NTP = "MANAGE_CLOUD_TOWER_NTP"
    MANAGE_CLOUDTOWER_WEBHOOK_NOTIFIER = "MANAGE_CLOUDTOWER_WEBHOOK_NOTIFIER"
    MANAGE_API_KEY = "MANAGE_API_KEY"

    allowable_values = [_, MANAGE_DATA_CENTER, MANAGE_CLUSTER_CONNECTION, MANAGE_STORAGE_CLUSTER_CONNECTION, MANAGE_HOST, MANAGE_NIC_MTU, MANAGE_DISK, MANAGE_HARDWARE_TOPO, MANAGE_USB_DEVICE, MANAGE_GPU_DEVICE, MANAGE_VDS, MANAGE_VLAN, MANAGE_SYSTEM_VLAN, MANAGE_ISCSI_DATA_STORE, MANAGE_NFS_DATA_STORE, MANAGE_NVMF_DATA_STORE, CREATE_VM, UPDATE_VM, DELETE_VM, UPDATE_VM_ADVANCED_SETTING, UPDATE_VM_GUEST, VM_OPERATION_OPEN_TERMINAL, VM_OPERATION_MIGRATE, VM_OPERATION_VM_FOLDER, VM_OPERATION_VM_POWER, VM_OPERATION_CLONE, VM_OPERATION_INSTALL_TOOLS, VM_IMPORT_EXPORT, CREATE_VM_TEMPLATE, MANAGE_VM_TEMPLATE, VM_TEMPLATE_IMPORT_EXPORT, MANAGE_VM_SNAPSHOT, MANAGE_VM_VOLUME, VM_VOLUME_IMPORT_EXPORT, MANAGE_ISO, DOWNLOAD_ISO, QUERY_SENSITIVE_RESOURCE_LIST, QUERY_SENSITIVE_RESOURCE, MANAGE_SENSITIVE_RESOURCE, MANAGE_VM_PLACEMENT_GROUP, MANAGE_SNAPSHOT_PLAN, MANAGE_ALERT, MANAGE_MONITOR_VIEW, MANAGE_ENTITY_FILTER, MANAGE_CLUSTER_BASIC_INFO, MANAGE_CLUSTER_LICENCE, MANAGE_CLUSTER_SNMP_TRANSPORT, MANAGE_SNMP_TRAP, MANAGE_CLUSTER_VIP, MANAGE_CLUSTER_MANAGEMENT_IP, MANAGE_DNS_SERVER, MANAGE_NTP_SERVER, MANAGE_IPMI, MANAGE_CLUSTER_VM_CPU_MODEL, MANAGE_CLUSTER_VM_TOOLS, MANAGE_CLUSTER_HOT_MIGRATION, MANAGE_CLUSTER_HA, MANAGE_SSL_CERTIFICATE, MANAGE_LOG_COLLECTION, MANAGE_SYSLOG, MANAGE_LOG_FIND, MANAGE_LABEL, MANAGE_USER_AND_ROLE, MANAGE_PASSWORD_SETTINGS, MANAGE_ACCESS_CONTROL, MANAGE_SESSION_EXPIRATION, MANAGE_VCENTER_ASSOCIATION, MANAGE_ESXI_ASSOCIATION, MANAGE_AUDIT_LOG, MANAGE_ALERT_EMAIL_SETTING, MANAGE_SMTP_SERVER, MANAGE_UPGRADE_CENTER, MANAGE_VM_RECYCLE_BIN_SETTING, MANAGE_REPORT, MANAGE_SHARING_VM_TOOLS, MANAGE_ADVANCED_MONITOR, MANAGE_THIRD_PARTY_DRIVER, MANAGE_ORGANIZATION_NAME, MANAGE_CLOUD_TOWER_LICENSE, MANAGE_CONSISTENCY_GROUP, MANAGE_NIC, MANAGE_CLUSTER_ISCSI, MANAGE_BACKUP_LICENSE, MANAGE_BACKUP_PACKAGE, MANAGE_BACKUP_SERVICE, MANAGE_BACKUP_STORE_REPOSITORY, MANAGE_BACKUP_PLAN, MANAGE_BACKUP_TASK, MANAGE_BACKUP_RESTORE_POINT, MANAGE_BACKUP_RESTORE_POINT_TASK, MANAGE_SECURITY_POLICY, MANAGE_SECURITY_GROUP, ISOLATE_VM, MANAGE_EVEROUTE_LICENSE, MANAGE_EVEROUTE_PACKAGE, DEPLOY_EVEROUTE_CLUSTER, UNDEPLOY_EVEROUTE_CLUSTER, UPDATE_EVEROUTE_CLUSTER, UPGRADE_EVEROUTE_CLUSTER, MANAGE_EVEROUTE_NETWORK_POLICY_RULE_SERVICE, MANAGE_EVEROUTE_CLUSTER_ASSOCIATION, MANAGE_EVEROUTE_CLUSTER_GLOBAL_POLICY, MANAGE_MICRO_SEGMENTATION, MANAGE_LOAD_BALANCER_RESOURCE, MANAGE_LOAD_BALANCER, MANAGE_LOAD_BALANCER_VNET_BOND, MANAGE_VIRTUAL_PRIVATE_CLOUD_SERVICE, MANAGE_VIRTUAL_PRIVATE_CLOUD_CLUSTER_BINDING, MANAGE_VIRTUAL_PRIVATE_CLOUD_EDGE_GATEWAY, MANAGE_VIRTUAL_PRIVATE_CLOUD_EXTERNAL_SUBNET, MANAGE_VIRTUAL_PRIVATE_CLOUD_BASIC_RESOURCE, MANAGE_VIRTUAL_PRIVATE_CLOUD_SECURITY_GROUP, MANAGE_VIRTUAL_PRIVATE_CLOUD_SECURITY_POLICY, MANAGE_VIRTUAL_PRIVATE_CLOUD_ISOLATION_POLICY, MANAGE_VIRTUAL_PRIVATE_CLOUD_FLOATING_IP, MANAGE_VIRTUAL_PRIVATE_CLOUD_ROUTER_GATEWAY, MANAGE_VIRTUAL_PRIVATE_CLOUD_NAT_GATEWAY, MANAGE_VIRTUAL_PRIVATE_CLOUD_LAYER2_GATEWAY, MANAGE_VIRTUAL_PRIVATE_CLOUD_PEERING, MANAGE_VIRTUAL_PRIVATE_CLOUD_LOAD_BALANCER_RESOURCE, MANAGE_LDAP_AD_CONFIG, MANAGE_MFA_CONFIG, MANAGE_DEFAULT_LOGIN_OPTION, MANAGE_CLUSTER_STORAGE_POLICY, MANAGE_SKS_SERVICE, MANAGE_SKS_LICENSE, CONFIGURE_SKS_SERVICE, CREATE_SKS_WORKLOAD_CLUSTER, DELETE_SKS_WORKLOAD_CLUSTER, UPDATE_SKS_WORKLOAD_CLUSTER, MANAGE_CONTAINER_REGISTRY, DOWNLOAD_SKS_WORKLOAD_CLUSTER_KUBECONFIG, DOWNLOAD_SKS_WORKLOAD_SPEC_FILE, MANAGE_SKS_WORKLOAD_CLUSTER_RECONCILE, MANAGE_OBSERVABILITY_PACKAGE, MANAGE_OBSERVABILITY_SERVICE, CONFIG_DYNAMIC_RESOURCE_SCHEDULE, GENERATE_DRS_PROPOSALS, APPLY_DRS_PROPOSAL, MANAGE_AGENT_MESH, MANAGE_REPLICATION_SERVICE, MANAGE_REPLICATION_RESTORE_POINT, MANAGE_REPLICATION_PLAN, MANAGE_REPLICATION_TASK, MANAGE_REPLICATION_FAULT_TASK, MANAGE_REPLICA_OBJECT, MANAGE_CLUSTER_PRIORITIZED, SMTX_INSPECTOR, MANAGE_SFS_LICENSE, MANAGE_SFS_IMAGE, MANAGE_SFS_FILE_STORAGE_CLUSTER, MANAGE_SFS_FILE_SYSTEM_CONFIG, MANAGE_SFS_FILE_SYSTEM_ACCESSIBILITY, MANAGE_SFS_SNAPSHOT, MANAGE_CLOUDTOWER_SNMP_TRANSPORT, MANAGE_CLOUD_TOWER_NTP, MANAGE_CLOUDTOWER_WEBHOOK_NOTIFIER, MANAGE_API_KEY]  # noqa: E501

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
    }

    attribute_map = {
    }

    def __init__(self, **kwargs):  # noqa: E501
        """ROLEACTION - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())
        self.discriminator = None

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ROLEACTION):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ROLEACTION):
            return True

        return self.to_dict() != other.to_dict()
