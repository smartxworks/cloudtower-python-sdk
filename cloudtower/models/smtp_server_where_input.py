# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class SmtpServerWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[SmtpServerWhereInput]',
        '_not': 'list[SmtpServerWhereInput]',
        '_or': 'list[SmtpServerWhereInput]',
        'description': 'str',
        'description_contains': 'str',
        'description_ends_with': 'str',
        'description_gt': 'str',
        'description_gte': 'str',
        'description_in': 'list[str]',
        'description_lt': 'str',
        'description_lte': 'str',
        'description_not': 'str',
        'description_not_contains': 'str',
        'description_not_ends_with': 'str',
        'description_not_in': 'list[str]',
        'description_not_starts_with': 'str',
        'description_starts_with': 'str',
        'host': 'str',
        'host_contains': 'str',
        'host_ends_with': 'str',
        'host_gt': 'str',
        'host_gte': 'str',
        'host_in': 'list[str]',
        'host_lt': 'str',
        'host_lte': 'str',
        'host_not': 'str',
        'host_not_contains': 'str',
        'host_not_ends_with': 'str',
        'host_not_in': 'list[str]',
        'host_not_starts_with': 'str',
        'host_starts_with': 'str',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'name': 'str',
        'name_contains': 'str',
        'name_ends_with': 'str',
        'name_gt': 'str',
        'name_gte': 'str',
        'name_in': 'list[str]',
        'name_lt': 'str',
        'name_lte': 'str',
        'name_not': 'str',
        'name_not_contains': 'str',
        'name_not_ends_with': 'str',
        'name_not_in': 'list[str]',
        'name_not_starts_with': 'str',
        'name_starts_with': 'str',
        'port': 'int',
        'port_gt': 'int',
        'port_gte': 'int',
        'port_in': 'list[int]',
        'port_lt': 'int',
        'port_lte': 'int',
        'port_not': 'int',
        'port_not_in': 'list[int]',
        'secure_mode': 'SmtpSecureMode',
        'secure_mode_in': 'list[SmtpSecureMode]',
        'secure_mode_not': 'SmtpSecureMode',
        'secure_mode_not_in': 'list[SmtpSecureMode]',
        'username': 'str',
        'username_contains': 'str',
        'username_ends_with': 'str',
        'username_gt': 'str',
        'username_gte': 'str',
        'username_in': 'list[str]',
        'username_lt': 'str',
        'username_lte': 'str',
        'username_not': 'str',
        'username_not_contains': 'str',
        'username_not_ends_with': 'str',
        'username_not_in': 'list[str]',
        'username_not_starts_with': 'str',
        'username_starts_with': 'str'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'description': 'description',
        'description_contains': 'description_contains',
        'description_ends_with': 'description_ends_with',
        'description_gt': 'description_gt',
        'description_gte': 'description_gte',
        'description_in': 'description_in',
        'description_lt': 'description_lt',
        'description_lte': 'description_lte',
        'description_not': 'description_not',
        'description_not_contains': 'description_not_contains',
        'description_not_ends_with': 'description_not_ends_with',
        'description_not_in': 'description_not_in',
        'description_not_starts_with': 'description_not_starts_with',
        'description_starts_with': 'description_starts_with',
        'host': 'host',
        'host_contains': 'host_contains',
        'host_ends_with': 'host_ends_with',
        'host_gt': 'host_gt',
        'host_gte': 'host_gte',
        'host_in': 'host_in',
        'host_lt': 'host_lt',
        'host_lte': 'host_lte',
        'host_not': 'host_not',
        'host_not_contains': 'host_not_contains',
        'host_not_ends_with': 'host_not_ends_with',
        'host_not_in': 'host_not_in',
        'host_not_starts_with': 'host_not_starts_with',
        'host_starts_with': 'host_starts_with',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'name': 'name',
        'name_contains': 'name_contains',
        'name_ends_with': 'name_ends_with',
        'name_gt': 'name_gt',
        'name_gte': 'name_gte',
        'name_in': 'name_in',
        'name_lt': 'name_lt',
        'name_lte': 'name_lte',
        'name_not': 'name_not',
        'name_not_contains': 'name_not_contains',
        'name_not_ends_with': 'name_not_ends_with',
        'name_not_in': 'name_not_in',
        'name_not_starts_with': 'name_not_starts_with',
        'name_starts_with': 'name_starts_with',
        'port': 'port',
        'port_gt': 'port_gt',
        'port_gte': 'port_gte',
        'port_in': 'port_in',
        'port_lt': 'port_lt',
        'port_lte': 'port_lte',
        'port_not': 'port_not',
        'port_not_in': 'port_not_in',
        'secure_mode': 'secure_mode',
        'secure_mode_in': 'secure_mode_in',
        'secure_mode_not': 'secure_mode_not',
        'secure_mode_not_in': 'secure_mode_not_in',
        'username': 'username',
        'username_contains': 'username_contains',
        'username_ends_with': 'username_ends_with',
        'username_gt': 'username_gt',
        'username_gte': 'username_gte',
        'username_in': 'username_in',
        'username_lt': 'username_lt',
        'username_lte': 'username_lte',
        'username_not': 'username_not',
        'username_not_contains': 'username_not_contains',
        'username_not_ends_with': 'username_not_ends_with',
        'username_not_in': 'username_not_in',
        'username_not_starts_with': 'username_not_starts_with',
        'username_starts_with': 'username_starts_with'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """SmtpServerWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._description = None
        self._description_contains = None
        self._description_ends_with = None
        self._description_gt = None
        self._description_gte = None
        self._description_in = None
        self._description_lt = None
        self._description_lte = None
        self._description_not = None
        self._description_not_contains = None
        self._description_not_ends_with = None
        self._description_not_in = None
        self._description_not_starts_with = None
        self._description_starts_with = None
        self._host = None
        self._host_contains = None
        self._host_ends_with = None
        self._host_gt = None
        self._host_gte = None
        self._host_in = None
        self._host_lt = None
        self._host_lte = None
        self._host_not = None
        self._host_not_contains = None
        self._host_not_ends_with = None
        self._host_not_in = None
        self._host_not_starts_with = None
        self._host_starts_with = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._name = None
        self._name_contains = None
        self._name_ends_with = None
        self._name_gt = None
        self._name_gte = None
        self._name_in = None
        self._name_lt = None
        self._name_lte = None
        self._name_not = None
        self._name_not_contains = None
        self._name_not_ends_with = None
        self._name_not_in = None
        self._name_not_starts_with = None
        self._name_starts_with = None
        self._port = None
        self._port_gt = None
        self._port_gte = None
        self._port_in = None
        self._port_lt = None
        self._port_lte = None
        self._port_not = None
        self._port_not_in = None
        self._secure_mode = None
        self._secure_mode_in = None
        self._secure_mode_not = None
        self._secure_mode_not_in = None
        self._username = None
        self._username_contains = None
        self._username_ends_with = None
        self._username_gt = None
        self._username_gte = None
        self._username_in = None
        self._username_lt = None
        self._username_lte = None
        self._username_not = None
        self._username_not_contains = None
        self._username_not_ends_with = None
        self._username_not_in = None
        self._username_not_starts_with = None
        self._username_starts_with = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.description = kwargs.get("description", None)
        self.description_contains = kwargs.get("description_contains", None)
        self.description_ends_with = kwargs.get("description_ends_with", None)
        self.description_gt = kwargs.get("description_gt", None)
        self.description_gte = kwargs.get("description_gte", None)
        self.description_in = kwargs.get("description_in", None)
        self.description_lt = kwargs.get("description_lt", None)
        self.description_lte = kwargs.get("description_lte", None)
        self.description_not = kwargs.get("description_not", None)
        self.description_not_contains = kwargs.get("description_not_contains", None)
        self.description_not_ends_with = kwargs.get("description_not_ends_with", None)
        self.description_not_in = kwargs.get("description_not_in", None)
        self.description_not_starts_with = kwargs.get("description_not_starts_with", None)
        self.description_starts_with = kwargs.get("description_starts_with", None)
        self.host = kwargs.get("host", None)
        self.host_contains = kwargs.get("host_contains", None)
        self.host_ends_with = kwargs.get("host_ends_with", None)
        self.host_gt = kwargs.get("host_gt", None)
        self.host_gte = kwargs.get("host_gte", None)
        self.host_in = kwargs.get("host_in", None)
        self.host_lt = kwargs.get("host_lt", None)
        self.host_lte = kwargs.get("host_lte", None)
        self.host_not = kwargs.get("host_not", None)
        self.host_not_contains = kwargs.get("host_not_contains", None)
        self.host_not_ends_with = kwargs.get("host_not_ends_with", None)
        self.host_not_in = kwargs.get("host_not_in", None)
        self.host_not_starts_with = kwargs.get("host_not_starts_with", None)
        self.host_starts_with = kwargs.get("host_starts_with", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.name = kwargs.get("name", None)
        self.name_contains = kwargs.get("name_contains", None)
        self.name_ends_with = kwargs.get("name_ends_with", None)
        self.name_gt = kwargs.get("name_gt", None)
        self.name_gte = kwargs.get("name_gte", None)
        self.name_in = kwargs.get("name_in", None)
        self.name_lt = kwargs.get("name_lt", None)
        self.name_lte = kwargs.get("name_lte", None)
        self.name_not = kwargs.get("name_not", None)
        self.name_not_contains = kwargs.get("name_not_contains", None)
        self.name_not_ends_with = kwargs.get("name_not_ends_with", None)
        self.name_not_in = kwargs.get("name_not_in", None)
        self.name_not_starts_with = kwargs.get("name_not_starts_with", None)
        self.name_starts_with = kwargs.get("name_starts_with", None)
        self.port = kwargs.get("port", None)
        self.port_gt = kwargs.get("port_gt", None)
        self.port_gte = kwargs.get("port_gte", None)
        self.port_in = kwargs.get("port_in", None)
        self.port_lt = kwargs.get("port_lt", None)
        self.port_lte = kwargs.get("port_lte", None)
        self.port_not = kwargs.get("port_not", None)
        self.port_not_in = kwargs.get("port_not_in", None)
        self.secure_mode = kwargs.get("secure_mode", None)
        self.secure_mode_in = kwargs.get("secure_mode_in", None)
        self.secure_mode_not = kwargs.get("secure_mode_not", None)
        self.secure_mode_not_in = kwargs.get("secure_mode_not_in", None)
        self.username = kwargs.get("username", None)
        self.username_contains = kwargs.get("username_contains", None)
        self.username_ends_with = kwargs.get("username_ends_with", None)
        self.username_gt = kwargs.get("username_gt", None)
        self.username_gte = kwargs.get("username_gte", None)
        self.username_in = kwargs.get("username_in", None)
        self.username_lt = kwargs.get("username_lt", None)
        self.username_lte = kwargs.get("username_lte", None)
        self.username_not = kwargs.get("username_not", None)
        self.username_not_contains = kwargs.get("username_not_contains", None)
        self.username_not_ends_with = kwargs.get("username_not_ends_with", None)
        self.username_not_in = kwargs.get("username_not_in", None)
        self.username_not_starts_with = kwargs.get("username_not_starts_with", None)
        self.username_starts_with = kwargs.get("username_starts_with", None)

    @property
    def _and(self):
        """Gets the _and of this SmtpServerWhereInput.  # noqa: E501


        :return: The _and of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[SmtpServerWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this SmtpServerWhereInput.


        :param _and: The _and of this SmtpServerWhereInput.  # noqa: E501
        :type _and: list[SmtpServerWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this SmtpServerWhereInput.  # noqa: E501


        :return: The _not of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[SmtpServerWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this SmtpServerWhereInput.


        :param _not: The _not of this SmtpServerWhereInput.  # noqa: E501
        :type _not: list[SmtpServerWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this SmtpServerWhereInput.  # noqa: E501


        :return: The _or of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[SmtpServerWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this SmtpServerWhereInput.


        :param _or: The _or of this SmtpServerWhereInput.  # noqa: E501
        :type _or: list[SmtpServerWhereInput]
        """

        self.__or = _or

    @property
    def description(self):
        """Gets the description of this SmtpServerWhereInput.  # noqa: E501


        :return: The description of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SmtpServerWhereInput.


        :param description: The description of this SmtpServerWhereInput.  # noqa: E501
        :type description: str
        """

        self._description = description

    @property
    def description_contains(self):
        """Gets the description_contains of this SmtpServerWhereInput.  # noqa: E501


        :return: The description_contains of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_contains

    @description_contains.setter
    def description_contains(self, description_contains):
        """Sets the description_contains of this SmtpServerWhereInput.


        :param description_contains: The description_contains of this SmtpServerWhereInput.  # noqa: E501
        :type description_contains: str
        """

        self._description_contains = description_contains

    @property
    def description_ends_with(self):
        """Gets the description_ends_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The description_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_ends_with

    @description_ends_with.setter
    def description_ends_with(self, description_ends_with):
        """Sets the description_ends_with of this SmtpServerWhereInput.


        :param description_ends_with: The description_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :type description_ends_with: str
        """

        self._description_ends_with = description_ends_with

    @property
    def description_gt(self):
        """Gets the description_gt of this SmtpServerWhereInput.  # noqa: E501


        :return: The description_gt of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_gt

    @description_gt.setter
    def description_gt(self, description_gt):
        """Sets the description_gt of this SmtpServerWhereInput.


        :param description_gt: The description_gt of this SmtpServerWhereInput.  # noqa: E501
        :type description_gt: str
        """

        self._description_gt = description_gt

    @property
    def description_gte(self):
        """Gets the description_gte of this SmtpServerWhereInput.  # noqa: E501


        :return: The description_gte of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_gte

    @description_gte.setter
    def description_gte(self, description_gte):
        """Sets the description_gte of this SmtpServerWhereInput.


        :param description_gte: The description_gte of this SmtpServerWhereInput.  # noqa: E501
        :type description_gte: str
        """

        self._description_gte = description_gte

    @property
    def description_in(self):
        """Gets the description_in of this SmtpServerWhereInput.  # noqa: E501


        :return: The description_in of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._description_in

    @description_in.setter
    def description_in(self, description_in):
        """Sets the description_in of this SmtpServerWhereInput.


        :param description_in: The description_in of this SmtpServerWhereInput.  # noqa: E501
        :type description_in: list[str]
        """

        self._description_in = description_in

    @property
    def description_lt(self):
        """Gets the description_lt of this SmtpServerWhereInput.  # noqa: E501


        :return: The description_lt of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_lt

    @description_lt.setter
    def description_lt(self, description_lt):
        """Sets the description_lt of this SmtpServerWhereInput.


        :param description_lt: The description_lt of this SmtpServerWhereInput.  # noqa: E501
        :type description_lt: str
        """

        self._description_lt = description_lt

    @property
    def description_lte(self):
        """Gets the description_lte of this SmtpServerWhereInput.  # noqa: E501


        :return: The description_lte of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_lte

    @description_lte.setter
    def description_lte(self, description_lte):
        """Sets the description_lte of this SmtpServerWhereInput.


        :param description_lte: The description_lte of this SmtpServerWhereInput.  # noqa: E501
        :type description_lte: str
        """

        self._description_lte = description_lte

    @property
    def description_not(self):
        """Gets the description_not of this SmtpServerWhereInput.  # noqa: E501


        :return: The description_not of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not

    @description_not.setter
    def description_not(self, description_not):
        """Sets the description_not of this SmtpServerWhereInput.


        :param description_not: The description_not of this SmtpServerWhereInput.  # noqa: E501
        :type description_not: str
        """

        self._description_not = description_not

    @property
    def description_not_contains(self):
        """Gets the description_not_contains of this SmtpServerWhereInput.  # noqa: E501


        :return: The description_not_contains of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_contains

    @description_not_contains.setter
    def description_not_contains(self, description_not_contains):
        """Sets the description_not_contains of this SmtpServerWhereInput.


        :param description_not_contains: The description_not_contains of this SmtpServerWhereInput.  # noqa: E501
        :type description_not_contains: str
        """

        self._description_not_contains = description_not_contains

    @property
    def description_not_ends_with(self):
        """Gets the description_not_ends_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The description_not_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_ends_with

    @description_not_ends_with.setter
    def description_not_ends_with(self, description_not_ends_with):
        """Sets the description_not_ends_with of this SmtpServerWhereInput.


        :param description_not_ends_with: The description_not_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :type description_not_ends_with: str
        """

        self._description_not_ends_with = description_not_ends_with

    @property
    def description_not_in(self):
        """Gets the description_not_in of this SmtpServerWhereInput.  # noqa: E501


        :return: The description_not_in of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._description_not_in

    @description_not_in.setter
    def description_not_in(self, description_not_in):
        """Sets the description_not_in of this SmtpServerWhereInput.


        :param description_not_in: The description_not_in of this SmtpServerWhereInput.  # noqa: E501
        :type description_not_in: list[str]
        """

        self._description_not_in = description_not_in

    @property
    def description_not_starts_with(self):
        """Gets the description_not_starts_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The description_not_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_starts_with

    @description_not_starts_with.setter
    def description_not_starts_with(self, description_not_starts_with):
        """Sets the description_not_starts_with of this SmtpServerWhereInput.


        :param description_not_starts_with: The description_not_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :type description_not_starts_with: str
        """

        self._description_not_starts_with = description_not_starts_with

    @property
    def description_starts_with(self):
        """Gets the description_starts_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The description_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_starts_with

    @description_starts_with.setter
    def description_starts_with(self, description_starts_with):
        """Sets the description_starts_with of this SmtpServerWhereInput.


        :param description_starts_with: The description_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :type description_starts_with: str
        """

        self._description_starts_with = description_starts_with

    @property
    def host(self):
        """Gets the host of this SmtpServerWhereInput.  # noqa: E501


        :return: The host of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this SmtpServerWhereInput.


        :param host: The host of this SmtpServerWhereInput.  # noqa: E501
        :type host: str
        """

        self._host = host

    @property
    def host_contains(self):
        """Gets the host_contains of this SmtpServerWhereInput.  # noqa: E501


        :return: The host_contains of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_contains

    @host_contains.setter
    def host_contains(self, host_contains):
        """Sets the host_contains of this SmtpServerWhereInput.


        :param host_contains: The host_contains of this SmtpServerWhereInput.  # noqa: E501
        :type host_contains: str
        """

        self._host_contains = host_contains

    @property
    def host_ends_with(self):
        """Gets the host_ends_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The host_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_ends_with

    @host_ends_with.setter
    def host_ends_with(self, host_ends_with):
        """Sets the host_ends_with of this SmtpServerWhereInput.


        :param host_ends_with: The host_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :type host_ends_with: str
        """

        self._host_ends_with = host_ends_with

    @property
    def host_gt(self):
        """Gets the host_gt of this SmtpServerWhereInput.  # noqa: E501


        :return: The host_gt of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_gt

    @host_gt.setter
    def host_gt(self, host_gt):
        """Sets the host_gt of this SmtpServerWhereInput.


        :param host_gt: The host_gt of this SmtpServerWhereInput.  # noqa: E501
        :type host_gt: str
        """

        self._host_gt = host_gt

    @property
    def host_gte(self):
        """Gets the host_gte of this SmtpServerWhereInput.  # noqa: E501


        :return: The host_gte of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_gte

    @host_gte.setter
    def host_gte(self, host_gte):
        """Sets the host_gte of this SmtpServerWhereInput.


        :param host_gte: The host_gte of this SmtpServerWhereInput.  # noqa: E501
        :type host_gte: str
        """

        self._host_gte = host_gte

    @property
    def host_in(self):
        """Gets the host_in of this SmtpServerWhereInput.  # noqa: E501


        :return: The host_in of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._host_in

    @host_in.setter
    def host_in(self, host_in):
        """Sets the host_in of this SmtpServerWhereInput.


        :param host_in: The host_in of this SmtpServerWhereInput.  # noqa: E501
        :type host_in: list[str]
        """

        self._host_in = host_in

    @property
    def host_lt(self):
        """Gets the host_lt of this SmtpServerWhereInput.  # noqa: E501


        :return: The host_lt of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_lt

    @host_lt.setter
    def host_lt(self, host_lt):
        """Sets the host_lt of this SmtpServerWhereInput.


        :param host_lt: The host_lt of this SmtpServerWhereInput.  # noqa: E501
        :type host_lt: str
        """

        self._host_lt = host_lt

    @property
    def host_lte(self):
        """Gets the host_lte of this SmtpServerWhereInput.  # noqa: E501


        :return: The host_lte of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_lte

    @host_lte.setter
    def host_lte(self, host_lte):
        """Sets the host_lte of this SmtpServerWhereInput.


        :param host_lte: The host_lte of this SmtpServerWhereInput.  # noqa: E501
        :type host_lte: str
        """

        self._host_lte = host_lte

    @property
    def host_not(self):
        """Gets the host_not of this SmtpServerWhereInput.  # noqa: E501


        :return: The host_not of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_not

    @host_not.setter
    def host_not(self, host_not):
        """Sets the host_not of this SmtpServerWhereInput.


        :param host_not: The host_not of this SmtpServerWhereInput.  # noqa: E501
        :type host_not: str
        """

        self._host_not = host_not

    @property
    def host_not_contains(self):
        """Gets the host_not_contains of this SmtpServerWhereInput.  # noqa: E501


        :return: The host_not_contains of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_not_contains

    @host_not_contains.setter
    def host_not_contains(self, host_not_contains):
        """Sets the host_not_contains of this SmtpServerWhereInput.


        :param host_not_contains: The host_not_contains of this SmtpServerWhereInput.  # noqa: E501
        :type host_not_contains: str
        """

        self._host_not_contains = host_not_contains

    @property
    def host_not_ends_with(self):
        """Gets the host_not_ends_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The host_not_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_not_ends_with

    @host_not_ends_with.setter
    def host_not_ends_with(self, host_not_ends_with):
        """Sets the host_not_ends_with of this SmtpServerWhereInput.


        :param host_not_ends_with: The host_not_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :type host_not_ends_with: str
        """

        self._host_not_ends_with = host_not_ends_with

    @property
    def host_not_in(self):
        """Gets the host_not_in of this SmtpServerWhereInput.  # noqa: E501


        :return: The host_not_in of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._host_not_in

    @host_not_in.setter
    def host_not_in(self, host_not_in):
        """Sets the host_not_in of this SmtpServerWhereInput.


        :param host_not_in: The host_not_in of this SmtpServerWhereInput.  # noqa: E501
        :type host_not_in: list[str]
        """

        self._host_not_in = host_not_in

    @property
    def host_not_starts_with(self):
        """Gets the host_not_starts_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The host_not_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_not_starts_with

    @host_not_starts_with.setter
    def host_not_starts_with(self, host_not_starts_with):
        """Sets the host_not_starts_with of this SmtpServerWhereInput.


        :param host_not_starts_with: The host_not_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :type host_not_starts_with: str
        """

        self._host_not_starts_with = host_not_starts_with

    @property
    def host_starts_with(self):
        """Gets the host_starts_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The host_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._host_starts_with

    @host_starts_with.setter
    def host_starts_with(self, host_starts_with):
        """Sets the host_starts_with of this SmtpServerWhereInput.


        :param host_starts_with: The host_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :type host_starts_with: str
        """

        self._host_starts_with = host_starts_with

    @property
    def id(self):
        """Gets the id of this SmtpServerWhereInput.  # noqa: E501


        :return: The id of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SmtpServerWhereInput.


        :param id: The id of this SmtpServerWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this SmtpServerWhereInput.  # noqa: E501


        :return: The id_contains of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this SmtpServerWhereInput.


        :param id_contains: The id_contains of this SmtpServerWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The id_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this SmtpServerWhereInput.


        :param id_ends_with: The id_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this SmtpServerWhereInput.  # noqa: E501


        :return: The id_gt of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this SmtpServerWhereInput.


        :param id_gt: The id_gt of this SmtpServerWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this SmtpServerWhereInput.  # noqa: E501


        :return: The id_gte of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this SmtpServerWhereInput.


        :param id_gte: The id_gte of this SmtpServerWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this SmtpServerWhereInput.  # noqa: E501


        :return: The id_in of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this SmtpServerWhereInput.


        :param id_in: The id_in of this SmtpServerWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this SmtpServerWhereInput.  # noqa: E501


        :return: The id_lt of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this SmtpServerWhereInput.


        :param id_lt: The id_lt of this SmtpServerWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this SmtpServerWhereInput.  # noqa: E501


        :return: The id_lte of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this SmtpServerWhereInput.


        :param id_lte: The id_lte of this SmtpServerWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this SmtpServerWhereInput.  # noqa: E501


        :return: The id_not of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this SmtpServerWhereInput.


        :param id_not: The id_not of this SmtpServerWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this SmtpServerWhereInput.  # noqa: E501


        :return: The id_not_contains of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this SmtpServerWhereInput.


        :param id_not_contains: The id_not_contains of this SmtpServerWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this SmtpServerWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this SmtpServerWhereInput.  # noqa: E501


        :return: The id_not_in of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this SmtpServerWhereInput.


        :param id_not_in: The id_not_in of this SmtpServerWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this SmtpServerWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The id_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this SmtpServerWhereInput.


        :param id_starts_with: The id_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def name(self):
        """Gets the name of this SmtpServerWhereInput.  # noqa: E501


        :return: The name of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SmtpServerWhereInput.


        :param name: The name of this SmtpServerWhereInput.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def name_contains(self):
        """Gets the name_contains of this SmtpServerWhereInput.  # noqa: E501


        :return: The name_contains of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_contains

    @name_contains.setter
    def name_contains(self, name_contains):
        """Sets the name_contains of this SmtpServerWhereInput.


        :param name_contains: The name_contains of this SmtpServerWhereInput.  # noqa: E501
        :type name_contains: str
        """

        self._name_contains = name_contains

    @property
    def name_ends_with(self):
        """Gets the name_ends_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The name_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_ends_with

    @name_ends_with.setter
    def name_ends_with(self, name_ends_with):
        """Sets the name_ends_with of this SmtpServerWhereInput.


        :param name_ends_with: The name_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :type name_ends_with: str
        """

        self._name_ends_with = name_ends_with

    @property
    def name_gt(self):
        """Gets the name_gt of this SmtpServerWhereInput.  # noqa: E501


        :return: The name_gt of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gt

    @name_gt.setter
    def name_gt(self, name_gt):
        """Sets the name_gt of this SmtpServerWhereInput.


        :param name_gt: The name_gt of this SmtpServerWhereInput.  # noqa: E501
        :type name_gt: str
        """

        self._name_gt = name_gt

    @property
    def name_gte(self):
        """Gets the name_gte of this SmtpServerWhereInput.  # noqa: E501


        :return: The name_gte of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gte

    @name_gte.setter
    def name_gte(self, name_gte):
        """Sets the name_gte of this SmtpServerWhereInput.


        :param name_gte: The name_gte of this SmtpServerWhereInput.  # noqa: E501
        :type name_gte: str
        """

        self._name_gte = name_gte

    @property
    def name_in(self):
        """Gets the name_in of this SmtpServerWhereInput.  # noqa: E501


        :return: The name_in of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_in

    @name_in.setter
    def name_in(self, name_in):
        """Sets the name_in of this SmtpServerWhereInput.


        :param name_in: The name_in of this SmtpServerWhereInput.  # noqa: E501
        :type name_in: list[str]
        """

        self._name_in = name_in

    @property
    def name_lt(self):
        """Gets the name_lt of this SmtpServerWhereInput.  # noqa: E501


        :return: The name_lt of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lt

    @name_lt.setter
    def name_lt(self, name_lt):
        """Sets the name_lt of this SmtpServerWhereInput.


        :param name_lt: The name_lt of this SmtpServerWhereInput.  # noqa: E501
        :type name_lt: str
        """

        self._name_lt = name_lt

    @property
    def name_lte(self):
        """Gets the name_lte of this SmtpServerWhereInput.  # noqa: E501


        :return: The name_lte of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lte

    @name_lte.setter
    def name_lte(self, name_lte):
        """Sets the name_lte of this SmtpServerWhereInput.


        :param name_lte: The name_lte of this SmtpServerWhereInput.  # noqa: E501
        :type name_lte: str
        """

        self._name_lte = name_lte

    @property
    def name_not(self):
        """Gets the name_not of this SmtpServerWhereInput.  # noqa: E501


        :return: The name_not of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not

    @name_not.setter
    def name_not(self, name_not):
        """Sets the name_not of this SmtpServerWhereInput.


        :param name_not: The name_not of this SmtpServerWhereInput.  # noqa: E501
        :type name_not: str
        """

        self._name_not = name_not

    @property
    def name_not_contains(self):
        """Gets the name_not_contains of this SmtpServerWhereInput.  # noqa: E501


        :return: The name_not_contains of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_contains

    @name_not_contains.setter
    def name_not_contains(self, name_not_contains):
        """Sets the name_not_contains of this SmtpServerWhereInput.


        :param name_not_contains: The name_not_contains of this SmtpServerWhereInput.  # noqa: E501
        :type name_not_contains: str
        """

        self._name_not_contains = name_not_contains

    @property
    def name_not_ends_with(self):
        """Gets the name_not_ends_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The name_not_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_ends_with

    @name_not_ends_with.setter
    def name_not_ends_with(self, name_not_ends_with):
        """Sets the name_not_ends_with of this SmtpServerWhereInput.


        :param name_not_ends_with: The name_not_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :type name_not_ends_with: str
        """

        self._name_not_ends_with = name_not_ends_with

    @property
    def name_not_in(self):
        """Gets the name_not_in of this SmtpServerWhereInput.  # noqa: E501


        :return: The name_not_in of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_not_in

    @name_not_in.setter
    def name_not_in(self, name_not_in):
        """Sets the name_not_in of this SmtpServerWhereInput.


        :param name_not_in: The name_not_in of this SmtpServerWhereInput.  # noqa: E501
        :type name_not_in: list[str]
        """

        self._name_not_in = name_not_in

    @property
    def name_not_starts_with(self):
        """Gets the name_not_starts_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The name_not_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_starts_with

    @name_not_starts_with.setter
    def name_not_starts_with(self, name_not_starts_with):
        """Sets the name_not_starts_with of this SmtpServerWhereInput.


        :param name_not_starts_with: The name_not_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :type name_not_starts_with: str
        """

        self._name_not_starts_with = name_not_starts_with

    @property
    def name_starts_with(self):
        """Gets the name_starts_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The name_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_starts_with

    @name_starts_with.setter
    def name_starts_with(self, name_starts_with):
        """Sets the name_starts_with of this SmtpServerWhereInput.


        :param name_starts_with: The name_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :type name_starts_with: str
        """

        self._name_starts_with = name_starts_with

    @property
    def port(self):
        """Gets the port of this SmtpServerWhereInput.  # noqa: E501


        :return: The port of this SmtpServerWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this SmtpServerWhereInput.


        :param port: The port of this SmtpServerWhereInput.  # noqa: E501
        :type port: int
        """

        self._port = port

    @property
    def port_gt(self):
        """Gets the port_gt of this SmtpServerWhereInput.  # noqa: E501


        :return: The port_gt of this SmtpServerWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port_gt

    @port_gt.setter
    def port_gt(self, port_gt):
        """Sets the port_gt of this SmtpServerWhereInput.


        :param port_gt: The port_gt of this SmtpServerWhereInput.  # noqa: E501
        :type port_gt: int
        """

        self._port_gt = port_gt

    @property
    def port_gte(self):
        """Gets the port_gte of this SmtpServerWhereInput.  # noqa: E501


        :return: The port_gte of this SmtpServerWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port_gte

    @port_gte.setter
    def port_gte(self, port_gte):
        """Sets the port_gte of this SmtpServerWhereInput.


        :param port_gte: The port_gte of this SmtpServerWhereInput.  # noqa: E501
        :type port_gte: int
        """

        self._port_gte = port_gte

    @property
    def port_in(self):
        """Gets the port_in of this SmtpServerWhereInput.  # noqa: E501


        :return: The port_in of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._port_in

    @port_in.setter
    def port_in(self, port_in):
        """Sets the port_in of this SmtpServerWhereInput.


        :param port_in: The port_in of this SmtpServerWhereInput.  # noqa: E501
        :type port_in: list[int]
        """

        self._port_in = port_in

    @property
    def port_lt(self):
        """Gets the port_lt of this SmtpServerWhereInput.  # noqa: E501


        :return: The port_lt of this SmtpServerWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port_lt

    @port_lt.setter
    def port_lt(self, port_lt):
        """Sets the port_lt of this SmtpServerWhereInput.


        :param port_lt: The port_lt of this SmtpServerWhereInput.  # noqa: E501
        :type port_lt: int
        """

        self._port_lt = port_lt

    @property
    def port_lte(self):
        """Gets the port_lte of this SmtpServerWhereInput.  # noqa: E501


        :return: The port_lte of this SmtpServerWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port_lte

    @port_lte.setter
    def port_lte(self, port_lte):
        """Sets the port_lte of this SmtpServerWhereInput.


        :param port_lte: The port_lte of this SmtpServerWhereInput.  # noqa: E501
        :type port_lte: int
        """

        self._port_lte = port_lte

    @property
    def port_not(self):
        """Gets the port_not of this SmtpServerWhereInput.  # noqa: E501


        :return: The port_not of this SmtpServerWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._port_not

    @port_not.setter
    def port_not(self, port_not):
        """Sets the port_not of this SmtpServerWhereInput.


        :param port_not: The port_not of this SmtpServerWhereInput.  # noqa: E501
        :type port_not: int
        """

        self._port_not = port_not

    @property
    def port_not_in(self):
        """Gets the port_not_in of this SmtpServerWhereInput.  # noqa: E501


        :return: The port_not_in of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._port_not_in

    @port_not_in.setter
    def port_not_in(self, port_not_in):
        """Sets the port_not_in of this SmtpServerWhereInput.


        :param port_not_in: The port_not_in of this SmtpServerWhereInput.  # noqa: E501
        :type port_not_in: list[int]
        """

        self._port_not_in = port_not_in

    @property
    def secure_mode(self):
        """Gets the secure_mode of this SmtpServerWhereInput.  # noqa: E501


        :return: The secure_mode of this SmtpServerWhereInput.  # noqa: E501
        :rtype: SmtpSecureMode
        """
        return self._secure_mode

    @secure_mode.setter
    def secure_mode(self, secure_mode):
        """Sets the secure_mode of this SmtpServerWhereInput.


        :param secure_mode: The secure_mode of this SmtpServerWhereInput.  # noqa: E501
        :type secure_mode: SmtpSecureMode
        """

        self._secure_mode = secure_mode

    @property
    def secure_mode_in(self):
        """Gets the secure_mode_in of this SmtpServerWhereInput.  # noqa: E501


        :return: The secure_mode_in of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[SmtpSecureMode]
        """
        return self._secure_mode_in

    @secure_mode_in.setter
    def secure_mode_in(self, secure_mode_in):
        """Sets the secure_mode_in of this SmtpServerWhereInput.


        :param secure_mode_in: The secure_mode_in of this SmtpServerWhereInput.  # noqa: E501
        :type secure_mode_in: list[SmtpSecureMode]
        """

        self._secure_mode_in = secure_mode_in

    @property
    def secure_mode_not(self):
        """Gets the secure_mode_not of this SmtpServerWhereInput.  # noqa: E501


        :return: The secure_mode_not of this SmtpServerWhereInput.  # noqa: E501
        :rtype: SmtpSecureMode
        """
        return self._secure_mode_not

    @secure_mode_not.setter
    def secure_mode_not(self, secure_mode_not):
        """Sets the secure_mode_not of this SmtpServerWhereInput.


        :param secure_mode_not: The secure_mode_not of this SmtpServerWhereInput.  # noqa: E501
        :type secure_mode_not: SmtpSecureMode
        """

        self._secure_mode_not = secure_mode_not

    @property
    def secure_mode_not_in(self):
        """Gets the secure_mode_not_in of this SmtpServerWhereInput.  # noqa: E501


        :return: The secure_mode_not_in of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[SmtpSecureMode]
        """
        return self._secure_mode_not_in

    @secure_mode_not_in.setter
    def secure_mode_not_in(self, secure_mode_not_in):
        """Sets the secure_mode_not_in of this SmtpServerWhereInput.


        :param secure_mode_not_in: The secure_mode_not_in of this SmtpServerWhereInput.  # noqa: E501
        :type secure_mode_not_in: list[SmtpSecureMode]
        """

        self._secure_mode_not_in = secure_mode_not_in

    @property
    def username(self):
        """Gets the username of this SmtpServerWhereInput.  # noqa: E501


        :return: The username of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this SmtpServerWhereInput.


        :param username: The username of this SmtpServerWhereInput.  # noqa: E501
        :type username: str
        """

        self._username = username

    @property
    def username_contains(self):
        """Gets the username_contains of this SmtpServerWhereInput.  # noqa: E501


        :return: The username_contains of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_contains

    @username_contains.setter
    def username_contains(self, username_contains):
        """Sets the username_contains of this SmtpServerWhereInput.


        :param username_contains: The username_contains of this SmtpServerWhereInput.  # noqa: E501
        :type username_contains: str
        """

        self._username_contains = username_contains

    @property
    def username_ends_with(self):
        """Gets the username_ends_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The username_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_ends_with

    @username_ends_with.setter
    def username_ends_with(self, username_ends_with):
        """Sets the username_ends_with of this SmtpServerWhereInput.


        :param username_ends_with: The username_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :type username_ends_with: str
        """

        self._username_ends_with = username_ends_with

    @property
    def username_gt(self):
        """Gets the username_gt of this SmtpServerWhereInput.  # noqa: E501


        :return: The username_gt of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_gt

    @username_gt.setter
    def username_gt(self, username_gt):
        """Sets the username_gt of this SmtpServerWhereInput.


        :param username_gt: The username_gt of this SmtpServerWhereInput.  # noqa: E501
        :type username_gt: str
        """

        self._username_gt = username_gt

    @property
    def username_gte(self):
        """Gets the username_gte of this SmtpServerWhereInput.  # noqa: E501


        :return: The username_gte of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_gte

    @username_gte.setter
    def username_gte(self, username_gte):
        """Sets the username_gte of this SmtpServerWhereInput.


        :param username_gte: The username_gte of this SmtpServerWhereInput.  # noqa: E501
        :type username_gte: str
        """

        self._username_gte = username_gte

    @property
    def username_in(self):
        """Gets the username_in of this SmtpServerWhereInput.  # noqa: E501


        :return: The username_in of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._username_in

    @username_in.setter
    def username_in(self, username_in):
        """Sets the username_in of this SmtpServerWhereInput.


        :param username_in: The username_in of this SmtpServerWhereInput.  # noqa: E501
        :type username_in: list[str]
        """

        self._username_in = username_in

    @property
    def username_lt(self):
        """Gets the username_lt of this SmtpServerWhereInput.  # noqa: E501


        :return: The username_lt of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_lt

    @username_lt.setter
    def username_lt(self, username_lt):
        """Sets the username_lt of this SmtpServerWhereInput.


        :param username_lt: The username_lt of this SmtpServerWhereInput.  # noqa: E501
        :type username_lt: str
        """

        self._username_lt = username_lt

    @property
    def username_lte(self):
        """Gets the username_lte of this SmtpServerWhereInput.  # noqa: E501


        :return: The username_lte of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_lte

    @username_lte.setter
    def username_lte(self, username_lte):
        """Sets the username_lte of this SmtpServerWhereInput.


        :param username_lte: The username_lte of this SmtpServerWhereInput.  # noqa: E501
        :type username_lte: str
        """

        self._username_lte = username_lte

    @property
    def username_not(self):
        """Gets the username_not of this SmtpServerWhereInput.  # noqa: E501


        :return: The username_not of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not

    @username_not.setter
    def username_not(self, username_not):
        """Sets the username_not of this SmtpServerWhereInput.


        :param username_not: The username_not of this SmtpServerWhereInput.  # noqa: E501
        :type username_not: str
        """

        self._username_not = username_not

    @property
    def username_not_contains(self):
        """Gets the username_not_contains of this SmtpServerWhereInput.  # noqa: E501


        :return: The username_not_contains of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_contains

    @username_not_contains.setter
    def username_not_contains(self, username_not_contains):
        """Sets the username_not_contains of this SmtpServerWhereInput.


        :param username_not_contains: The username_not_contains of this SmtpServerWhereInput.  # noqa: E501
        :type username_not_contains: str
        """

        self._username_not_contains = username_not_contains

    @property
    def username_not_ends_with(self):
        """Gets the username_not_ends_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The username_not_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_ends_with

    @username_not_ends_with.setter
    def username_not_ends_with(self, username_not_ends_with):
        """Sets the username_not_ends_with of this SmtpServerWhereInput.


        :param username_not_ends_with: The username_not_ends_with of this SmtpServerWhereInput.  # noqa: E501
        :type username_not_ends_with: str
        """

        self._username_not_ends_with = username_not_ends_with

    @property
    def username_not_in(self):
        """Gets the username_not_in of this SmtpServerWhereInput.  # noqa: E501


        :return: The username_not_in of this SmtpServerWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._username_not_in

    @username_not_in.setter
    def username_not_in(self, username_not_in):
        """Sets the username_not_in of this SmtpServerWhereInput.


        :param username_not_in: The username_not_in of this SmtpServerWhereInput.  # noqa: E501
        :type username_not_in: list[str]
        """

        self._username_not_in = username_not_in

    @property
    def username_not_starts_with(self):
        """Gets the username_not_starts_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The username_not_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_starts_with

    @username_not_starts_with.setter
    def username_not_starts_with(self, username_not_starts_with):
        """Sets the username_not_starts_with of this SmtpServerWhereInput.


        :param username_not_starts_with: The username_not_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :type username_not_starts_with: str
        """

        self._username_not_starts_with = username_not_starts_with

    @property
    def username_starts_with(self):
        """Gets the username_starts_with of this SmtpServerWhereInput.  # noqa: E501


        :return: The username_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_starts_with

    @username_starts_with.setter
    def username_starts_with(self, username_starts_with):
        """Sets the username_starts_with of this SmtpServerWhereInput.


        :param username_starts_with: The username_starts_with of this SmtpServerWhereInput.  # noqa: E501
        :type username_starts_with: str
        """

        self._username_starts_with = username_starts_with

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SmtpServerWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SmtpServerWhereInput):
            return True

        return self.to_dict() != other.to_dict()
