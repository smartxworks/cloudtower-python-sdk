# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class VmWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[VmWhereInput]',
        '_not': 'list[VmWhereInput]',
        '_or': 'list[VmWhereInput]',
        'backup_plans_every': 'BackupPlanWhereInput',
        'backup_plans_none': 'BackupPlanWhereInput',
        'backup_plans_some': 'BackupPlanWhereInput',
        'bios_uuid': 'str',
        'bios_uuid_contains': 'str',
        'bios_uuid_ends_with': 'str',
        'bios_uuid_gt': 'str',
        'bios_uuid_gte': 'str',
        'bios_uuid_in': 'list[str]',
        'bios_uuid_lt': 'str',
        'bios_uuid_lte': 'str',
        'bios_uuid_not': 'str',
        'bios_uuid_not_contains': 'str',
        'bios_uuid_not_ends_with': 'str',
        'bios_uuid_not_in': 'list[str]',
        'bios_uuid_not_starts_with': 'str',
        'bios_uuid_starts_with': 'str',
        'clock_offset': 'VmClockOffset',
        'clock_offset_in': 'list[VmClockOffset]',
        'clock_offset_not': 'VmClockOffset',
        'clock_offset_not_in': 'list[VmClockOffset]',
        'cloud_init_supported': 'bool',
        'cloud_init_supported_not': 'bool',
        'cluster': 'ClusterWhereInput',
        'cpu_model': 'str',
        'cpu_model_contains': 'str',
        'cpu_model_ends_with': 'str',
        'cpu_model_gt': 'str',
        'cpu_model_gte': 'str',
        'cpu_model_in': 'list[str]',
        'cpu_model_lt': 'str',
        'cpu_model_lte': 'str',
        'cpu_model_not': 'str',
        'cpu_model_not_contains': 'str',
        'cpu_model_not_ends_with': 'str',
        'cpu_model_not_in': 'list[str]',
        'cpu_model_not_starts_with': 'str',
        'cpu_model_starts_with': 'str',
        'cpu_usage': 'float',
        'cpu_usage_gt': 'float',
        'cpu_usage_gte': 'float',
        'cpu_usage_in': 'list[float]',
        'cpu_usage_lt': 'float',
        'cpu_usage_lte': 'float',
        'cpu_usage_not': 'float',
        'cpu_usage_not_in': 'list[float]',
        'deleted_at': 'str',
        'deleted_at_gt': 'str',
        'deleted_at_gte': 'str',
        'deleted_at_in': 'list[str]',
        'deleted_at_lt': 'str',
        'deleted_at_lte': 'str',
        'deleted_at_not': 'str',
        'deleted_at_not_in': 'list[str]',
        'description': 'str',
        'description_contains': 'str',
        'description_ends_with': 'str',
        'description_gt': 'str',
        'description_gte': 'str',
        'description_in': 'list[str]',
        'description_lt': 'str',
        'description_lte': 'str',
        'description_not': 'str',
        'description_not_contains': 'str',
        'description_not_ends_with': 'str',
        'description_not_in': 'list[str]',
        'description_not_starts_with': 'str',
        'description_starts_with': 'str',
        'dns_servers': 'str',
        'dns_servers_contains': 'str',
        'dns_servers_ends_with': 'str',
        'dns_servers_gt': 'str',
        'dns_servers_gte': 'str',
        'dns_servers_in': 'list[str]',
        'dns_servers_lt': 'str',
        'dns_servers_lte': 'str',
        'dns_servers_not': 'str',
        'dns_servers_not_contains': 'str',
        'dns_servers_not_ends_with': 'str',
        'dns_servers_not_in': 'list[str]',
        'dns_servers_not_starts_with': 'str',
        'dns_servers_starts_with': 'str',
        'entity_async_status': 'EntityAsyncStatus',
        'entity_async_status_in': 'list[EntityAsyncStatus]',
        'entity_async_status_not': 'EntityAsyncStatus',
        'entity_async_status_not_in': 'list[EntityAsyncStatus]',
        'entity_filter_results_every': 'VmEntityFilterResultWhereInput',
        'entity_filter_results_none': 'VmEntityFilterResultWhereInput',
        'entity_filter_results_some': 'VmEntityFilterResultWhereInput',
        'firmware': 'VmFirmware',
        'firmware_in': 'list[VmFirmware]',
        'firmware_not': 'VmFirmware',
        'firmware_not_in': 'list[VmFirmware]',
        'folder': 'VmFolderWhereInput',
        'gpu_devices_every': 'GpuDeviceWhereInput',
        'gpu_devices_none': 'GpuDeviceWhereInput',
        'gpu_devices_some': 'GpuDeviceWhereInput',
        'guest_cpu_model': 'str',
        'guest_cpu_model_contains': 'str',
        'guest_cpu_model_ends_with': 'str',
        'guest_cpu_model_gt': 'str',
        'guest_cpu_model_gte': 'str',
        'guest_cpu_model_in': 'list[str]',
        'guest_cpu_model_lt': 'str',
        'guest_cpu_model_lte': 'str',
        'guest_cpu_model_not': 'str',
        'guest_cpu_model_not_contains': 'str',
        'guest_cpu_model_not_ends_with': 'str',
        'guest_cpu_model_not_in': 'list[str]',
        'guest_cpu_model_not_starts_with': 'str',
        'guest_cpu_model_starts_with': 'str',
        'guest_os_type': 'VmGuestsOperationSystem',
        'guest_os_type_in': 'list[VmGuestsOperationSystem]',
        'guest_os_type_not': 'VmGuestsOperationSystem',
        'guest_os_type_not_in': 'list[VmGuestsOperationSystem]',
        'guest_size_usage': 'float',
        'guest_size_usage_gt': 'float',
        'guest_size_usage_gte': 'float',
        'guest_size_usage_in': 'list[float]',
        'guest_size_usage_lt': 'float',
        'guest_size_usage_lte': 'float',
        'guest_size_usage_not': 'float',
        'guest_size_usage_not_in': 'list[float]',
        'guest_used_size': 'int',
        'guest_used_size_gt': 'int',
        'guest_used_size_gte': 'int',
        'guest_used_size_in': 'list[int]',
        'guest_used_size_lt': 'int',
        'guest_used_size_lte': 'int',
        'guest_used_size_not': 'int',
        'guest_used_size_not_in': 'list[int]',
        'ha': 'bool',
        'ha_not': 'bool',
        'host': 'HostWhereInput',
        'hostname': 'str',
        'hostname_contains': 'str',
        'hostname_ends_with': 'str',
        'hostname_gt': 'str',
        'hostname_gte': 'str',
        'hostname_in': 'list[str]',
        'hostname_lt': 'str',
        'hostname_lte': 'str',
        'hostname_not': 'str',
        'hostname_not_contains': 'str',
        'hostname_not_ends_with': 'str',
        'hostname_not_in': 'list[str]',
        'hostname_not_starts_with': 'str',
        'hostname_starts_with': 'str',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'in_recycle_bin': 'bool',
        'in_recycle_bin_not': 'bool',
        'internal': 'bool',
        'internal_not': 'bool',
        'io_policy': 'VmDiskIoPolicy',
        'io_policy_in': 'list[VmDiskIoPolicy]',
        'io_policy_not': 'VmDiskIoPolicy',
        'io_policy_not_in': 'list[VmDiskIoPolicy]',
        'ips': 'str',
        'ips_contains': 'str',
        'ips_ends_with': 'str',
        'ips_gt': 'str',
        'ips_gte': 'str',
        'ips_in': 'list[str]',
        'ips_lt': 'str',
        'ips_lte': 'str',
        'ips_not': 'str',
        'ips_not_contains': 'str',
        'ips_not_ends_with': 'str',
        'ips_not_in': 'list[str]',
        'ips_not_starts_with': 'str',
        'ips_starts_with': 'str',
        'isolation_policy': 'IsolationPolicyWhereInput',
        'kernel_info': 'str',
        'kernel_info_contains': 'str',
        'kernel_info_ends_with': 'str',
        'kernel_info_gt': 'str',
        'kernel_info_gte': 'str',
        'kernel_info_in': 'list[str]',
        'kernel_info_lt': 'str',
        'kernel_info_lte': 'str',
        'kernel_info_not': 'str',
        'kernel_info_not_contains': 'str',
        'kernel_info_not_ends_with': 'str',
        'kernel_info_not_in': 'list[str]',
        'kernel_info_not_starts_with': 'str',
        'kernel_info_starts_with': 'str',
        'labels_every': 'LabelWhereInput',
        'labels_none': 'LabelWhereInput',
        'labels_some': 'LabelWhereInput',
        'last_shutdown_time': 'str',
        'last_shutdown_time_gt': 'str',
        'last_shutdown_time_gte': 'str',
        'last_shutdown_time_in': 'list[str]',
        'last_shutdown_time_lt': 'str',
        'last_shutdown_time_lte': 'str',
        'last_shutdown_time_not': 'str',
        'last_shutdown_time_not_in': 'list[str]',
        'local_created_at': 'str',
        'local_created_at_gt': 'str',
        'local_created_at_gte': 'str',
        'local_created_at_in': 'list[str]',
        'local_created_at_lt': 'str',
        'local_created_at_lte': 'str',
        'local_created_at_not': 'str',
        'local_created_at_not_in': 'list[str]',
        'local_id': 'str',
        'local_id_contains': 'str',
        'local_id_ends_with': 'str',
        'local_id_gt': 'str',
        'local_id_gte': 'str',
        'local_id_in': 'list[str]',
        'local_id_lt': 'str',
        'local_id_lte': 'str',
        'local_id_not': 'str',
        'local_id_not_contains': 'str',
        'local_id_not_ends_with': 'str',
        'local_id_not_in': 'list[str]',
        'local_id_not_starts_with': 'str',
        'local_id_starts_with': 'str',
        'logical_size_bytes': 'int',
        'logical_size_bytes_gt': 'int',
        'logical_size_bytes_gte': 'int',
        'logical_size_bytes_in': 'list[int]',
        'logical_size_bytes_lt': 'int',
        'logical_size_bytes_lte': 'int',
        'logical_size_bytes_not': 'int',
        'logical_size_bytes_not_in': 'list[int]',
        'max_bandwidth': 'int',
        'max_bandwidth_gt': 'int',
        'max_bandwidth_gte': 'int',
        'max_bandwidth_in': 'list[int]',
        'max_bandwidth_lt': 'int',
        'max_bandwidth_lte': 'int',
        'max_bandwidth_not': 'int',
        'max_bandwidth_not_in': 'list[int]',
        'max_bandwidth_policy': 'VmDiskIoRestrictType',
        'max_bandwidth_policy_in': 'list[VmDiskIoRestrictType]',
        'max_bandwidth_policy_not': 'VmDiskIoRestrictType',
        'max_bandwidth_policy_not_in': 'list[VmDiskIoRestrictType]',
        'max_iops': 'int',
        'max_iops_gt': 'int',
        'max_iops_gte': 'int',
        'max_iops_in': 'list[int]',
        'max_iops_lt': 'int',
        'max_iops_lte': 'int',
        'max_iops_not': 'int',
        'max_iops_not_in': 'list[int]',
        'max_iops_policy': 'VmDiskIoRestrictType',
        'max_iops_policy_in': 'list[VmDiskIoRestrictType]',
        'max_iops_policy_not': 'VmDiskIoRestrictType',
        'max_iops_policy_not_in': 'list[VmDiskIoRestrictType]',
        'memory': 'int',
        'memory_gt': 'int',
        'memory_gte': 'int',
        'memory_in': 'list[int]',
        'memory_lt': 'int',
        'memory_lte': 'int',
        'memory_not': 'int',
        'memory_not_in': 'list[int]',
        'memory_usage': 'float',
        'memory_usage_gt': 'float',
        'memory_usage_gte': 'float',
        'memory_usage_in': 'list[float]',
        'memory_usage_lt': 'float',
        'memory_usage_lte': 'float',
        'memory_usage_not': 'float',
        'memory_usage_not_in': 'list[float]',
        'name': 'str',
        'name_contains': 'str',
        'name_ends_with': 'str',
        'name_gt': 'str',
        'name_gte': 'str',
        'name_in': 'list[str]',
        'name_lt': 'str',
        'name_lte': 'str',
        'name_not': 'str',
        'name_not_contains': 'str',
        'name_not_ends_with': 'str',
        'name_not_in': 'list[str]',
        'name_not_starts_with': 'str',
        'name_starts_with': 'str',
        'nested_virtualization': 'bool',
        'nested_virtualization_not': 'bool',
        'node_ip': 'str',
        'node_ip_contains': 'str',
        'node_ip_ends_with': 'str',
        'node_ip_gt': 'str',
        'node_ip_gte': 'str',
        'node_ip_in': 'list[str]',
        'node_ip_lt': 'str',
        'node_ip_lte': 'str',
        'node_ip_not': 'str',
        'node_ip_not_contains': 'str',
        'node_ip_not_ends_with': 'str',
        'node_ip_not_in': 'list[str]',
        'node_ip_not_starts_with': 'str',
        'node_ip_starts_with': 'str',
        'original_name': 'str',
        'original_name_contains': 'str',
        'original_name_ends_with': 'str',
        'original_name_gt': 'str',
        'original_name_gte': 'str',
        'original_name_in': 'list[str]',
        'original_name_lt': 'str',
        'original_name_lte': 'str',
        'original_name_not': 'str',
        'original_name_not_contains': 'str',
        'original_name_not_ends_with': 'str',
        'original_name_not_in': 'list[str]',
        'original_name_not_starts_with': 'str',
        'original_name_starts_with': 'str',
        'os': 'str',
        'os_contains': 'str',
        'os_ends_with': 'str',
        'os_gt': 'str',
        'os_gte': 'str',
        'os_in': 'list[str]',
        'os_lt': 'str',
        'os_lte': 'str',
        'os_not': 'str',
        'os_not_contains': 'str',
        'os_not_ends_with': 'str',
        'os_not_in': 'list[str]',
        'os_not_starts_with': 'str',
        'os_starts_with': 'str',
        'pci_nics_every': 'NicWhereInput',
        'pci_nics_none': 'NicWhereInput',
        'pci_nics_some': 'NicWhereInput',
        'protected': 'bool',
        'protected_not': 'bool',
        'provisioned_size': 'int',
        'provisioned_size_gt': 'int',
        'provisioned_size_gte': 'int',
        'provisioned_size_in': 'list[int]',
        'provisioned_size_lt': 'int',
        'provisioned_size_lte': 'int',
        'provisioned_size_not': 'int',
        'provisioned_size_not_in': 'list[int]',
        'size': 'int',
        'size_gt': 'int',
        'size_gte': 'int',
        'size_in': 'list[int]',
        'size_lt': 'int',
        'size_lte': 'int',
        'size_not': 'int',
        'size_not_in': 'list[int]',
        'snapshot_plan': 'SnapshotPlanWhereInput',
        'snapshots_every': 'VmSnapshotWhereInput',
        'snapshots_none': 'VmSnapshotWhereInput',
        'snapshots_some': 'VmSnapshotWhereInput',
        'status': 'VmStatus',
        'status_in': 'list[VmStatus]',
        'status_not': 'VmStatus',
        'status_not_in': 'list[VmStatus]',
        'unique_logical_size': 'float',
        'unique_logical_size_gt': 'float',
        'unique_logical_size_gte': 'float',
        'unique_logical_size_in': 'list[float]',
        'unique_logical_size_lt': 'float',
        'unique_logical_size_lte': 'float',
        'unique_logical_size_not': 'float',
        'unique_logical_size_not_in': 'list[float]',
        'unique_size': 'int',
        'unique_size_gt': 'int',
        'unique_size_gte': 'int',
        'unique_size_in': 'list[int]',
        'unique_size_lt': 'int',
        'unique_size_lte': 'int',
        'unique_size_not': 'int',
        'unique_size_not_in': 'list[int]',
        'usb_devices_every': 'UsbDeviceWhereInput',
        'usb_devices_none': 'UsbDeviceWhereInput',
        'usb_devices_some': 'UsbDeviceWhereInput',
        'used_size': 'int',
        'used_size_gt': 'int',
        'used_size_gte': 'int',
        'used_size_in': 'list[int]',
        'used_size_lt': 'int',
        'used_size_lte': 'int',
        'used_size_not': 'int',
        'used_size_not_in': 'list[int]',
        'used_size_usage': 'float',
        'used_size_usage_gt': 'float',
        'used_size_usage_gte': 'float',
        'used_size_usage_in': 'list[float]',
        'used_size_usage_lt': 'float',
        'used_size_usage_lte': 'float',
        'used_size_usage_not': 'float',
        'used_size_usage_not_in': 'list[float]',
        'vcpu': 'int',
        'vcpu_gt': 'int',
        'vcpu_gte': 'int',
        'vcpu_in': 'list[int]',
        'vcpu_lt': 'int',
        'vcpu_lte': 'int',
        'vcpu_not': 'int',
        'vcpu_not_in': 'list[int]',
        'video_type': 'VmVideoType',
        'video_type_in': 'list[VmVideoType]',
        'video_type_not': 'VmVideoType',
        'video_type_not_in': 'list[VmVideoType]',
        'vm_disks_every': 'VmDiskWhereInput',
        'vm_disks_none': 'VmDiskWhereInput',
        'vm_disks_some': 'VmDiskWhereInput',
        'vm_nics_every': 'VmNicWhereInput',
        'vm_nics_none': 'VmNicWhereInput',
        'vm_nics_some': 'VmNicWhereInput',
        'vm_placement_group_every': 'VmPlacementGroupWhereInput',
        'vm_placement_group_none': 'VmPlacementGroupWhereInput',
        'vm_placement_group_some': 'VmPlacementGroupWhereInput',
        'vm_tools_status': 'VmToolsStatus',
        'vm_tools_status_in': 'list[VmToolsStatus]',
        'vm_tools_status_not': 'VmToolsStatus',
        'vm_tools_status_not_in': 'list[VmToolsStatus]',
        'vm_tools_version': 'str',
        'vm_tools_version_contains': 'str',
        'vm_tools_version_ends_with': 'str',
        'vm_tools_version_gt': 'str',
        'vm_tools_version_gte': 'str',
        'vm_tools_version_in': 'list[str]',
        'vm_tools_version_lt': 'str',
        'vm_tools_version_lte': 'str',
        'vm_tools_version_not': 'str',
        'vm_tools_version_not_contains': 'str',
        'vm_tools_version_not_ends_with': 'str',
        'vm_tools_version_not_in': 'list[str]',
        'vm_tools_version_not_starts_with': 'str',
        'vm_tools_version_starts_with': 'str',
        'vm_usage': 'VmUsage',
        'vm_usage_in': 'list[VmUsage]',
        'vm_usage_not': 'VmUsage',
        'vm_usage_not_in': 'list[VmUsage]',
        'win_opt': 'bool',
        'win_opt_not': 'bool'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'backup_plans_every': 'backup_plans_every',
        'backup_plans_none': 'backup_plans_none',
        'backup_plans_some': 'backup_plans_some',
        'bios_uuid': 'bios_uuid',
        'bios_uuid_contains': 'bios_uuid_contains',
        'bios_uuid_ends_with': 'bios_uuid_ends_with',
        'bios_uuid_gt': 'bios_uuid_gt',
        'bios_uuid_gte': 'bios_uuid_gte',
        'bios_uuid_in': 'bios_uuid_in',
        'bios_uuid_lt': 'bios_uuid_lt',
        'bios_uuid_lte': 'bios_uuid_lte',
        'bios_uuid_not': 'bios_uuid_not',
        'bios_uuid_not_contains': 'bios_uuid_not_contains',
        'bios_uuid_not_ends_with': 'bios_uuid_not_ends_with',
        'bios_uuid_not_in': 'bios_uuid_not_in',
        'bios_uuid_not_starts_with': 'bios_uuid_not_starts_with',
        'bios_uuid_starts_with': 'bios_uuid_starts_with',
        'clock_offset': 'clock_offset',
        'clock_offset_in': 'clock_offset_in',
        'clock_offset_not': 'clock_offset_not',
        'clock_offset_not_in': 'clock_offset_not_in',
        'cloud_init_supported': 'cloud_init_supported',
        'cloud_init_supported_not': 'cloud_init_supported_not',
        'cluster': 'cluster',
        'cpu_model': 'cpu_model',
        'cpu_model_contains': 'cpu_model_contains',
        'cpu_model_ends_with': 'cpu_model_ends_with',
        'cpu_model_gt': 'cpu_model_gt',
        'cpu_model_gte': 'cpu_model_gte',
        'cpu_model_in': 'cpu_model_in',
        'cpu_model_lt': 'cpu_model_lt',
        'cpu_model_lte': 'cpu_model_lte',
        'cpu_model_not': 'cpu_model_not',
        'cpu_model_not_contains': 'cpu_model_not_contains',
        'cpu_model_not_ends_with': 'cpu_model_not_ends_with',
        'cpu_model_not_in': 'cpu_model_not_in',
        'cpu_model_not_starts_with': 'cpu_model_not_starts_with',
        'cpu_model_starts_with': 'cpu_model_starts_with',
        'cpu_usage': 'cpu_usage',
        'cpu_usage_gt': 'cpu_usage_gt',
        'cpu_usage_gte': 'cpu_usage_gte',
        'cpu_usage_in': 'cpu_usage_in',
        'cpu_usage_lt': 'cpu_usage_lt',
        'cpu_usage_lte': 'cpu_usage_lte',
        'cpu_usage_not': 'cpu_usage_not',
        'cpu_usage_not_in': 'cpu_usage_not_in',
        'deleted_at': 'deleted_at',
        'deleted_at_gt': 'deleted_at_gt',
        'deleted_at_gte': 'deleted_at_gte',
        'deleted_at_in': 'deleted_at_in',
        'deleted_at_lt': 'deleted_at_lt',
        'deleted_at_lte': 'deleted_at_lte',
        'deleted_at_not': 'deleted_at_not',
        'deleted_at_not_in': 'deleted_at_not_in',
        'description': 'description',
        'description_contains': 'description_contains',
        'description_ends_with': 'description_ends_with',
        'description_gt': 'description_gt',
        'description_gte': 'description_gte',
        'description_in': 'description_in',
        'description_lt': 'description_lt',
        'description_lte': 'description_lte',
        'description_not': 'description_not',
        'description_not_contains': 'description_not_contains',
        'description_not_ends_with': 'description_not_ends_with',
        'description_not_in': 'description_not_in',
        'description_not_starts_with': 'description_not_starts_with',
        'description_starts_with': 'description_starts_with',
        'dns_servers': 'dns_servers',
        'dns_servers_contains': 'dns_servers_contains',
        'dns_servers_ends_with': 'dns_servers_ends_with',
        'dns_servers_gt': 'dns_servers_gt',
        'dns_servers_gte': 'dns_servers_gte',
        'dns_servers_in': 'dns_servers_in',
        'dns_servers_lt': 'dns_servers_lt',
        'dns_servers_lte': 'dns_servers_lte',
        'dns_servers_not': 'dns_servers_not',
        'dns_servers_not_contains': 'dns_servers_not_contains',
        'dns_servers_not_ends_with': 'dns_servers_not_ends_with',
        'dns_servers_not_in': 'dns_servers_not_in',
        'dns_servers_not_starts_with': 'dns_servers_not_starts_with',
        'dns_servers_starts_with': 'dns_servers_starts_with',
        'entity_async_status': 'entityAsyncStatus',
        'entity_async_status_in': 'entityAsyncStatus_in',
        'entity_async_status_not': 'entityAsyncStatus_not',
        'entity_async_status_not_in': 'entityAsyncStatus_not_in',
        'entity_filter_results_every': 'entity_filter_results_every',
        'entity_filter_results_none': 'entity_filter_results_none',
        'entity_filter_results_some': 'entity_filter_results_some',
        'firmware': 'firmware',
        'firmware_in': 'firmware_in',
        'firmware_not': 'firmware_not',
        'firmware_not_in': 'firmware_not_in',
        'folder': 'folder',
        'gpu_devices_every': 'gpu_devices_every',
        'gpu_devices_none': 'gpu_devices_none',
        'gpu_devices_some': 'gpu_devices_some',
        'guest_cpu_model': 'guest_cpu_model',
        'guest_cpu_model_contains': 'guest_cpu_model_contains',
        'guest_cpu_model_ends_with': 'guest_cpu_model_ends_with',
        'guest_cpu_model_gt': 'guest_cpu_model_gt',
        'guest_cpu_model_gte': 'guest_cpu_model_gte',
        'guest_cpu_model_in': 'guest_cpu_model_in',
        'guest_cpu_model_lt': 'guest_cpu_model_lt',
        'guest_cpu_model_lte': 'guest_cpu_model_lte',
        'guest_cpu_model_not': 'guest_cpu_model_not',
        'guest_cpu_model_not_contains': 'guest_cpu_model_not_contains',
        'guest_cpu_model_not_ends_with': 'guest_cpu_model_not_ends_with',
        'guest_cpu_model_not_in': 'guest_cpu_model_not_in',
        'guest_cpu_model_not_starts_with': 'guest_cpu_model_not_starts_with',
        'guest_cpu_model_starts_with': 'guest_cpu_model_starts_with',
        'guest_os_type': 'guest_os_type',
        'guest_os_type_in': 'guest_os_type_in',
        'guest_os_type_not': 'guest_os_type_not',
        'guest_os_type_not_in': 'guest_os_type_not_in',
        'guest_size_usage': 'guest_size_usage',
        'guest_size_usage_gt': 'guest_size_usage_gt',
        'guest_size_usage_gte': 'guest_size_usage_gte',
        'guest_size_usage_in': 'guest_size_usage_in',
        'guest_size_usage_lt': 'guest_size_usage_lt',
        'guest_size_usage_lte': 'guest_size_usage_lte',
        'guest_size_usage_not': 'guest_size_usage_not',
        'guest_size_usage_not_in': 'guest_size_usage_not_in',
        'guest_used_size': 'guest_used_size',
        'guest_used_size_gt': 'guest_used_size_gt',
        'guest_used_size_gte': 'guest_used_size_gte',
        'guest_used_size_in': 'guest_used_size_in',
        'guest_used_size_lt': 'guest_used_size_lt',
        'guest_used_size_lte': 'guest_used_size_lte',
        'guest_used_size_not': 'guest_used_size_not',
        'guest_used_size_not_in': 'guest_used_size_not_in',
        'ha': 'ha',
        'ha_not': 'ha_not',
        'host': 'host',
        'hostname': 'hostname',
        'hostname_contains': 'hostname_contains',
        'hostname_ends_with': 'hostname_ends_with',
        'hostname_gt': 'hostname_gt',
        'hostname_gte': 'hostname_gte',
        'hostname_in': 'hostname_in',
        'hostname_lt': 'hostname_lt',
        'hostname_lte': 'hostname_lte',
        'hostname_not': 'hostname_not',
        'hostname_not_contains': 'hostname_not_contains',
        'hostname_not_ends_with': 'hostname_not_ends_with',
        'hostname_not_in': 'hostname_not_in',
        'hostname_not_starts_with': 'hostname_not_starts_with',
        'hostname_starts_with': 'hostname_starts_with',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'in_recycle_bin': 'in_recycle_bin',
        'in_recycle_bin_not': 'in_recycle_bin_not',
        'internal': 'internal',
        'internal_not': 'internal_not',
        'io_policy': 'io_policy',
        'io_policy_in': 'io_policy_in',
        'io_policy_not': 'io_policy_not',
        'io_policy_not_in': 'io_policy_not_in',
        'ips': 'ips',
        'ips_contains': 'ips_contains',
        'ips_ends_with': 'ips_ends_with',
        'ips_gt': 'ips_gt',
        'ips_gte': 'ips_gte',
        'ips_in': 'ips_in',
        'ips_lt': 'ips_lt',
        'ips_lte': 'ips_lte',
        'ips_not': 'ips_not',
        'ips_not_contains': 'ips_not_contains',
        'ips_not_ends_with': 'ips_not_ends_with',
        'ips_not_in': 'ips_not_in',
        'ips_not_starts_with': 'ips_not_starts_with',
        'ips_starts_with': 'ips_starts_with',
        'isolation_policy': 'isolation_policy',
        'kernel_info': 'kernel_info',
        'kernel_info_contains': 'kernel_info_contains',
        'kernel_info_ends_with': 'kernel_info_ends_with',
        'kernel_info_gt': 'kernel_info_gt',
        'kernel_info_gte': 'kernel_info_gte',
        'kernel_info_in': 'kernel_info_in',
        'kernel_info_lt': 'kernel_info_lt',
        'kernel_info_lte': 'kernel_info_lte',
        'kernel_info_not': 'kernel_info_not',
        'kernel_info_not_contains': 'kernel_info_not_contains',
        'kernel_info_not_ends_with': 'kernel_info_not_ends_with',
        'kernel_info_not_in': 'kernel_info_not_in',
        'kernel_info_not_starts_with': 'kernel_info_not_starts_with',
        'kernel_info_starts_with': 'kernel_info_starts_with',
        'labels_every': 'labels_every',
        'labels_none': 'labels_none',
        'labels_some': 'labels_some',
        'last_shutdown_time': 'last_shutdown_time',
        'last_shutdown_time_gt': 'last_shutdown_time_gt',
        'last_shutdown_time_gte': 'last_shutdown_time_gte',
        'last_shutdown_time_in': 'last_shutdown_time_in',
        'last_shutdown_time_lt': 'last_shutdown_time_lt',
        'last_shutdown_time_lte': 'last_shutdown_time_lte',
        'last_shutdown_time_not': 'last_shutdown_time_not',
        'last_shutdown_time_not_in': 'last_shutdown_time_not_in',
        'local_created_at': 'local_created_at',
        'local_created_at_gt': 'local_created_at_gt',
        'local_created_at_gte': 'local_created_at_gte',
        'local_created_at_in': 'local_created_at_in',
        'local_created_at_lt': 'local_created_at_lt',
        'local_created_at_lte': 'local_created_at_lte',
        'local_created_at_not': 'local_created_at_not',
        'local_created_at_not_in': 'local_created_at_not_in',
        'local_id': 'local_id',
        'local_id_contains': 'local_id_contains',
        'local_id_ends_with': 'local_id_ends_with',
        'local_id_gt': 'local_id_gt',
        'local_id_gte': 'local_id_gte',
        'local_id_in': 'local_id_in',
        'local_id_lt': 'local_id_lt',
        'local_id_lte': 'local_id_lte',
        'local_id_not': 'local_id_not',
        'local_id_not_contains': 'local_id_not_contains',
        'local_id_not_ends_with': 'local_id_not_ends_with',
        'local_id_not_in': 'local_id_not_in',
        'local_id_not_starts_with': 'local_id_not_starts_with',
        'local_id_starts_with': 'local_id_starts_with',
        'logical_size_bytes': 'logical_size_bytes',
        'logical_size_bytes_gt': 'logical_size_bytes_gt',
        'logical_size_bytes_gte': 'logical_size_bytes_gte',
        'logical_size_bytes_in': 'logical_size_bytes_in',
        'logical_size_bytes_lt': 'logical_size_bytes_lt',
        'logical_size_bytes_lte': 'logical_size_bytes_lte',
        'logical_size_bytes_not': 'logical_size_bytes_not',
        'logical_size_bytes_not_in': 'logical_size_bytes_not_in',
        'max_bandwidth': 'max_bandwidth',
        'max_bandwidth_gt': 'max_bandwidth_gt',
        'max_bandwidth_gte': 'max_bandwidth_gte',
        'max_bandwidth_in': 'max_bandwidth_in',
        'max_bandwidth_lt': 'max_bandwidth_lt',
        'max_bandwidth_lte': 'max_bandwidth_lte',
        'max_bandwidth_not': 'max_bandwidth_not',
        'max_bandwidth_not_in': 'max_bandwidth_not_in',
        'max_bandwidth_policy': 'max_bandwidth_policy',
        'max_bandwidth_policy_in': 'max_bandwidth_policy_in',
        'max_bandwidth_policy_not': 'max_bandwidth_policy_not',
        'max_bandwidth_policy_not_in': 'max_bandwidth_policy_not_in',
        'max_iops': 'max_iops',
        'max_iops_gt': 'max_iops_gt',
        'max_iops_gte': 'max_iops_gte',
        'max_iops_in': 'max_iops_in',
        'max_iops_lt': 'max_iops_lt',
        'max_iops_lte': 'max_iops_lte',
        'max_iops_not': 'max_iops_not',
        'max_iops_not_in': 'max_iops_not_in',
        'max_iops_policy': 'max_iops_policy',
        'max_iops_policy_in': 'max_iops_policy_in',
        'max_iops_policy_not': 'max_iops_policy_not',
        'max_iops_policy_not_in': 'max_iops_policy_not_in',
        'memory': 'memory',
        'memory_gt': 'memory_gt',
        'memory_gte': 'memory_gte',
        'memory_in': 'memory_in',
        'memory_lt': 'memory_lt',
        'memory_lte': 'memory_lte',
        'memory_not': 'memory_not',
        'memory_not_in': 'memory_not_in',
        'memory_usage': 'memory_usage',
        'memory_usage_gt': 'memory_usage_gt',
        'memory_usage_gte': 'memory_usage_gte',
        'memory_usage_in': 'memory_usage_in',
        'memory_usage_lt': 'memory_usage_lt',
        'memory_usage_lte': 'memory_usage_lte',
        'memory_usage_not': 'memory_usage_not',
        'memory_usage_not_in': 'memory_usage_not_in',
        'name': 'name',
        'name_contains': 'name_contains',
        'name_ends_with': 'name_ends_with',
        'name_gt': 'name_gt',
        'name_gte': 'name_gte',
        'name_in': 'name_in',
        'name_lt': 'name_lt',
        'name_lte': 'name_lte',
        'name_not': 'name_not',
        'name_not_contains': 'name_not_contains',
        'name_not_ends_with': 'name_not_ends_with',
        'name_not_in': 'name_not_in',
        'name_not_starts_with': 'name_not_starts_with',
        'name_starts_with': 'name_starts_with',
        'nested_virtualization': 'nested_virtualization',
        'nested_virtualization_not': 'nested_virtualization_not',
        'node_ip': 'node_ip',
        'node_ip_contains': 'node_ip_contains',
        'node_ip_ends_with': 'node_ip_ends_with',
        'node_ip_gt': 'node_ip_gt',
        'node_ip_gte': 'node_ip_gte',
        'node_ip_in': 'node_ip_in',
        'node_ip_lt': 'node_ip_lt',
        'node_ip_lte': 'node_ip_lte',
        'node_ip_not': 'node_ip_not',
        'node_ip_not_contains': 'node_ip_not_contains',
        'node_ip_not_ends_with': 'node_ip_not_ends_with',
        'node_ip_not_in': 'node_ip_not_in',
        'node_ip_not_starts_with': 'node_ip_not_starts_with',
        'node_ip_starts_with': 'node_ip_starts_with',
        'original_name': 'original_name',
        'original_name_contains': 'original_name_contains',
        'original_name_ends_with': 'original_name_ends_with',
        'original_name_gt': 'original_name_gt',
        'original_name_gte': 'original_name_gte',
        'original_name_in': 'original_name_in',
        'original_name_lt': 'original_name_lt',
        'original_name_lte': 'original_name_lte',
        'original_name_not': 'original_name_not',
        'original_name_not_contains': 'original_name_not_contains',
        'original_name_not_ends_with': 'original_name_not_ends_with',
        'original_name_not_in': 'original_name_not_in',
        'original_name_not_starts_with': 'original_name_not_starts_with',
        'original_name_starts_with': 'original_name_starts_with',
        'os': 'os',
        'os_contains': 'os_contains',
        'os_ends_with': 'os_ends_with',
        'os_gt': 'os_gt',
        'os_gte': 'os_gte',
        'os_in': 'os_in',
        'os_lt': 'os_lt',
        'os_lte': 'os_lte',
        'os_not': 'os_not',
        'os_not_contains': 'os_not_contains',
        'os_not_ends_with': 'os_not_ends_with',
        'os_not_in': 'os_not_in',
        'os_not_starts_with': 'os_not_starts_with',
        'os_starts_with': 'os_starts_with',
        'pci_nics_every': 'pci_nics_every',
        'pci_nics_none': 'pci_nics_none',
        'pci_nics_some': 'pci_nics_some',
        'protected': 'protected',
        'protected_not': 'protected_not',
        'provisioned_size': 'provisioned_size',
        'provisioned_size_gt': 'provisioned_size_gt',
        'provisioned_size_gte': 'provisioned_size_gte',
        'provisioned_size_in': 'provisioned_size_in',
        'provisioned_size_lt': 'provisioned_size_lt',
        'provisioned_size_lte': 'provisioned_size_lte',
        'provisioned_size_not': 'provisioned_size_not',
        'provisioned_size_not_in': 'provisioned_size_not_in',
        'size': 'size',
        'size_gt': 'size_gt',
        'size_gte': 'size_gte',
        'size_in': 'size_in',
        'size_lt': 'size_lt',
        'size_lte': 'size_lte',
        'size_not': 'size_not',
        'size_not_in': 'size_not_in',
        'snapshot_plan': 'snapshot_plan',
        'snapshots_every': 'snapshots_every',
        'snapshots_none': 'snapshots_none',
        'snapshots_some': 'snapshots_some',
        'status': 'status',
        'status_in': 'status_in',
        'status_not': 'status_not',
        'status_not_in': 'status_not_in',
        'unique_logical_size': 'unique_logical_size',
        'unique_logical_size_gt': 'unique_logical_size_gt',
        'unique_logical_size_gte': 'unique_logical_size_gte',
        'unique_logical_size_in': 'unique_logical_size_in',
        'unique_logical_size_lt': 'unique_logical_size_lt',
        'unique_logical_size_lte': 'unique_logical_size_lte',
        'unique_logical_size_not': 'unique_logical_size_not',
        'unique_logical_size_not_in': 'unique_logical_size_not_in',
        'unique_size': 'unique_size',
        'unique_size_gt': 'unique_size_gt',
        'unique_size_gte': 'unique_size_gte',
        'unique_size_in': 'unique_size_in',
        'unique_size_lt': 'unique_size_lt',
        'unique_size_lte': 'unique_size_lte',
        'unique_size_not': 'unique_size_not',
        'unique_size_not_in': 'unique_size_not_in',
        'usb_devices_every': 'usb_devices_every',
        'usb_devices_none': 'usb_devices_none',
        'usb_devices_some': 'usb_devices_some',
        'used_size': 'used_size',
        'used_size_gt': 'used_size_gt',
        'used_size_gte': 'used_size_gte',
        'used_size_in': 'used_size_in',
        'used_size_lt': 'used_size_lt',
        'used_size_lte': 'used_size_lte',
        'used_size_not': 'used_size_not',
        'used_size_not_in': 'used_size_not_in',
        'used_size_usage': 'used_size_usage',
        'used_size_usage_gt': 'used_size_usage_gt',
        'used_size_usage_gte': 'used_size_usage_gte',
        'used_size_usage_in': 'used_size_usage_in',
        'used_size_usage_lt': 'used_size_usage_lt',
        'used_size_usage_lte': 'used_size_usage_lte',
        'used_size_usage_not': 'used_size_usage_not',
        'used_size_usage_not_in': 'used_size_usage_not_in',
        'vcpu': 'vcpu',
        'vcpu_gt': 'vcpu_gt',
        'vcpu_gte': 'vcpu_gte',
        'vcpu_in': 'vcpu_in',
        'vcpu_lt': 'vcpu_lt',
        'vcpu_lte': 'vcpu_lte',
        'vcpu_not': 'vcpu_not',
        'vcpu_not_in': 'vcpu_not_in',
        'video_type': 'video_type',
        'video_type_in': 'video_type_in',
        'video_type_not': 'video_type_not',
        'video_type_not_in': 'video_type_not_in',
        'vm_disks_every': 'vm_disks_every',
        'vm_disks_none': 'vm_disks_none',
        'vm_disks_some': 'vm_disks_some',
        'vm_nics_every': 'vm_nics_every',
        'vm_nics_none': 'vm_nics_none',
        'vm_nics_some': 'vm_nics_some',
        'vm_placement_group_every': 'vm_placement_group_every',
        'vm_placement_group_none': 'vm_placement_group_none',
        'vm_placement_group_some': 'vm_placement_group_some',
        'vm_tools_status': 'vm_tools_status',
        'vm_tools_status_in': 'vm_tools_status_in',
        'vm_tools_status_not': 'vm_tools_status_not',
        'vm_tools_status_not_in': 'vm_tools_status_not_in',
        'vm_tools_version': 'vm_tools_version',
        'vm_tools_version_contains': 'vm_tools_version_contains',
        'vm_tools_version_ends_with': 'vm_tools_version_ends_with',
        'vm_tools_version_gt': 'vm_tools_version_gt',
        'vm_tools_version_gte': 'vm_tools_version_gte',
        'vm_tools_version_in': 'vm_tools_version_in',
        'vm_tools_version_lt': 'vm_tools_version_lt',
        'vm_tools_version_lte': 'vm_tools_version_lte',
        'vm_tools_version_not': 'vm_tools_version_not',
        'vm_tools_version_not_contains': 'vm_tools_version_not_contains',
        'vm_tools_version_not_ends_with': 'vm_tools_version_not_ends_with',
        'vm_tools_version_not_in': 'vm_tools_version_not_in',
        'vm_tools_version_not_starts_with': 'vm_tools_version_not_starts_with',
        'vm_tools_version_starts_with': 'vm_tools_version_starts_with',
        'vm_usage': 'vm_usage',
        'vm_usage_in': 'vm_usage_in',
        'vm_usage_not': 'vm_usage_not',
        'vm_usage_not_in': 'vm_usage_not_in',
        'win_opt': 'win_opt',
        'win_opt_not': 'win_opt_not'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """VmWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._backup_plans_every = None
        self._backup_plans_none = None
        self._backup_plans_some = None
        self._bios_uuid = None
        self._bios_uuid_contains = None
        self._bios_uuid_ends_with = None
        self._bios_uuid_gt = None
        self._bios_uuid_gte = None
        self._bios_uuid_in = None
        self._bios_uuid_lt = None
        self._bios_uuid_lte = None
        self._bios_uuid_not = None
        self._bios_uuid_not_contains = None
        self._bios_uuid_not_ends_with = None
        self._bios_uuid_not_in = None
        self._bios_uuid_not_starts_with = None
        self._bios_uuid_starts_with = None
        self._clock_offset = None
        self._clock_offset_in = None
        self._clock_offset_not = None
        self._clock_offset_not_in = None
        self._cloud_init_supported = None
        self._cloud_init_supported_not = None
        self._cluster = None
        self._cpu_model = None
        self._cpu_model_contains = None
        self._cpu_model_ends_with = None
        self._cpu_model_gt = None
        self._cpu_model_gte = None
        self._cpu_model_in = None
        self._cpu_model_lt = None
        self._cpu_model_lte = None
        self._cpu_model_not = None
        self._cpu_model_not_contains = None
        self._cpu_model_not_ends_with = None
        self._cpu_model_not_in = None
        self._cpu_model_not_starts_with = None
        self._cpu_model_starts_with = None
        self._cpu_usage = None
        self._cpu_usage_gt = None
        self._cpu_usage_gte = None
        self._cpu_usage_in = None
        self._cpu_usage_lt = None
        self._cpu_usage_lte = None
        self._cpu_usage_not = None
        self._cpu_usage_not_in = None
        self._deleted_at = None
        self._deleted_at_gt = None
        self._deleted_at_gte = None
        self._deleted_at_in = None
        self._deleted_at_lt = None
        self._deleted_at_lte = None
        self._deleted_at_not = None
        self._deleted_at_not_in = None
        self._description = None
        self._description_contains = None
        self._description_ends_with = None
        self._description_gt = None
        self._description_gte = None
        self._description_in = None
        self._description_lt = None
        self._description_lte = None
        self._description_not = None
        self._description_not_contains = None
        self._description_not_ends_with = None
        self._description_not_in = None
        self._description_not_starts_with = None
        self._description_starts_with = None
        self._dns_servers = None
        self._dns_servers_contains = None
        self._dns_servers_ends_with = None
        self._dns_servers_gt = None
        self._dns_servers_gte = None
        self._dns_servers_in = None
        self._dns_servers_lt = None
        self._dns_servers_lte = None
        self._dns_servers_not = None
        self._dns_servers_not_contains = None
        self._dns_servers_not_ends_with = None
        self._dns_servers_not_in = None
        self._dns_servers_not_starts_with = None
        self._dns_servers_starts_with = None
        self._entity_async_status = None
        self._entity_async_status_in = None
        self._entity_async_status_not = None
        self._entity_async_status_not_in = None
        self._entity_filter_results_every = None
        self._entity_filter_results_none = None
        self._entity_filter_results_some = None
        self._firmware = None
        self._firmware_in = None
        self._firmware_not = None
        self._firmware_not_in = None
        self._folder = None
        self._gpu_devices_every = None
        self._gpu_devices_none = None
        self._gpu_devices_some = None
        self._guest_cpu_model = None
        self._guest_cpu_model_contains = None
        self._guest_cpu_model_ends_with = None
        self._guest_cpu_model_gt = None
        self._guest_cpu_model_gte = None
        self._guest_cpu_model_in = None
        self._guest_cpu_model_lt = None
        self._guest_cpu_model_lte = None
        self._guest_cpu_model_not = None
        self._guest_cpu_model_not_contains = None
        self._guest_cpu_model_not_ends_with = None
        self._guest_cpu_model_not_in = None
        self._guest_cpu_model_not_starts_with = None
        self._guest_cpu_model_starts_with = None
        self._guest_os_type = None
        self._guest_os_type_in = None
        self._guest_os_type_not = None
        self._guest_os_type_not_in = None
        self._guest_size_usage = None
        self._guest_size_usage_gt = None
        self._guest_size_usage_gte = None
        self._guest_size_usage_in = None
        self._guest_size_usage_lt = None
        self._guest_size_usage_lte = None
        self._guest_size_usage_not = None
        self._guest_size_usage_not_in = None
        self._guest_used_size = None
        self._guest_used_size_gt = None
        self._guest_used_size_gte = None
        self._guest_used_size_in = None
        self._guest_used_size_lt = None
        self._guest_used_size_lte = None
        self._guest_used_size_not = None
        self._guest_used_size_not_in = None
        self._ha = None
        self._ha_not = None
        self._host = None
        self._hostname = None
        self._hostname_contains = None
        self._hostname_ends_with = None
        self._hostname_gt = None
        self._hostname_gte = None
        self._hostname_in = None
        self._hostname_lt = None
        self._hostname_lte = None
        self._hostname_not = None
        self._hostname_not_contains = None
        self._hostname_not_ends_with = None
        self._hostname_not_in = None
        self._hostname_not_starts_with = None
        self._hostname_starts_with = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._in_recycle_bin = None
        self._in_recycle_bin_not = None
        self._internal = None
        self._internal_not = None
        self._io_policy = None
        self._io_policy_in = None
        self._io_policy_not = None
        self._io_policy_not_in = None
        self._ips = None
        self._ips_contains = None
        self._ips_ends_with = None
        self._ips_gt = None
        self._ips_gte = None
        self._ips_in = None
        self._ips_lt = None
        self._ips_lte = None
        self._ips_not = None
        self._ips_not_contains = None
        self._ips_not_ends_with = None
        self._ips_not_in = None
        self._ips_not_starts_with = None
        self._ips_starts_with = None
        self._isolation_policy = None
        self._kernel_info = None
        self._kernel_info_contains = None
        self._kernel_info_ends_with = None
        self._kernel_info_gt = None
        self._kernel_info_gte = None
        self._kernel_info_in = None
        self._kernel_info_lt = None
        self._kernel_info_lte = None
        self._kernel_info_not = None
        self._kernel_info_not_contains = None
        self._kernel_info_not_ends_with = None
        self._kernel_info_not_in = None
        self._kernel_info_not_starts_with = None
        self._kernel_info_starts_with = None
        self._labels_every = None
        self._labels_none = None
        self._labels_some = None
        self._last_shutdown_time = None
        self._last_shutdown_time_gt = None
        self._last_shutdown_time_gte = None
        self._last_shutdown_time_in = None
        self._last_shutdown_time_lt = None
        self._last_shutdown_time_lte = None
        self._last_shutdown_time_not = None
        self._last_shutdown_time_not_in = None
        self._local_created_at = None
        self._local_created_at_gt = None
        self._local_created_at_gte = None
        self._local_created_at_in = None
        self._local_created_at_lt = None
        self._local_created_at_lte = None
        self._local_created_at_not = None
        self._local_created_at_not_in = None
        self._local_id = None
        self._local_id_contains = None
        self._local_id_ends_with = None
        self._local_id_gt = None
        self._local_id_gte = None
        self._local_id_in = None
        self._local_id_lt = None
        self._local_id_lte = None
        self._local_id_not = None
        self._local_id_not_contains = None
        self._local_id_not_ends_with = None
        self._local_id_not_in = None
        self._local_id_not_starts_with = None
        self._local_id_starts_with = None
        self._logical_size_bytes = None
        self._logical_size_bytes_gt = None
        self._logical_size_bytes_gte = None
        self._logical_size_bytes_in = None
        self._logical_size_bytes_lt = None
        self._logical_size_bytes_lte = None
        self._logical_size_bytes_not = None
        self._logical_size_bytes_not_in = None
        self._max_bandwidth = None
        self._max_bandwidth_gt = None
        self._max_bandwidth_gte = None
        self._max_bandwidth_in = None
        self._max_bandwidth_lt = None
        self._max_bandwidth_lte = None
        self._max_bandwidth_not = None
        self._max_bandwidth_not_in = None
        self._max_bandwidth_policy = None
        self._max_bandwidth_policy_in = None
        self._max_bandwidth_policy_not = None
        self._max_bandwidth_policy_not_in = None
        self._max_iops = None
        self._max_iops_gt = None
        self._max_iops_gte = None
        self._max_iops_in = None
        self._max_iops_lt = None
        self._max_iops_lte = None
        self._max_iops_not = None
        self._max_iops_not_in = None
        self._max_iops_policy = None
        self._max_iops_policy_in = None
        self._max_iops_policy_not = None
        self._max_iops_policy_not_in = None
        self._memory = None
        self._memory_gt = None
        self._memory_gte = None
        self._memory_in = None
        self._memory_lt = None
        self._memory_lte = None
        self._memory_not = None
        self._memory_not_in = None
        self._memory_usage = None
        self._memory_usage_gt = None
        self._memory_usage_gte = None
        self._memory_usage_in = None
        self._memory_usage_lt = None
        self._memory_usage_lte = None
        self._memory_usage_not = None
        self._memory_usage_not_in = None
        self._name = None
        self._name_contains = None
        self._name_ends_with = None
        self._name_gt = None
        self._name_gte = None
        self._name_in = None
        self._name_lt = None
        self._name_lte = None
        self._name_not = None
        self._name_not_contains = None
        self._name_not_ends_with = None
        self._name_not_in = None
        self._name_not_starts_with = None
        self._name_starts_with = None
        self._nested_virtualization = None
        self._nested_virtualization_not = None
        self._node_ip = None
        self._node_ip_contains = None
        self._node_ip_ends_with = None
        self._node_ip_gt = None
        self._node_ip_gte = None
        self._node_ip_in = None
        self._node_ip_lt = None
        self._node_ip_lte = None
        self._node_ip_not = None
        self._node_ip_not_contains = None
        self._node_ip_not_ends_with = None
        self._node_ip_not_in = None
        self._node_ip_not_starts_with = None
        self._node_ip_starts_with = None
        self._original_name = None
        self._original_name_contains = None
        self._original_name_ends_with = None
        self._original_name_gt = None
        self._original_name_gte = None
        self._original_name_in = None
        self._original_name_lt = None
        self._original_name_lte = None
        self._original_name_not = None
        self._original_name_not_contains = None
        self._original_name_not_ends_with = None
        self._original_name_not_in = None
        self._original_name_not_starts_with = None
        self._original_name_starts_with = None
        self._os = None
        self._os_contains = None
        self._os_ends_with = None
        self._os_gt = None
        self._os_gte = None
        self._os_in = None
        self._os_lt = None
        self._os_lte = None
        self._os_not = None
        self._os_not_contains = None
        self._os_not_ends_with = None
        self._os_not_in = None
        self._os_not_starts_with = None
        self._os_starts_with = None
        self._pci_nics_every = None
        self._pci_nics_none = None
        self._pci_nics_some = None
        self._protected = None
        self._protected_not = None
        self._provisioned_size = None
        self._provisioned_size_gt = None
        self._provisioned_size_gte = None
        self._provisioned_size_in = None
        self._provisioned_size_lt = None
        self._provisioned_size_lte = None
        self._provisioned_size_not = None
        self._provisioned_size_not_in = None
        self._size = None
        self._size_gt = None
        self._size_gte = None
        self._size_in = None
        self._size_lt = None
        self._size_lte = None
        self._size_not = None
        self._size_not_in = None
        self._snapshot_plan = None
        self._snapshots_every = None
        self._snapshots_none = None
        self._snapshots_some = None
        self._status = None
        self._status_in = None
        self._status_not = None
        self._status_not_in = None
        self._unique_logical_size = None
        self._unique_logical_size_gt = None
        self._unique_logical_size_gte = None
        self._unique_logical_size_in = None
        self._unique_logical_size_lt = None
        self._unique_logical_size_lte = None
        self._unique_logical_size_not = None
        self._unique_logical_size_not_in = None
        self._unique_size = None
        self._unique_size_gt = None
        self._unique_size_gte = None
        self._unique_size_in = None
        self._unique_size_lt = None
        self._unique_size_lte = None
        self._unique_size_not = None
        self._unique_size_not_in = None
        self._usb_devices_every = None
        self._usb_devices_none = None
        self._usb_devices_some = None
        self._used_size = None
        self._used_size_gt = None
        self._used_size_gte = None
        self._used_size_in = None
        self._used_size_lt = None
        self._used_size_lte = None
        self._used_size_not = None
        self._used_size_not_in = None
        self._used_size_usage = None
        self._used_size_usage_gt = None
        self._used_size_usage_gte = None
        self._used_size_usage_in = None
        self._used_size_usage_lt = None
        self._used_size_usage_lte = None
        self._used_size_usage_not = None
        self._used_size_usage_not_in = None
        self._vcpu = None
        self._vcpu_gt = None
        self._vcpu_gte = None
        self._vcpu_in = None
        self._vcpu_lt = None
        self._vcpu_lte = None
        self._vcpu_not = None
        self._vcpu_not_in = None
        self._video_type = None
        self._video_type_in = None
        self._video_type_not = None
        self._video_type_not_in = None
        self._vm_disks_every = None
        self._vm_disks_none = None
        self._vm_disks_some = None
        self._vm_nics_every = None
        self._vm_nics_none = None
        self._vm_nics_some = None
        self._vm_placement_group_every = None
        self._vm_placement_group_none = None
        self._vm_placement_group_some = None
        self._vm_tools_status = None
        self._vm_tools_status_in = None
        self._vm_tools_status_not = None
        self._vm_tools_status_not_in = None
        self._vm_tools_version = None
        self._vm_tools_version_contains = None
        self._vm_tools_version_ends_with = None
        self._vm_tools_version_gt = None
        self._vm_tools_version_gte = None
        self._vm_tools_version_in = None
        self._vm_tools_version_lt = None
        self._vm_tools_version_lte = None
        self._vm_tools_version_not = None
        self._vm_tools_version_not_contains = None
        self._vm_tools_version_not_ends_with = None
        self._vm_tools_version_not_in = None
        self._vm_tools_version_not_starts_with = None
        self._vm_tools_version_starts_with = None
        self._vm_usage = None
        self._vm_usage_in = None
        self._vm_usage_not = None
        self._vm_usage_not_in = None
        self._win_opt = None
        self._win_opt_not = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.backup_plans_every = kwargs.get("backup_plans_every", None)
        self.backup_plans_none = kwargs.get("backup_plans_none", None)
        self.backup_plans_some = kwargs.get("backup_plans_some", None)
        self.bios_uuid = kwargs.get("bios_uuid", None)
        self.bios_uuid_contains = kwargs.get("bios_uuid_contains", None)
        self.bios_uuid_ends_with = kwargs.get("bios_uuid_ends_with", None)
        self.bios_uuid_gt = kwargs.get("bios_uuid_gt", None)
        self.bios_uuid_gte = kwargs.get("bios_uuid_gte", None)
        self.bios_uuid_in = kwargs.get("bios_uuid_in", None)
        self.bios_uuid_lt = kwargs.get("bios_uuid_lt", None)
        self.bios_uuid_lte = kwargs.get("bios_uuid_lte", None)
        self.bios_uuid_not = kwargs.get("bios_uuid_not", None)
        self.bios_uuid_not_contains = kwargs.get("bios_uuid_not_contains", None)
        self.bios_uuid_not_ends_with = kwargs.get("bios_uuid_not_ends_with", None)
        self.bios_uuid_not_in = kwargs.get("bios_uuid_not_in", None)
        self.bios_uuid_not_starts_with = kwargs.get("bios_uuid_not_starts_with", None)
        self.bios_uuid_starts_with = kwargs.get("bios_uuid_starts_with", None)
        self.clock_offset = kwargs.get("clock_offset", None)
        self.clock_offset_in = kwargs.get("clock_offset_in", None)
        self.clock_offset_not = kwargs.get("clock_offset_not", None)
        self.clock_offset_not_in = kwargs.get("clock_offset_not_in", None)
        self.cloud_init_supported = kwargs.get("cloud_init_supported", None)
        self.cloud_init_supported_not = kwargs.get("cloud_init_supported_not", None)
        self.cluster = kwargs.get("cluster", None)
        self.cpu_model = kwargs.get("cpu_model", None)
        self.cpu_model_contains = kwargs.get("cpu_model_contains", None)
        self.cpu_model_ends_with = kwargs.get("cpu_model_ends_with", None)
        self.cpu_model_gt = kwargs.get("cpu_model_gt", None)
        self.cpu_model_gte = kwargs.get("cpu_model_gte", None)
        self.cpu_model_in = kwargs.get("cpu_model_in", None)
        self.cpu_model_lt = kwargs.get("cpu_model_lt", None)
        self.cpu_model_lte = kwargs.get("cpu_model_lte", None)
        self.cpu_model_not = kwargs.get("cpu_model_not", None)
        self.cpu_model_not_contains = kwargs.get("cpu_model_not_contains", None)
        self.cpu_model_not_ends_with = kwargs.get("cpu_model_not_ends_with", None)
        self.cpu_model_not_in = kwargs.get("cpu_model_not_in", None)
        self.cpu_model_not_starts_with = kwargs.get("cpu_model_not_starts_with", None)
        self.cpu_model_starts_with = kwargs.get("cpu_model_starts_with", None)
        self.cpu_usage = kwargs.get("cpu_usage", None)
        self.cpu_usage_gt = kwargs.get("cpu_usage_gt", None)
        self.cpu_usage_gte = kwargs.get("cpu_usage_gte", None)
        self.cpu_usage_in = kwargs.get("cpu_usage_in", None)
        self.cpu_usage_lt = kwargs.get("cpu_usage_lt", None)
        self.cpu_usage_lte = kwargs.get("cpu_usage_lte", None)
        self.cpu_usage_not = kwargs.get("cpu_usage_not", None)
        self.cpu_usage_not_in = kwargs.get("cpu_usage_not_in", None)
        self.deleted_at = kwargs.get("deleted_at", None)
        self.deleted_at_gt = kwargs.get("deleted_at_gt", None)
        self.deleted_at_gte = kwargs.get("deleted_at_gte", None)
        self.deleted_at_in = kwargs.get("deleted_at_in", None)
        self.deleted_at_lt = kwargs.get("deleted_at_lt", None)
        self.deleted_at_lte = kwargs.get("deleted_at_lte", None)
        self.deleted_at_not = kwargs.get("deleted_at_not", None)
        self.deleted_at_not_in = kwargs.get("deleted_at_not_in", None)
        self.description = kwargs.get("description", None)
        self.description_contains = kwargs.get("description_contains", None)
        self.description_ends_with = kwargs.get("description_ends_with", None)
        self.description_gt = kwargs.get("description_gt", None)
        self.description_gte = kwargs.get("description_gte", None)
        self.description_in = kwargs.get("description_in", None)
        self.description_lt = kwargs.get("description_lt", None)
        self.description_lte = kwargs.get("description_lte", None)
        self.description_not = kwargs.get("description_not", None)
        self.description_not_contains = kwargs.get("description_not_contains", None)
        self.description_not_ends_with = kwargs.get("description_not_ends_with", None)
        self.description_not_in = kwargs.get("description_not_in", None)
        self.description_not_starts_with = kwargs.get("description_not_starts_with", None)
        self.description_starts_with = kwargs.get("description_starts_with", None)
        self.dns_servers = kwargs.get("dns_servers", None)
        self.dns_servers_contains = kwargs.get("dns_servers_contains", None)
        self.dns_servers_ends_with = kwargs.get("dns_servers_ends_with", None)
        self.dns_servers_gt = kwargs.get("dns_servers_gt", None)
        self.dns_servers_gte = kwargs.get("dns_servers_gte", None)
        self.dns_servers_in = kwargs.get("dns_servers_in", None)
        self.dns_servers_lt = kwargs.get("dns_servers_lt", None)
        self.dns_servers_lte = kwargs.get("dns_servers_lte", None)
        self.dns_servers_not = kwargs.get("dns_servers_not", None)
        self.dns_servers_not_contains = kwargs.get("dns_servers_not_contains", None)
        self.dns_servers_not_ends_with = kwargs.get("dns_servers_not_ends_with", None)
        self.dns_servers_not_in = kwargs.get("dns_servers_not_in", None)
        self.dns_servers_not_starts_with = kwargs.get("dns_servers_not_starts_with", None)
        self.dns_servers_starts_with = kwargs.get("dns_servers_starts_with", None)
        self.entity_async_status = kwargs.get("entity_async_status", None)
        self.entity_async_status_in = kwargs.get("entity_async_status_in", None)
        self.entity_async_status_not = kwargs.get("entity_async_status_not", None)
        self.entity_async_status_not_in = kwargs.get("entity_async_status_not_in", None)
        self.entity_filter_results_every = kwargs.get("entity_filter_results_every", None)
        self.entity_filter_results_none = kwargs.get("entity_filter_results_none", None)
        self.entity_filter_results_some = kwargs.get("entity_filter_results_some", None)
        self.firmware = kwargs.get("firmware", None)
        self.firmware_in = kwargs.get("firmware_in", None)
        self.firmware_not = kwargs.get("firmware_not", None)
        self.firmware_not_in = kwargs.get("firmware_not_in", None)
        self.folder = kwargs.get("folder", None)
        self.gpu_devices_every = kwargs.get("gpu_devices_every", None)
        self.gpu_devices_none = kwargs.get("gpu_devices_none", None)
        self.gpu_devices_some = kwargs.get("gpu_devices_some", None)
        self.guest_cpu_model = kwargs.get("guest_cpu_model", None)
        self.guest_cpu_model_contains = kwargs.get("guest_cpu_model_contains", None)
        self.guest_cpu_model_ends_with = kwargs.get("guest_cpu_model_ends_with", None)
        self.guest_cpu_model_gt = kwargs.get("guest_cpu_model_gt", None)
        self.guest_cpu_model_gte = kwargs.get("guest_cpu_model_gte", None)
        self.guest_cpu_model_in = kwargs.get("guest_cpu_model_in", None)
        self.guest_cpu_model_lt = kwargs.get("guest_cpu_model_lt", None)
        self.guest_cpu_model_lte = kwargs.get("guest_cpu_model_lte", None)
        self.guest_cpu_model_not = kwargs.get("guest_cpu_model_not", None)
        self.guest_cpu_model_not_contains = kwargs.get("guest_cpu_model_not_contains", None)
        self.guest_cpu_model_not_ends_with = kwargs.get("guest_cpu_model_not_ends_with", None)
        self.guest_cpu_model_not_in = kwargs.get("guest_cpu_model_not_in", None)
        self.guest_cpu_model_not_starts_with = kwargs.get("guest_cpu_model_not_starts_with", None)
        self.guest_cpu_model_starts_with = kwargs.get("guest_cpu_model_starts_with", None)
        self.guest_os_type = kwargs.get("guest_os_type", None)
        self.guest_os_type_in = kwargs.get("guest_os_type_in", None)
        self.guest_os_type_not = kwargs.get("guest_os_type_not", None)
        self.guest_os_type_not_in = kwargs.get("guest_os_type_not_in", None)
        self.guest_size_usage = kwargs.get("guest_size_usage", None)
        self.guest_size_usage_gt = kwargs.get("guest_size_usage_gt", None)
        self.guest_size_usage_gte = kwargs.get("guest_size_usage_gte", None)
        self.guest_size_usage_in = kwargs.get("guest_size_usage_in", None)
        self.guest_size_usage_lt = kwargs.get("guest_size_usage_lt", None)
        self.guest_size_usage_lte = kwargs.get("guest_size_usage_lte", None)
        self.guest_size_usage_not = kwargs.get("guest_size_usage_not", None)
        self.guest_size_usage_not_in = kwargs.get("guest_size_usage_not_in", None)
        self.guest_used_size = kwargs.get("guest_used_size", None)
        self.guest_used_size_gt = kwargs.get("guest_used_size_gt", None)
        self.guest_used_size_gte = kwargs.get("guest_used_size_gte", None)
        self.guest_used_size_in = kwargs.get("guest_used_size_in", None)
        self.guest_used_size_lt = kwargs.get("guest_used_size_lt", None)
        self.guest_used_size_lte = kwargs.get("guest_used_size_lte", None)
        self.guest_used_size_not = kwargs.get("guest_used_size_not", None)
        self.guest_used_size_not_in = kwargs.get("guest_used_size_not_in", None)
        self.ha = kwargs.get("ha", None)
        self.ha_not = kwargs.get("ha_not", None)
        self.host = kwargs.get("host", None)
        self.hostname = kwargs.get("hostname", None)
        self.hostname_contains = kwargs.get("hostname_contains", None)
        self.hostname_ends_with = kwargs.get("hostname_ends_with", None)
        self.hostname_gt = kwargs.get("hostname_gt", None)
        self.hostname_gte = kwargs.get("hostname_gte", None)
        self.hostname_in = kwargs.get("hostname_in", None)
        self.hostname_lt = kwargs.get("hostname_lt", None)
        self.hostname_lte = kwargs.get("hostname_lte", None)
        self.hostname_not = kwargs.get("hostname_not", None)
        self.hostname_not_contains = kwargs.get("hostname_not_contains", None)
        self.hostname_not_ends_with = kwargs.get("hostname_not_ends_with", None)
        self.hostname_not_in = kwargs.get("hostname_not_in", None)
        self.hostname_not_starts_with = kwargs.get("hostname_not_starts_with", None)
        self.hostname_starts_with = kwargs.get("hostname_starts_with", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.in_recycle_bin = kwargs.get("in_recycle_bin", None)
        self.in_recycle_bin_not = kwargs.get("in_recycle_bin_not", None)
        self.internal = kwargs.get("internal", None)
        self.internal_not = kwargs.get("internal_not", None)
        self.io_policy = kwargs.get("io_policy", None)
        self.io_policy_in = kwargs.get("io_policy_in", None)
        self.io_policy_not = kwargs.get("io_policy_not", None)
        self.io_policy_not_in = kwargs.get("io_policy_not_in", None)
        self.ips = kwargs.get("ips", None)
        self.ips_contains = kwargs.get("ips_contains", None)
        self.ips_ends_with = kwargs.get("ips_ends_with", None)
        self.ips_gt = kwargs.get("ips_gt", None)
        self.ips_gte = kwargs.get("ips_gte", None)
        self.ips_in = kwargs.get("ips_in", None)
        self.ips_lt = kwargs.get("ips_lt", None)
        self.ips_lte = kwargs.get("ips_lte", None)
        self.ips_not = kwargs.get("ips_not", None)
        self.ips_not_contains = kwargs.get("ips_not_contains", None)
        self.ips_not_ends_with = kwargs.get("ips_not_ends_with", None)
        self.ips_not_in = kwargs.get("ips_not_in", None)
        self.ips_not_starts_with = kwargs.get("ips_not_starts_with", None)
        self.ips_starts_with = kwargs.get("ips_starts_with", None)
        self.isolation_policy = kwargs.get("isolation_policy", None)
        self.kernel_info = kwargs.get("kernel_info", None)
        self.kernel_info_contains = kwargs.get("kernel_info_contains", None)
        self.kernel_info_ends_with = kwargs.get("kernel_info_ends_with", None)
        self.kernel_info_gt = kwargs.get("kernel_info_gt", None)
        self.kernel_info_gte = kwargs.get("kernel_info_gte", None)
        self.kernel_info_in = kwargs.get("kernel_info_in", None)
        self.kernel_info_lt = kwargs.get("kernel_info_lt", None)
        self.kernel_info_lte = kwargs.get("kernel_info_lte", None)
        self.kernel_info_not = kwargs.get("kernel_info_not", None)
        self.kernel_info_not_contains = kwargs.get("kernel_info_not_contains", None)
        self.kernel_info_not_ends_with = kwargs.get("kernel_info_not_ends_with", None)
        self.kernel_info_not_in = kwargs.get("kernel_info_not_in", None)
        self.kernel_info_not_starts_with = kwargs.get("kernel_info_not_starts_with", None)
        self.kernel_info_starts_with = kwargs.get("kernel_info_starts_with", None)
        self.labels_every = kwargs.get("labels_every", None)
        self.labels_none = kwargs.get("labels_none", None)
        self.labels_some = kwargs.get("labels_some", None)
        self.last_shutdown_time = kwargs.get("last_shutdown_time", None)
        self.last_shutdown_time_gt = kwargs.get("last_shutdown_time_gt", None)
        self.last_shutdown_time_gte = kwargs.get("last_shutdown_time_gte", None)
        self.last_shutdown_time_in = kwargs.get("last_shutdown_time_in", None)
        self.last_shutdown_time_lt = kwargs.get("last_shutdown_time_lt", None)
        self.last_shutdown_time_lte = kwargs.get("last_shutdown_time_lte", None)
        self.last_shutdown_time_not = kwargs.get("last_shutdown_time_not", None)
        self.last_shutdown_time_not_in = kwargs.get("last_shutdown_time_not_in", None)
        self.local_created_at = kwargs.get("local_created_at", None)
        self.local_created_at_gt = kwargs.get("local_created_at_gt", None)
        self.local_created_at_gte = kwargs.get("local_created_at_gte", None)
        self.local_created_at_in = kwargs.get("local_created_at_in", None)
        self.local_created_at_lt = kwargs.get("local_created_at_lt", None)
        self.local_created_at_lte = kwargs.get("local_created_at_lte", None)
        self.local_created_at_not = kwargs.get("local_created_at_not", None)
        self.local_created_at_not_in = kwargs.get("local_created_at_not_in", None)
        self.local_id = kwargs.get("local_id", None)
        self.local_id_contains = kwargs.get("local_id_contains", None)
        self.local_id_ends_with = kwargs.get("local_id_ends_with", None)
        self.local_id_gt = kwargs.get("local_id_gt", None)
        self.local_id_gte = kwargs.get("local_id_gte", None)
        self.local_id_in = kwargs.get("local_id_in", None)
        self.local_id_lt = kwargs.get("local_id_lt", None)
        self.local_id_lte = kwargs.get("local_id_lte", None)
        self.local_id_not = kwargs.get("local_id_not", None)
        self.local_id_not_contains = kwargs.get("local_id_not_contains", None)
        self.local_id_not_ends_with = kwargs.get("local_id_not_ends_with", None)
        self.local_id_not_in = kwargs.get("local_id_not_in", None)
        self.local_id_not_starts_with = kwargs.get("local_id_not_starts_with", None)
        self.local_id_starts_with = kwargs.get("local_id_starts_with", None)
        self.logical_size_bytes = kwargs.get("logical_size_bytes", None)
        self.logical_size_bytes_gt = kwargs.get("logical_size_bytes_gt", None)
        self.logical_size_bytes_gte = kwargs.get("logical_size_bytes_gte", None)
        self.logical_size_bytes_in = kwargs.get("logical_size_bytes_in", None)
        self.logical_size_bytes_lt = kwargs.get("logical_size_bytes_lt", None)
        self.logical_size_bytes_lte = kwargs.get("logical_size_bytes_lte", None)
        self.logical_size_bytes_not = kwargs.get("logical_size_bytes_not", None)
        self.logical_size_bytes_not_in = kwargs.get("logical_size_bytes_not_in", None)
        self.max_bandwidth = kwargs.get("max_bandwidth", None)
        self.max_bandwidth_gt = kwargs.get("max_bandwidth_gt", None)
        self.max_bandwidth_gte = kwargs.get("max_bandwidth_gte", None)
        self.max_bandwidth_in = kwargs.get("max_bandwidth_in", None)
        self.max_bandwidth_lt = kwargs.get("max_bandwidth_lt", None)
        self.max_bandwidth_lte = kwargs.get("max_bandwidth_lte", None)
        self.max_bandwidth_not = kwargs.get("max_bandwidth_not", None)
        self.max_bandwidth_not_in = kwargs.get("max_bandwidth_not_in", None)
        self.max_bandwidth_policy = kwargs.get("max_bandwidth_policy", None)
        self.max_bandwidth_policy_in = kwargs.get("max_bandwidth_policy_in", None)
        self.max_bandwidth_policy_not = kwargs.get("max_bandwidth_policy_not", None)
        self.max_bandwidth_policy_not_in = kwargs.get("max_bandwidth_policy_not_in", None)
        self.max_iops = kwargs.get("max_iops", None)
        self.max_iops_gt = kwargs.get("max_iops_gt", None)
        self.max_iops_gte = kwargs.get("max_iops_gte", None)
        self.max_iops_in = kwargs.get("max_iops_in", None)
        self.max_iops_lt = kwargs.get("max_iops_lt", None)
        self.max_iops_lte = kwargs.get("max_iops_lte", None)
        self.max_iops_not = kwargs.get("max_iops_not", None)
        self.max_iops_not_in = kwargs.get("max_iops_not_in", None)
        self.max_iops_policy = kwargs.get("max_iops_policy", None)
        self.max_iops_policy_in = kwargs.get("max_iops_policy_in", None)
        self.max_iops_policy_not = kwargs.get("max_iops_policy_not", None)
        self.max_iops_policy_not_in = kwargs.get("max_iops_policy_not_in", None)
        self.memory = kwargs.get("memory", None)
        self.memory_gt = kwargs.get("memory_gt", None)
        self.memory_gte = kwargs.get("memory_gte", None)
        self.memory_in = kwargs.get("memory_in", None)
        self.memory_lt = kwargs.get("memory_lt", None)
        self.memory_lte = kwargs.get("memory_lte", None)
        self.memory_not = kwargs.get("memory_not", None)
        self.memory_not_in = kwargs.get("memory_not_in", None)
        self.memory_usage = kwargs.get("memory_usage", None)
        self.memory_usage_gt = kwargs.get("memory_usage_gt", None)
        self.memory_usage_gte = kwargs.get("memory_usage_gte", None)
        self.memory_usage_in = kwargs.get("memory_usage_in", None)
        self.memory_usage_lt = kwargs.get("memory_usage_lt", None)
        self.memory_usage_lte = kwargs.get("memory_usage_lte", None)
        self.memory_usage_not = kwargs.get("memory_usage_not", None)
        self.memory_usage_not_in = kwargs.get("memory_usage_not_in", None)
        self.name = kwargs.get("name", None)
        self.name_contains = kwargs.get("name_contains", None)
        self.name_ends_with = kwargs.get("name_ends_with", None)
        self.name_gt = kwargs.get("name_gt", None)
        self.name_gte = kwargs.get("name_gte", None)
        self.name_in = kwargs.get("name_in", None)
        self.name_lt = kwargs.get("name_lt", None)
        self.name_lte = kwargs.get("name_lte", None)
        self.name_not = kwargs.get("name_not", None)
        self.name_not_contains = kwargs.get("name_not_contains", None)
        self.name_not_ends_with = kwargs.get("name_not_ends_with", None)
        self.name_not_in = kwargs.get("name_not_in", None)
        self.name_not_starts_with = kwargs.get("name_not_starts_with", None)
        self.name_starts_with = kwargs.get("name_starts_with", None)
        self.nested_virtualization = kwargs.get("nested_virtualization", None)
        self.nested_virtualization_not = kwargs.get("nested_virtualization_not", None)
        self.node_ip = kwargs.get("node_ip", None)
        self.node_ip_contains = kwargs.get("node_ip_contains", None)
        self.node_ip_ends_with = kwargs.get("node_ip_ends_with", None)
        self.node_ip_gt = kwargs.get("node_ip_gt", None)
        self.node_ip_gte = kwargs.get("node_ip_gte", None)
        self.node_ip_in = kwargs.get("node_ip_in", None)
        self.node_ip_lt = kwargs.get("node_ip_lt", None)
        self.node_ip_lte = kwargs.get("node_ip_lte", None)
        self.node_ip_not = kwargs.get("node_ip_not", None)
        self.node_ip_not_contains = kwargs.get("node_ip_not_contains", None)
        self.node_ip_not_ends_with = kwargs.get("node_ip_not_ends_with", None)
        self.node_ip_not_in = kwargs.get("node_ip_not_in", None)
        self.node_ip_not_starts_with = kwargs.get("node_ip_not_starts_with", None)
        self.node_ip_starts_with = kwargs.get("node_ip_starts_with", None)
        self.original_name = kwargs.get("original_name", None)
        self.original_name_contains = kwargs.get("original_name_contains", None)
        self.original_name_ends_with = kwargs.get("original_name_ends_with", None)
        self.original_name_gt = kwargs.get("original_name_gt", None)
        self.original_name_gte = kwargs.get("original_name_gte", None)
        self.original_name_in = kwargs.get("original_name_in", None)
        self.original_name_lt = kwargs.get("original_name_lt", None)
        self.original_name_lte = kwargs.get("original_name_lte", None)
        self.original_name_not = kwargs.get("original_name_not", None)
        self.original_name_not_contains = kwargs.get("original_name_not_contains", None)
        self.original_name_not_ends_with = kwargs.get("original_name_not_ends_with", None)
        self.original_name_not_in = kwargs.get("original_name_not_in", None)
        self.original_name_not_starts_with = kwargs.get("original_name_not_starts_with", None)
        self.original_name_starts_with = kwargs.get("original_name_starts_with", None)
        self.os = kwargs.get("os", None)
        self.os_contains = kwargs.get("os_contains", None)
        self.os_ends_with = kwargs.get("os_ends_with", None)
        self.os_gt = kwargs.get("os_gt", None)
        self.os_gte = kwargs.get("os_gte", None)
        self.os_in = kwargs.get("os_in", None)
        self.os_lt = kwargs.get("os_lt", None)
        self.os_lte = kwargs.get("os_lte", None)
        self.os_not = kwargs.get("os_not", None)
        self.os_not_contains = kwargs.get("os_not_contains", None)
        self.os_not_ends_with = kwargs.get("os_not_ends_with", None)
        self.os_not_in = kwargs.get("os_not_in", None)
        self.os_not_starts_with = kwargs.get("os_not_starts_with", None)
        self.os_starts_with = kwargs.get("os_starts_with", None)
        self.pci_nics_every = kwargs.get("pci_nics_every", None)
        self.pci_nics_none = kwargs.get("pci_nics_none", None)
        self.pci_nics_some = kwargs.get("pci_nics_some", None)
        self.protected = kwargs.get("protected", None)
        self.protected_not = kwargs.get("protected_not", None)
        self.provisioned_size = kwargs.get("provisioned_size", None)
        self.provisioned_size_gt = kwargs.get("provisioned_size_gt", None)
        self.provisioned_size_gte = kwargs.get("provisioned_size_gte", None)
        self.provisioned_size_in = kwargs.get("provisioned_size_in", None)
        self.provisioned_size_lt = kwargs.get("provisioned_size_lt", None)
        self.provisioned_size_lte = kwargs.get("provisioned_size_lte", None)
        self.provisioned_size_not = kwargs.get("provisioned_size_not", None)
        self.provisioned_size_not_in = kwargs.get("provisioned_size_not_in", None)
        self.size = kwargs.get("size", None)
        self.size_gt = kwargs.get("size_gt", None)
        self.size_gte = kwargs.get("size_gte", None)
        self.size_in = kwargs.get("size_in", None)
        self.size_lt = kwargs.get("size_lt", None)
        self.size_lte = kwargs.get("size_lte", None)
        self.size_not = kwargs.get("size_not", None)
        self.size_not_in = kwargs.get("size_not_in", None)
        self.snapshot_plan = kwargs.get("snapshot_plan", None)
        self.snapshots_every = kwargs.get("snapshots_every", None)
        self.snapshots_none = kwargs.get("snapshots_none", None)
        self.snapshots_some = kwargs.get("snapshots_some", None)
        self.status = kwargs.get("status", None)
        self.status_in = kwargs.get("status_in", None)
        self.status_not = kwargs.get("status_not", None)
        self.status_not_in = kwargs.get("status_not_in", None)
        self.unique_logical_size = kwargs.get("unique_logical_size", None)
        self.unique_logical_size_gt = kwargs.get("unique_logical_size_gt", None)
        self.unique_logical_size_gte = kwargs.get("unique_logical_size_gte", None)
        self.unique_logical_size_in = kwargs.get("unique_logical_size_in", None)
        self.unique_logical_size_lt = kwargs.get("unique_logical_size_lt", None)
        self.unique_logical_size_lte = kwargs.get("unique_logical_size_lte", None)
        self.unique_logical_size_not = kwargs.get("unique_logical_size_not", None)
        self.unique_logical_size_not_in = kwargs.get("unique_logical_size_not_in", None)
        self.unique_size = kwargs.get("unique_size", None)
        self.unique_size_gt = kwargs.get("unique_size_gt", None)
        self.unique_size_gte = kwargs.get("unique_size_gte", None)
        self.unique_size_in = kwargs.get("unique_size_in", None)
        self.unique_size_lt = kwargs.get("unique_size_lt", None)
        self.unique_size_lte = kwargs.get("unique_size_lte", None)
        self.unique_size_not = kwargs.get("unique_size_not", None)
        self.unique_size_not_in = kwargs.get("unique_size_not_in", None)
        self.usb_devices_every = kwargs.get("usb_devices_every", None)
        self.usb_devices_none = kwargs.get("usb_devices_none", None)
        self.usb_devices_some = kwargs.get("usb_devices_some", None)
        self.used_size = kwargs.get("used_size", None)
        self.used_size_gt = kwargs.get("used_size_gt", None)
        self.used_size_gte = kwargs.get("used_size_gte", None)
        self.used_size_in = kwargs.get("used_size_in", None)
        self.used_size_lt = kwargs.get("used_size_lt", None)
        self.used_size_lte = kwargs.get("used_size_lte", None)
        self.used_size_not = kwargs.get("used_size_not", None)
        self.used_size_not_in = kwargs.get("used_size_not_in", None)
        self.used_size_usage = kwargs.get("used_size_usage", None)
        self.used_size_usage_gt = kwargs.get("used_size_usage_gt", None)
        self.used_size_usage_gte = kwargs.get("used_size_usage_gte", None)
        self.used_size_usage_in = kwargs.get("used_size_usage_in", None)
        self.used_size_usage_lt = kwargs.get("used_size_usage_lt", None)
        self.used_size_usage_lte = kwargs.get("used_size_usage_lte", None)
        self.used_size_usage_not = kwargs.get("used_size_usage_not", None)
        self.used_size_usage_not_in = kwargs.get("used_size_usage_not_in", None)
        self.vcpu = kwargs.get("vcpu", None)
        self.vcpu_gt = kwargs.get("vcpu_gt", None)
        self.vcpu_gte = kwargs.get("vcpu_gte", None)
        self.vcpu_in = kwargs.get("vcpu_in", None)
        self.vcpu_lt = kwargs.get("vcpu_lt", None)
        self.vcpu_lte = kwargs.get("vcpu_lte", None)
        self.vcpu_not = kwargs.get("vcpu_not", None)
        self.vcpu_not_in = kwargs.get("vcpu_not_in", None)
        self.video_type = kwargs.get("video_type", None)
        self.video_type_in = kwargs.get("video_type_in", None)
        self.video_type_not = kwargs.get("video_type_not", None)
        self.video_type_not_in = kwargs.get("video_type_not_in", None)
        self.vm_disks_every = kwargs.get("vm_disks_every", None)
        self.vm_disks_none = kwargs.get("vm_disks_none", None)
        self.vm_disks_some = kwargs.get("vm_disks_some", None)
        self.vm_nics_every = kwargs.get("vm_nics_every", None)
        self.vm_nics_none = kwargs.get("vm_nics_none", None)
        self.vm_nics_some = kwargs.get("vm_nics_some", None)
        self.vm_placement_group_every = kwargs.get("vm_placement_group_every", None)
        self.vm_placement_group_none = kwargs.get("vm_placement_group_none", None)
        self.vm_placement_group_some = kwargs.get("vm_placement_group_some", None)
        self.vm_tools_status = kwargs.get("vm_tools_status", None)
        self.vm_tools_status_in = kwargs.get("vm_tools_status_in", None)
        self.vm_tools_status_not = kwargs.get("vm_tools_status_not", None)
        self.vm_tools_status_not_in = kwargs.get("vm_tools_status_not_in", None)
        self.vm_tools_version = kwargs.get("vm_tools_version", None)
        self.vm_tools_version_contains = kwargs.get("vm_tools_version_contains", None)
        self.vm_tools_version_ends_with = kwargs.get("vm_tools_version_ends_with", None)
        self.vm_tools_version_gt = kwargs.get("vm_tools_version_gt", None)
        self.vm_tools_version_gte = kwargs.get("vm_tools_version_gte", None)
        self.vm_tools_version_in = kwargs.get("vm_tools_version_in", None)
        self.vm_tools_version_lt = kwargs.get("vm_tools_version_lt", None)
        self.vm_tools_version_lte = kwargs.get("vm_tools_version_lte", None)
        self.vm_tools_version_not = kwargs.get("vm_tools_version_not", None)
        self.vm_tools_version_not_contains = kwargs.get("vm_tools_version_not_contains", None)
        self.vm_tools_version_not_ends_with = kwargs.get("vm_tools_version_not_ends_with", None)
        self.vm_tools_version_not_in = kwargs.get("vm_tools_version_not_in", None)
        self.vm_tools_version_not_starts_with = kwargs.get("vm_tools_version_not_starts_with", None)
        self.vm_tools_version_starts_with = kwargs.get("vm_tools_version_starts_with", None)
        self.vm_usage = kwargs.get("vm_usage", None)
        self.vm_usage_in = kwargs.get("vm_usage_in", None)
        self.vm_usage_not = kwargs.get("vm_usage_not", None)
        self.vm_usage_not_in = kwargs.get("vm_usage_not_in", None)
        self.win_opt = kwargs.get("win_opt", None)
        self.win_opt_not = kwargs.get("win_opt_not", None)

    @property
    def _and(self):
        """Gets the _and of this VmWhereInput.  # noqa: E501


        :return: The _and of this VmWhereInput.  # noqa: E501
        :rtype: list[VmWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this VmWhereInput.


        :param _and: The _and of this VmWhereInput.  # noqa: E501
        :type _and: list[VmWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this VmWhereInput.  # noqa: E501


        :return: The _not of this VmWhereInput.  # noqa: E501
        :rtype: list[VmWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this VmWhereInput.


        :param _not: The _not of this VmWhereInput.  # noqa: E501
        :type _not: list[VmWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this VmWhereInput.  # noqa: E501


        :return: The _or of this VmWhereInput.  # noqa: E501
        :rtype: list[VmWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this VmWhereInput.


        :param _or: The _or of this VmWhereInput.  # noqa: E501
        :type _or: list[VmWhereInput]
        """

        self.__or = _or

    @property
    def backup_plans_every(self):
        """Gets the backup_plans_every of this VmWhereInput.  # noqa: E501


        :return: The backup_plans_every of this VmWhereInput.  # noqa: E501
        :rtype: BackupPlanWhereInput
        """
        return self._backup_plans_every

    @backup_plans_every.setter
    def backup_plans_every(self, backup_plans_every):
        """Sets the backup_plans_every of this VmWhereInput.


        :param backup_plans_every: The backup_plans_every of this VmWhereInput.  # noqa: E501
        :type backup_plans_every: BackupPlanWhereInput
        """

        self._backup_plans_every = backup_plans_every

    @property
    def backup_plans_none(self):
        """Gets the backup_plans_none of this VmWhereInput.  # noqa: E501


        :return: The backup_plans_none of this VmWhereInput.  # noqa: E501
        :rtype: BackupPlanWhereInput
        """
        return self._backup_plans_none

    @backup_plans_none.setter
    def backup_plans_none(self, backup_plans_none):
        """Sets the backup_plans_none of this VmWhereInput.


        :param backup_plans_none: The backup_plans_none of this VmWhereInput.  # noqa: E501
        :type backup_plans_none: BackupPlanWhereInput
        """

        self._backup_plans_none = backup_plans_none

    @property
    def backup_plans_some(self):
        """Gets the backup_plans_some of this VmWhereInput.  # noqa: E501


        :return: The backup_plans_some of this VmWhereInput.  # noqa: E501
        :rtype: BackupPlanWhereInput
        """
        return self._backup_plans_some

    @backup_plans_some.setter
    def backup_plans_some(self, backup_plans_some):
        """Sets the backup_plans_some of this VmWhereInput.


        :param backup_plans_some: The backup_plans_some of this VmWhereInput.  # noqa: E501
        :type backup_plans_some: BackupPlanWhereInput
        """

        self._backup_plans_some = backup_plans_some

    @property
    def bios_uuid(self):
        """Gets the bios_uuid of this VmWhereInput.  # noqa: E501


        :return: The bios_uuid of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._bios_uuid

    @bios_uuid.setter
    def bios_uuid(self, bios_uuid):
        """Sets the bios_uuid of this VmWhereInput.


        :param bios_uuid: The bios_uuid of this VmWhereInput.  # noqa: E501
        :type bios_uuid: str
        """

        self._bios_uuid = bios_uuid

    @property
    def bios_uuid_contains(self):
        """Gets the bios_uuid_contains of this VmWhereInput.  # noqa: E501


        :return: The bios_uuid_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._bios_uuid_contains

    @bios_uuid_contains.setter
    def bios_uuid_contains(self, bios_uuid_contains):
        """Sets the bios_uuid_contains of this VmWhereInput.


        :param bios_uuid_contains: The bios_uuid_contains of this VmWhereInput.  # noqa: E501
        :type bios_uuid_contains: str
        """

        self._bios_uuid_contains = bios_uuid_contains

    @property
    def bios_uuid_ends_with(self):
        """Gets the bios_uuid_ends_with of this VmWhereInput.  # noqa: E501


        :return: The bios_uuid_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._bios_uuid_ends_with

    @bios_uuid_ends_with.setter
    def bios_uuid_ends_with(self, bios_uuid_ends_with):
        """Sets the bios_uuid_ends_with of this VmWhereInput.


        :param bios_uuid_ends_with: The bios_uuid_ends_with of this VmWhereInput.  # noqa: E501
        :type bios_uuid_ends_with: str
        """

        self._bios_uuid_ends_with = bios_uuid_ends_with

    @property
    def bios_uuid_gt(self):
        """Gets the bios_uuid_gt of this VmWhereInput.  # noqa: E501


        :return: The bios_uuid_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._bios_uuid_gt

    @bios_uuid_gt.setter
    def bios_uuid_gt(self, bios_uuid_gt):
        """Sets the bios_uuid_gt of this VmWhereInput.


        :param bios_uuid_gt: The bios_uuid_gt of this VmWhereInput.  # noqa: E501
        :type bios_uuid_gt: str
        """

        self._bios_uuid_gt = bios_uuid_gt

    @property
    def bios_uuid_gte(self):
        """Gets the bios_uuid_gte of this VmWhereInput.  # noqa: E501


        :return: The bios_uuid_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._bios_uuid_gte

    @bios_uuid_gte.setter
    def bios_uuid_gte(self, bios_uuid_gte):
        """Sets the bios_uuid_gte of this VmWhereInput.


        :param bios_uuid_gte: The bios_uuid_gte of this VmWhereInput.  # noqa: E501
        :type bios_uuid_gte: str
        """

        self._bios_uuid_gte = bios_uuid_gte

    @property
    def bios_uuid_in(self):
        """Gets the bios_uuid_in of this VmWhereInput.  # noqa: E501


        :return: The bios_uuid_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._bios_uuid_in

    @bios_uuid_in.setter
    def bios_uuid_in(self, bios_uuid_in):
        """Sets the bios_uuid_in of this VmWhereInput.


        :param bios_uuid_in: The bios_uuid_in of this VmWhereInput.  # noqa: E501
        :type bios_uuid_in: list[str]
        """

        self._bios_uuid_in = bios_uuid_in

    @property
    def bios_uuid_lt(self):
        """Gets the bios_uuid_lt of this VmWhereInput.  # noqa: E501


        :return: The bios_uuid_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._bios_uuid_lt

    @bios_uuid_lt.setter
    def bios_uuid_lt(self, bios_uuid_lt):
        """Sets the bios_uuid_lt of this VmWhereInput.


        :param bios_uuid_lt: The bios_uuid_lt of this VmWhereInput.  # noqa: E501
        :type bios_uuid_lt: str
        """

        self._bios_uuid_lt = bios_uuid_lt

    @property
    def bios_uuid_lte(self):
        """Gets the bios_uuid_lte of this VmWhereInput.  # noqa: E501


        :return: The bios_uuid_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._bios_uuid_lte

    @bios_uuid_lte.setter
    def bios_uuid_lte(self, bios_uuid_lte):
        """Sets the bios_uuid_lte of this VmWhereInput.


        :param bios_uuid_lte: The bios_uuid_lte of this VmWhereInput.  # noqa: E501
        :type bios_uuid_lte: str
        """

        self._bios_uuid_lte = bios_uuid_lte

    @property
    def bios_uuid_not(self):
        """Gets the bios_uuid_not of this VmWhereInput.  # noqa: E501


        :return: The bios_uuid_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._bios_uuid_not

    @bios_uuid_not.setter
    def bios_uuid_not(self, bios_uuid_not):
        """Sets the bios_uuid_not of this VmWhereInput.


        :param bios_uuid_not: The bios_uuid_not of this VmWhereInput.  # noqa: E501
        :type bios_uuid_not: str
        """

        self._bios_uuid_not = bios_uuid_not

    @property
    def bios_uuid_not_contains(self):
        """Gets the bios_uuid_not_contains of this VmWhereInput.  # noqa: E501


        :return: The bios_uuid_not_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._bios_uuid_not_contains

    @bios_uuid_not_contains.setter
    def bios_uuid_not_contains(self, bios_uuid_not_contains):
        """Sets the bios_uuid_not_contains of this VmWhereInput.


        :param bios_uuid_not_contains: The bios_uuid_not_contains of this VmWhereInput.  # noqa: E501
        :type bios_uuid_not_contains: str
        """

        self._bios_uuid_not_contains = bios_uuid_not_contains

    @property
    def bios_uuid_not_ends_with(self):
        """Gets the bios_uuid_not_ends_with of this VmWhereInput.  # noqa: E501


        :return: The bios_uuid_not_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._bios_uuid_not_ends_with

    @bios_uuid_not_ends_with.setter
    def bios_uuid_not_ends_with(self, bios_uuid_not_ends_with):
        """Sets the bios_uuid_not_ends_with of this VmWhereInput.


        :param bios_uuid_not_ends_with: The bios_uuid_not_ends_with of this VmWhereInput.  # noqa: E501
        :type bios_uuid_not_ends_with: str
        """

        self._bios_uuid_not_ends_with = bios_uuid_not_ends_with

    @property
    def bios_uuid_not_in(self):
        """Gets the bios_uuid_not_in of this VmWhereInput.  # noqa: E501


        :return: The bios_uuid_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._bios_uuid_not_in

    @bios_uuid_not_in.setter
    def bios_uuid_not_in(self, bios_uuid_not_in):
        """Sets the bios_uuid_not_in of this VmWhereInput.


        :param bios_uuid_not_in: The bios_uuid_not_in of this VmWhereInput.  # noqa: E501
        :type bios_uuid_not_in: list[str]
        """

        self._bios_uuid_not_in = bios_uuid_not_in

    @property
    def bios_uuid_not_starts_with(self):
        """Gets the bios_uuid_not_starts_with of this VmWhereInput.  # noqa: E501


        :return: The bios_uuid_not_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._bios_uuid_not_starts_with

    @bios_uuid_not_starts_with.setter
    def bios_uuid_not_starts_with(self, bios_uuid_not_starts_with):
        """Sets the bios_uuid_not_starts_with of this VmWhereInput.


        :param bios_uuid_not_starts_with: The bios_uuid_not_starts_with of this VmWhereInput.  # noqa: E501
        :type bios_uuid_not_starts_with: str
        """

        self._bios_uuid_not_starts_with = bios_uuid_not_starts_with

    @property
    def bios_uuid_starts_with(self):
        """Gets the bios_uuid_starts_with of this VmWhereInput.  # noqa: E501


        :return: The bios_uuid_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._bios_uuid_starts_with

    @bios_uuid_starts_with.setter
    def bios_uuid_starts_with(self, bios_uuid_starts_with):
        """Sets the bios_uuid_starts_with of this VmWhereInput.


        :param bios_uuid_starts_with: The bios_uuid_starts_with of this VmWhereInput.  # noqa: E501
        :type bios_uuid_starts_with: str
        """

        self._bios_uuid_starts_with = bios_uuid_starts_with

    @property
    def clock_offset(self):
        """Gets the clock_offset of this VmWhereInput.  # noqa: E501


        :return: The clock_offset of this VmWhereInput.  # noqa: E501
        :rtype: VmClockOffset
        """
        return self._clock_offset

    @clock_offset.setter
    def clock_offset(self, clock_offset):
        """Sets the clock_offset of this VmWhereInput.


        :param clock_offset: The clock_offset of this VmWhereInput.  # noqa: E501
        :type clock_offset: VmClockOffset
        """

        self._clock_offset = clock_offset

    @property
    def clock_offset_in(self):
        """Gets the clock_offset_in of this VmWhereInput.  # noqa: E501


        :return: The clock_offset_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmClockOffset]
        """
        return self._clock_offset_in

    @clock_offset_in.setter
    def clock_offset_in(self, clock_offset_in):
        """Sets the clock_offset_in of this VmWhereInput.


        :param clock_offset_in: The clock_offset_in of this VmWhereInput.  # noqa: E501
        :type clock_offset_in: list[VmClockOffset]
        """

        self._clock_offset_in = clock_offset_in

    @property
    def clock_offset_not(self):
        """Gets the clock_offset_not of this VmWhereInput.  # noqa: E501


        :return: The clock_offset_not of this VmWhereInput.  # noqa: E501
        :rtype: VmClockOffset
        """
        return self._clock_offset_not

    @clock_offset_not.setter
    def clock_offset_not(self, clock_offset_not):
        """Sets the clock_offset_not of this VmWhereInput.


        :param clock_offset_not: The clock_offset_not of this VmWhereInput.  # noqa: E501
        :type clock_offset_not: VmClockOffset
        """

        self._clock_offset_not = clock_offset_not

    @property
    def clock_offset_not_in(self):
        """Gets the clock_offset_not_in of this VmWhereInput.  # noqa: E501


        :return: The clock_offset_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmClockOffset]
        """
        return self._clock_offset_not_in

    @clock_offset_not_in.setter
    def clock_offset_not_in(self, clock_offset_not_in):
        """Sets the clock_offset_not_in of this VmWhereInput.


        :param clock_offset_not_in: The clock_offset_not_in of this VmWhereInput.  # noqa: E501
        :type clock_offset_not_in: list[VmClockOffset]
        """

        self._clock_offset_not_in = clock_offset_not_in

    @property
    def cloud_init_supported(self):
        """Gets the cloud_init_supported of this VmWhereInput.  # noqa: E501


        :return: The cloud_init_supported of this VmWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._cloud_init_supported

    @cloud_init_supported.setter
    def cloud_init_supported(self, cloud_init_supported):
        """Sets the cloud_init_supported of this VmWhereInput.


        :param cloud_init_supported: The cloud_init_supported of this VmWhereInput.  # noqa: E501
        :type cloud_init_supported: bool
        """

        self._cloud_init_supported = cloud_init_supported

    @property
    def cloud_init_supported_not(self):
        """Gets the cloud_init_supported_not of this VmWhereInput.  # noqa: E501


        :return: The cloud_init_supported_not of this VmWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._cloud_init_supported_not

    @cloud_init_supported_not.setter
    def cloud_init_supported_not(self, cloud_init_supported_not):
        """Sets the cloud_init_supported_not of this VmWhereInput.


        :param cloud_init_supported_not: The cloud_init_supported_not of this VmWhereInput.  # noqa: E501
        :type cloud_init_supported_not: bool
        """

        self._cloud_init_supported_not = cloud_init_supported_not

    @property
    def cluster(self):
        """Gets the cluster of this VmWhereInput.  # noqa: E501


        :return: The cluster of this VmWhereInput.  # noqa: E501
        :rtype: ClusterWhereInput
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this VmWhereInput.


        :param cluster: The cluster of this VmWhereInput.  # noqa: E501
        :type cluster: ClusterWhereInput
        """

        self._cluster = cluster

    @property
    def cpu_model(self):
        """Gets the cpu_model of this VmWhereInput.  # noqa: E501


        :return: The cpu_model of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cpu_model

    @cpu_model.setter
    def cpu_model(self, cpu_model):
        """Sets the cpu_model of this VmWhereInput.


        :param cpu_model: The cpu_model of this VmWhereInput.  # noqa: E501
        :type cpu_model: str
        """

        self._cpu_model = cpu_model

    @property
    def cpu_model_contains(self):
        """Gets the cpu_model_contains of this VmWhereInput.  # noqa: E501


        :return: The cpu_model_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cpu_model_contains

    @cpu_model_contains.setter
    def cpu_model_contains(self, cpu_model_contains):
        """Sets the cpu_model_contains of this VmWhereInput.


        :param cpu_model_contains: The cpu_model_contains of this VmWhereInput.  # noqa: E501
        :type cpu_model_contains: str
        """

        self._cpu_model_contains = cpu_model_contains

    @property
    def cpu_model_ends_with(self):
        """Gets the cpu_model_ends_with of this VmWhereInput.  # noqa: E501


        :return: The cpu_model_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cpu_model_ends_with

    @cpu_model_ends_with.setter
    def cpu_model_ends_with(self, cpu_model_ends_with):
        """Sets the cpu_model_ends_with of this VmWhereInput.


        :param cpu_model_ends_with: The cpu_model_ends_with of this VmWhereInput.  # noqa: E501
        :type cpu_model_ends_with: str
        """

        self._cpu_model_ends_with = cpu_model_ends_with

    @property
    def cpu_model_gt(self):
        """Gets the cpu_model_gt of this VmWhereInput.  # noqa: E501


        :return: The cpu_model_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cpu_model_gt

    @cpu_model_gt.setter
    def cpu_model_gt(self, cpu_model_gt):
        """Sets the cpu_model_gt of this VmWhereInput.


        :param cpu_model_gt: The cpu_model_gt of this VmWhereInput.  # noqa: E501
        :type cpu_model_gt: str
        """

        self._cpu_model_gt = cpu_model_gt

    @property
    def cpu_model_gte(self):
        """Gets the cpu_model_gte of this VmWhereInput.  # noqa: E501


        :return: The cpu_model_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cpu_model_gte

    @cpu_model_gte.setter
    def cpu_model_gte(self, cpu_model_gte):
        """Sets the cpu_model_gte of this VmWhereInput.


        :param cpu_model_gte: The cpu_model_gte of this VmWhereInput.  # noqa: E501
        :type cpu_model_gte: str
        """

        self._cpu_model_gte = cpu_model_gte

    @property
    def cpu_model_in(self):
        """Gets the cpu_model_in of this VmWhereInput.  # noqa: E501


        :return: The cpu_model_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._cpu_model_in

    @cpu_model_in.setter
    def cpu_model_in(self, cpu_model_in):
        """Sets the cpu_model_in of this VmWhereInput.


        :param cpu_model_in: The cpu_model_in of this VmWhereInput.  # noqa: E501
        :type cpu_model_in: list[str]
        """

        self._cpu_model_in = cpu_model_in

    @property
    def cpu_model_lt(self):
        """Gets the cpu_model_lt of this VmWhereInput.  # noqa: E501


        :return: The cpu_model_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cpu_model_lt

    @cpu_model_lt.setter
    def cpu_model_lt(self, cpu_model_lt):
        """Sets the cpu_model_lt of this VmWhereInput.


        :param cpu_model_lt: The cpu_model_lt of this VmWhereInput.  # noqa: E501
        :type cpu_model_lt: str
        """

        self._cpu_model_lt = cpu_model_lt

    @property
    def cpu_model_lte(self):
        """Gets the cpu_model_lte of this VmWhereInput.  # noqa: E501


        :return: The cpu_model_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cpu_model_lte

    @cpu_model_lte.setter
    def cpu_model_lte(self, cpu_model_lte):
        """Sets the cpu_model_lte of this VmWhereInput.


        :param cpu_model_lte: The cpu_model_lte of this VmWhereInput.  # noqa: E501
        :type cpu_model_lte: str
        """

        self._cpu_model_lte = cpu_model_lte

    @property
    def cpu_model_not(self):
        """Gets the cpu_model_not of this VmWhereInput.  # noqa: E501


        :return: The cpu_model_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cpu_model_not

    @cpu_model_not.setter
    def cpu_model_not(self, cpu_model_not):
        """Sets the cpu_model_not of this VmWhereInput.


        :param cpu_model_not: The cpu_model_not of this VmWhereInput.  # noqa: E501
        :type cpu_model_not: str
        """

        self._cpu_model_not = cpu_model_not

    @property
    def cpu_model_not_contains(self):
        """Gets the cpu_model_not_contains of this VmWhereInput.  # noqa: E501


        :return: The cpu_model_not_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cpu_model_not_contains

    @cpu_model_not_contains.setter
    def cpu_model_not_contains(self, cpu_model_not_contains):
        """Sets the cpu_model_not_contains of this VmWhereInput.


        :param cpu_model_not_contains: The cpu_model_not_contains of this VmWhereInput.  # noqa: E501
        :type cpu_model_not_contains: str
        """

        self._cpu_model_not_contains = cpu_model_not_contains

    @property
    def cpu_model_not_ends_with(self):
        """Gets the cpu_model_not_ends_with of this VmWhereInput.  # noqa: E501


        :return: The cpu_model_not_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cpu_model_not_ends_with

    @cpu_model_not_ends_with.setter
    def cpu_model_not_ends_with(self, cpu_model_not_ends_with):
        """Sets the cpu_model_not_ends_with of this VmWhereInput.


        :param cpu_model_not_ends_with: The cpu_model_not_ends_with of this VmWhereInput.  # noqa: E501
        :type cpu_model_not_ends_with: str
        """

        self._cpu_model_not_ends_with = cpu_model_not_ends_with

    @property
    def cpu_model_not_in(self):
        """Gets the cpu_model_not_in of this VmWhereInput.  # noqa: E501


        :return: The cpu_model_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._cpu_model_not_in

    @cpu_model_not_in.setter
    def cpu_model_not_in(self, cpu_model_not_in):
        """Sets the cpu_model_not_in of this VmWhereInput.


        :param cpu_model_not_in: The cpu_model_not_in of this VmWhereInput.  # noqa: E501
        :type cpu_model_not_in: list[str]
        """

        self._cpu_model_not_in = cpu_model_not_in

    @property
    def cpu_model_not_starts_with(self):
        """Gets the cpu_model_not_starts_with of this VmWhereInput.  # noqa: E501


        :return: The cpu_model_not_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cpu_model_not_starts_with

    @cpu_model_not_starts_with.setter
    def cpu_model_not_starts_with(self, cpu_model_not_starts_with):
        """Sets the cpu_model_not_starts_with of this VmWhereInput.


        :param cpu_model_not_starts_with: The cpu_model_not_starts_with of this VmWhereInput.  # noqa: E501
        :type cpu_model_not_starts_with: str
        """

        self._cpu_model_not_starts_with = cpu_model_not_starts_with

    @property
    def cpu_model_starts_with(self):
        """Gets the cpu_model_starts_with of this VmWhereInput.  # noqa: E501


        :return: The cpu_model_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cpu_model_starts_with

    @cpu_model_starts_with.setter
    def cpu_model_starts_with(self, cpu_model_starts_with):
        """Sets the cpu_model_starts_with of this VmWhereInput.


        :param cpu_model_starts_with: The cpu_model_starts_with of this VmWhereInput.  # noqa: E501
        :type cpu_model_starts_with: str
        """

        self._cpu_model_starts_with = cpu_model_starts_with

    @property
    def cpu_usage(self):
        """Gets the cpu_usage of this VmWhereInput.  # noqa: E501


        :return: The cpu_usage of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._cpu_usage

    @cpu_usage.setter
    def cpu_usage(self, cpu_usage):
        """Sets the cpu_usage of this VmWhereInput.


        :param cpu_usage: The cpu_usage of this VmWhereInput.  # noqa: E501
        :type cpu_usage: float
        """

        self._cpu_usage = cpu_usage

    @property
    def cpu_usage_gt(self):
        """Gets the cpu_usage_gt of this VmWhereInput.  # noqa: E501


        :return: The cpu_usage_gt of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._cpu_usage_gt

    @cpu_usage_gt.setter
    def cpu_usage_gt(self, cpu_usage_gt):
        """Sets the cpu_usage_gt of this VmWhereInput.


        :param cpu_usage_gt: The cpu_usage_gt of this VmWhereInput.  # noqa: E501
        :type cpu_usage_gt: float
        """

        self._cpu_usage_gt = cpu_usage_gt

    @property
    def cpu_usage_gte(self):
        """Gets the cpu_usage_gte of this VmWhereInput.  # noqa: E501


        :return: The cpu_usage_gte of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._cpu_usage_gte

    @cpu_usage_gte.setter
    def cpu_usage_gte(self, cpu_usage_gte):
        """Sets the cpu_usage_gte of this VmWhereInput.


        :param cpu_usage_gte: The cpu_usage_gte of this VmWhereInput.  # noqa: E501
        :type cpu_usage_gte: float
        """

        self._cpu_usage_gte = cpu_usage_gte

    @property
    def cpu_usage_in(self):
        """Gets the cpu_usage_in of this VmWhereInput.  # noqa: E501


        :return: The cpu_usage_in of this VmWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._cpu_usage_in

    @cpu_usage_in.setter
    def cpu_usage_in(self, cpu_usage_in):
        """Sets the cpu_usage_in of this VmWhereInput.


        :param cpu_usage_in: The cpu_usage_in of this VmWhereInput.  # noqa: E501
        :type cpu_usage_in: list[float]
        """

        self._cpu_usage_in = cpu_usage_in

    @property
    def cpu_usage_lt(self):
        """Gets the cpu_usage_lt of this VmWhereInput.  # noqa: E501


        :return: The cpu_usage_lt of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._cpu_usage_lt

    @cpu_usage_lt.setter
    def cpu_usage_lt(self, cpu_usage_lt):
        """Sets the cpu_usage_lt of this VmWhereInput.


        :param cpu_usage_lt: The cpu_usage_lt of this VmWhereInput.  # noqa: E501
        :type cpu_usage_lt: float
        """

        self._cpu_usage_lt = cpu_usage_lt

    @property
    def cpu_usage_lte(self):
        """Gets the cpu_usage_lte of this VmWhereInput.  # noqa: E501


        :return: The cpu_usage_lte of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._cpu_usage_lte

    @cpu_usage_lte.setter
    def cpu_usage_lte(self, cpu_usage_lte):
        """Sets the cpu_usage_lte of this VmWhereInput.


        :param cpu_usage_lte: The cpu_usage_lte of this VmWhereInput.  # noqa: E501
        :type cpu_usage_lte: float
        """

        self._cpu_usage_lte = cpu_usage_lte

    @property
    def cpu_usage_not(self):
        """Gets the cpu_usage_not of this VmWhereInput.  # noqa: E501


        :return: The cpu_usage_not of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._cpu_usage_not

    @cpu_usage_not.setter
    def cpu_usage_not(self, cpu_usage_not):
        """Sets the cpu_usage_not of this VmWhereInput.


        :param cpu_usage_not: The cpu_usage_not of this VmWhereInput.  # noqa: E501
        :type cpu_usage_not: float
        """

        self._cpu_usage_not = cpu_usage_not

    @property
    def cpu_usage_not_in(self):
        """Gets the cpu_usage_not_in of this VmWhereInput.  # noqa: E501


        :return: The cpu_usage_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._cpu_usage_not_in

    @cpu_usage_not_in.setter
    def cpu_usage_not_in(self, cpu_usage_not_in):
        """Sets the cpu_usage_not_in of this VmWhereInput.


        :param cpu_usage_not_in: The cpu_usage_not_in of this VmWhereInput.  # noqa: E501
        :type cpu_usage_not_in: list[float]
        """

        self._cpu_usage_not_in = cpu_usage_not_in

    @property
    def deleted_at(self):
        """Gets the deleted_at of this VmWhereInput.  # noqa: E501


        :return: The deleted_at of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at):
        """Sets the deleted_at of this VmWhereInput.


        :param deleted_at: The deleted_at of this VmWhereInput.  # noqa: E501
        :type deleted_at: str
        """

        self._deleted_at = deleted_at

    @property
    def deleted_at_gt(self):
        """Gets the deleted_at_gt of this VmWhereInput.  # noqa: E501


        :return: The deleted_at_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._deleted_at_gt

    @deleted_at_gt.setter
    def deleted_at_gt(self, deleted_at_gt):
        """Sets the deleted_at_gt of this VmWhereInput.


        :param deleted_at_gt: The deleted_at_gt of this VmWhereInput.  # noqa: E501
        :type deleted_at_gt: str
        """

        self._deleted_at_gt = deleted_at_gt

    @property
    def deleted_at_gte(self):
        """Gets the deleted_at_gte of this VmWhereInput.  # noqa: E501


        :return: The deleted_at_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._deleted_at_gte

    @deleted_at_gte.setter
    def deleted_at_gte(self, deleted_at_gte):
        """Sets the deleted_at_gte of this VmWhereInput.


        :param deleted_at_gte: The deleted_at_gte of this VmWhereInput.  # noqa: E501
        :type deleted_at_gte: str
        """

        self._deleted_at_gte = deleted_at_gte

    @property
    def deleted_at_in(self):
        """Gets the deleted_at_in of this VmWhereInput.  # noqa: E501


        :return: The deleted_at_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._deleted_at_in

    @deleted_at_in.setter
    def deleted_at_in(self, deleted_at_in):
        """Sets the deleted_at_in of this VmWhereInput.


        :param deleted_at_in: The deleted_at_in of this VmWhereInput.  # noqa: E501
        :type deleted_at_in: list[str]
        """

        self._deleted_at_in = deleted_at_in

    @property
    def deleted_at_lt(self):
        """Gets the deleted_at_lt of this VmWhereInput.  # noqa: E501


        :return: The deleted_at_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._deleted_at_lt

    @deleted_at_lt.setter
    def deleted_at_lt(self, deleted_at_lt):
        """Sets the deleted_at_lt of this VmWhereInput.


        :param deleted_at_lt: The deleted_at_lt of this VmWhereInput.  # noqa: E501
        :type deleted_at_lt: str
        """

        self._deleted_at_lt = deleted_at_lt

    @property
    def deleted_at_lte(self):
        """Gets the deleted_at_lte of this VmWhereInput.  # noqa: E501


        :return: The deleted_at_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._deleted_at_lte

    @deleted_at_lte.setter
    def deleted_at_lte(self, deleted_at_lte):
        """Sets the deleted_at_lte of this VmWhereInput.


        :param deleted_at_lte: The deleted_at_lte of this VmWhereInput.  # noqa: E501
        :type deleted_at_lte: str
        """

        self._deleted_at_lte = deleted_at_lte

    @property
    def deleted_at_not(self):
        """Gets the deleted_at_not of this VmWhereInput.  # noqa: E501


        :return: The deleted_at_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._deleted_at_not

    @deleted_at_not.setter
    def deleted_at_not(self, deleted_at_not):
        """Sets the deleted_at_not of this VmWhereInput.


        :param deleted_at_not: The deleted_at_not of this VmWhereInput.  # noqa: E501
        :type deleted_at_not: str
        """

        self._deleted_at_not = deleted_at_not

    @property
    def deleted_at_not_in(self):
        """Gets the deleted_at_not_in of this VmWhereInput.  # noqa: E501


        :return: The deleted_at_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._deleted_at_not_in

    @deleted_at_not_in.setter
    def deleted_at_not_in(self, deleted_at_not_in):
        """Sets the deleted_at_not_in of this VmWhereInput.


        :param deleted_at_not_in: The deleted_at_not_in of this VmWhereInput.  # noqa: E501
        :type deleted_at_not_in: list[str]
        """

        self._deleted_at_not_in = deleted_at_not_in

    @property
    def description(self):
        """Gets the description of this VmWhereInput.  # noqa: E501


        :return: The description of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this VmWhereInput.


        :param description: The description of this VmWhereInput.  # noqa: E501
        :type description: str
        """

        self._description = description

    @property
    def description_contains(self):
        """Gets the description_contains of this VmWhereInput.  # noqa: E501


        :return: The description_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_contains

    @description_contains.setter
    def description_contains(self, description_contains):
        """Sets the description_contains of this VmWhereInput.


        :param description_contains: The description_contains of this VmWhereInput.  # noqa: E501
        :type description_contains: str
        """

        self._description_contains = description_contains

    @property
    def description_ends_with(self):
        """Gets the description_ends_with of this VmWhereInput.  # noqa: E501


        :return: The description_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_ends_with

    @description_ends_with.setter
    def description_ends_with(self, description_ends_with):
        """Sets the description_ends_with of this VmWhereInput.


        :param description_ends_with: The description_ends_with of this VmWhereInput.  # noqa: E501
        :type description_ends_with: str
        """

        self._description_ends_with = description_ends_with

    @property
    def description_gt(self):
        """Gets the description_gt of this VmWhereInput.  # noqa: E501


        :return: The description_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_gt

    @description_gt.setter
    def description_gt(self, description_gt):
        """Sets the description_gt of this VmWhereInput.


        :param description_gt: The description_gt of this VmWhereInput.  # noqa: E501
        :type description_gt: str
        """

        self._description_gt = description_gt

    @property
    def description_gte(self):
        """Gets the description_gte of this VmWhereInput.  # noqa: E501


        :return: The description_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_gte

    @description_gte.setter
    def description_gte(self, description_gte):
        """Sets the description_gte of this VmWhereInput.


        :param description_gte: The description_gte of this VmWhereInput.  # noqa: E501
        :type description_gte: str
        """

        self._description_gte = description_gte

    @property
    def description_in(self):
        """Gets the description_in of this VmWhereInput.  # noqa: E501


        :return: The description_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._description_in

    @description_in.setter
    def description_in(self, description_in):
        """Sets the description_in of this VmWhereInput.


        :param description_in: The description_in of this VmWhereInput.  # noqa: E501
        :type description_in: list[str]
        """

        self._description_in = description_in

    @property
    def description_lt(self):
        """Gets the description_lt of this VmWhereInput.  # noqa: E501


        :return: The description_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_lt

    @description_lt.setter
    def description_lt(self, description_lt):
        """Sets the description_lt of this VmWhereInput.


        :param description_lt: The description_lt of this VmWhereInput.  # noqa: E501
        :type description_lt: str
        """

        self._description_lt = description_lt

    @property
    def description_lte(self):
        """Gets the description_lte of this VmWhereInput.  # noqa: E501


        :return: The description_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_lte

    @description_lte.setter
    def description_lte(self, description_lte):
        """Sets the description_lte of this VmWhereInput.


        :param description_lte: The description_lte of this VmWhereInput.  # noqa: E501
        :type description_lte: str
        """

        self._description_lte = description_lte

    @property
    def description_not(self):
        """Gets the description_not of this VmWhereInput.  # noqa: E501


        :return: The description_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not

    @description_not.setter
    def description_not(self, description_not):
        """Sets the description_not of this VmWhereInput.


        :param description_not: The description_not of this VmWhereInput.  # noqa: E501
        :type description_not: str
        """

        self._description_not = description_not

    @property
    def description_not_contains(self):
        """Gets the description_not_contains of this VmWhereInput.  # noqa: E501


        :return: The description_not_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_contains

    @description_not_contains.setter
    def description_not_contains(self, description_not_contains):
        """Sets the description_not_contains of this VmWhereInput.


        :param description_not_contains: The description_not_contains of this VmWhereInput.  # noqa: E501
        :type description_not_contains: str
        """

        self._description_not_contains = description_not_contains

    @property
    def description_not_ends_with(self):
        """Gets the description_not_ends_with of this VmWhereInput.  # noqa: E501


        :return: The description_not_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_ends_with

    @description_not_ends_with.setter
    def description_not_ends_with(self, description_not_ends_with):
        """Sets the description_not_ends_with of this VmWhereInput.


        :param description_not_ends_with: The description_not_ends_with of this VmWhereInput.  # noqa: E501
        :type description_not_ends_with: str
        """

        self._description_not_ends_with = description_not_ends_with

    @property
    def description_not_in(self):
        """Gets the description_not_in of this VmWhereInput.  # noqa: E501


        :return: The description_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._description_not_in

    @description_not_in.setter
    def description_not_in(self, description_not_in):
        """Sets the description_not_in of this VmWhereInput.


        :param description_not_in: The description_not_in of this VmWhereInput.  # noqa: E501
        :type description_not_in: list[str]
        """

        self._description_not_in = description_not_in

    @property
    def description_not_starts_with(self):
        """Gets the description_not_starts_with of this VmWhereInput.  # noqa: E501


        :return: The description_not_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_starts_with

    @description_not_starts_with.setter
    def description_not_starts_with(self, description_not_starts_with):
        """Sets the description_not_starts_with of this VmWhereInput.


        :param description_not_starts_with: The description_not_starts_with of this VmWhereInput.  # noqa: E501
        :type description_not_starts_with: str
        """

        self._description_not_starts_with = description_not_starts_with

    @property
    def description_starts_with(self):
        """Gets the description_starts_with of this VmWhereInput.  # noqa: E501


        :return: The description_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_starts_with

    @description_starts_with.setter
    def description_starts_with(self, description_starts_with):
        """Sets the description_starts_with of this VmWhereInput.


        :param description_starts_with: The description_starts_with of this VmWhereInput.  # noqa: E501
        :type description_starts_with: str
        """

        self._description_starts_with = description_starts_with

    @property
    def dns_servers(self):
        """Gets the dns_servers of this VmWhereInput.  # noqa: E501


        :return: The dns_servers of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._dns_servers

    @dns_servers.setter
    def dns_servers(self, dns_servers):
        """Sets the dns_servers of this VmWhereInput.


        :param dns_servers: The dns_servers of this VmWhereInput.  # noqa: E501
        :type dns_servers: str
        """

        self._dns_servers = dns_servers

    @property
    def dns_servers_contains(self):
        """Gets the dns_servers_contains of this VmWhereInput.  # noqa: E501


        :return: The dns_servers_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._dns_servers_contains

    @dns_servers_contains.setter
    def dns_servers_contains(self, dns_servers_contains):
        """Sets the dns_servers_contains of this VmWhereInput.


        :param dns_servers_contains: The dns_servers_contains of this VmWhereInput.  # noqa: E501
        :type dns_servers_contains: str
        """

        self._dns_servers_contains = dns_servers_contains

    @property
    def dns_servers_ends_with(self):
        """Gets the dns_servers_ends_with of this VmWhereInput.  # noqa: E501


        :return: The dns_servers_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._dns_servers_ends_with

    @dns_servers_ends_with.setter
    def dns_servers_ends_with(self, dns_servers_ends_with):
        """Sets the dns_servers_ends_with of this VmWhereInput.


        :param dns_servers_ends_with: The dns_servers_ends_with of this VmWhereInput.  # noqa: E501
        :type dns_servers_ends_with: str
        """

        self._dns_servers_ends_with = dns_servers_ends_with

    @property
    def dns_servers_gt(self):
        """Gets the dns_servers_gt of this VmWhereInput.  # noqa: E501


        :return: The dns_servers_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._dns_servers_gt

    @dns_servers_gt.setter
    def dns_servers_gt(self, dns_servers_gt):
        """Sets the dns_servers_gt of this VmWhereInput.


        :param dns_servers_gt: The dns_servers_gt of this VmWhereInput.  # noqa: E501
        :type dns_servers_gt: str
        """

        self._dns_servers_gt = dns_servers_gt

    @property
    def dns_servers_gte(self):
        """Gets the dns_servers_gte of this VmWhereInput.  # noqa: E501


        :return: The dns_servers_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._dns_servers_gte

    @dns_servers_gte.setter
    def dns_servers_gte(self, dns_servers_gte):
        """Sets the dns_servers_gte of this VmWhereInput.


        :param dns_servers_gte: The dns_servers_gte of this VmWhereInput.  # noqa: E501
        :type dns_servers_gte: str
        """

        self._dns_servers_gte = dns_servers_gte

    @property
    def dns_servers_in(self):
        """Gets the dns_servers_in of this VmWhereInput.  # noqa: E501


        :return: The dns_servers_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._dns_servers_in

    @dns_servers_in.setter
    def dns_servers_in(self, dns_servers_in):
        """Sets the dns_servers_in of this VmWhereInput.


        :param dns_servers_in: The dns_servers_in of this VmWhereInput.  # noqa: E501
        :type dns_servers_in: list[str]
        """

        self._dns_servers_in = dns_servers_in

    @property
    def dns_servers_lt(self):
        """Gets the dns_servers_lt of this VmWhereInput.  # noqa: E501


        :return: The dns_servers_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._dns_servers_lt

    @dns_servers_lt.setter
    def dns_servers_lt(self, dns_servers_lt):
        """Sets the dns_servers_lt of this VmWhereInput.


        :param dns_servers_lt: The dns_servers_lt of this VmWhereInput.  # noqa: E501
        :type dns_servers_lt: str
        """

        self._dns_servers_lt = dns_servers_lt

    @property
    def dns_servers_lte(self):
        """Gets the dns_servers_lte of this VmWhereInput.  # noqa: E501


        :return: The dns_servers_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._dns_servers_lte

    @dns_servers_lte.setter
    def dns_servers_lte(self, dns_servers_lte):
        """Sets the dns_servers_lte of this VmWhereInput.


        :param dns_servers_lte: The dns_servers_lte of this VmWhereInput.  # noqa: E501
        :type dns_servers_lte: str
        """

        self._dns_servers_lte = dns_servers_lte

    @property
    def dns_servers_not(self):
        """Gets the dns_servers_not of this VmWhereInput.  # noqa: E501


        :return: The dns_servers_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._dns_servers_not

    @dns_servers_not.setter
    def dns_servers_not(self, dns_servers_not):
        """Sets the dns_servers_not of this VmWhereInput.


        :param dns_servers_not: The dns_servers_not of this VmWhereInput.  # noqa: E501
        :type dns_servers_not: str
        """

        self._dns_servers_not = dns_servers_not

    @property
    def dns_servers_not_contains(self):
        """Gets the dns_servers_not_contains of this VmWhereInput.  # noqa: E501


        :return: The dns_servers_not_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._dns_servers_not_contains

    @dns_servers_not_contains.setter
    def dns_servers_not_contains(self, dns_servers_not_contains):
        """Sets the dns_servers_not_contains of this VmWhereInput.


        :param dns_servers_not_contains: The dns_servers_not_contains of this VmWhereInput.  # noqa: E501
        :type dns_servers_not_contains: str
        """

        self._dns_servers_not_contains = dns_servers_not_contains

    @property
    def dns_servers_not_ends_with(self):
        """Gets the dns_servers_not_ends_with of this VmWhereInput.  # noqa: E501


        :return: The dns_servers_not_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._dns_servers_not_ends_with

    @dns_servers_not_ends_with.setter
    def dns_servers_not_ends_with(self, dns_servers_not_ends_with):
        """Sets the dns_servers_not_ends_with of this VmWhereInput.


        :param dns_servers_not_ends_with: The dns_servers_not_ends_with of this VmWhereInput.  # noqa: E501
        :type dns_servers_not_ends_with: str
        """

        self._dns_servers_not_ends_with = dns_servers_not_ends_with

    @property
    def dns_servers_not_in(self):
        """Gets the dns_servers_not_in of this VmWhereInput.  # noqa: E501


        :return: The dns_servers_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._dns_servers_not_in

    @dns_servers_not_in.setter
    def dns_servers_not_in(self, dns_servers_not_in):
        """Sets the dns_servers_not_in of this VmWhereInput.


        :param dns_servers_not_in: The dns_servers_not_in of this VmWhereInput.  # noqa: E501
        :type dns_servers_not_in: list[str]
        """

        self._dns_servers_not_in = dns_servers_not_in

    @property
    def dns_servers_not_starts_with(self):
        """Gets the dns_servers_not_starts_with of this VmWhereInput.  # noqa: E501


        :return: The dns_servers_not_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._dns_servers_not_starts_with

    @dns_servers_not_starts_with.setter
    def dns_servers_not_starts_with(self, dns_servers_not_starts_with):
        """Sets the dns_servers_not_starts_with of this VmWhereInput.


        :param dns_servers_not_starts_with: The dns_servers_not_starts_with of this VmWhereInput.  # noqa: E501
        :type dns_servers_not_starts_with: str
        """

        self._dns_servers_not_starts_with = dns_servers_not_starts_with

    @property
    def dns_servers_starts_with(self):
        """Gets the dns_servers_starts_with of this VmWhereInput.  # noqa: E501


        :return: The dns_servers_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._dns_servers_starts_with

    @dns_servers_starts_with.setter
    def dns_servers_starts_with(self, dns_servers_starts_with):
        """Sets the dns_servers_starts_with of this VmWhereInput.


        :param dns_servers_starts_with: The dns_servers_starts_with of this VmWhereInput.  # noqa: E501
        :type dns_servers_starts_with: str
        """

        self._dns_servers_starts_with = dns_servers_starts_with

    @property
    def entity_async_status(self):
        """Gets the entity_async_status of this VmWhereInput.  # noqa: E501


        :return: The entity_async_status of this VmWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status

    @entity_async_status.setter
    def entity_async_status(self, entity_async_status):
        """Sets the entity_async_status of this VmWhereInput.


        :param entity_async_status: The entity_async_status of this VmWhereInput.  # noqa: E501
        :type entity_async_status: EntityAsyncStatus
        """

        self._entity_async_status = entity_async_status

    @property
    def entity_async_status_in(self):
        """Gets the entity_async_status_in of this VmWhereInput.  # noqa: E501


        :return: The entity_async_status_in of this VmWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_in

    @entity_async_status_in.setter
    def entity_async_status_in(self, entity_async_status_in):
        """Sets the entity_async_status_in of this VmWhereInput.


        :param entity_async_status_in: The entity_async_status_in of this VmWhereInput.  # noqa: E501
        :type entity_async_status_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_in = entity_async_status_in

    @property
    def entity_async_status_not(self):
        """Gets the entity_async_status_not of this VmWhereInput.  # noqa: E501


        :return: The entity_async_status_not of this VmWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status_not

    @entity_async_status_not.setter
    def entity_async_status_not(self, entity_async_status_not):
        """Sets the entity_async_status_not of this VmWhereInput.


        :param entity_async_status_not: The entity_async_status_not of this VmWhereInput.  # noqa: E501
        :type entity_async_status_not: EntityAsyncStatus
        """

        self._entity_async_status_not = entity_async_status_not

    @property
    def entity_async_status_not_in(self):
        """Gets the entity_async_status_not_in of this VmWhereInput.  # noqa: E501


        :return: The entity_async_status_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_not_in

    @entity_async_status_not_in.setter
    def entity_async_status_not_in(self, entity_async_status_not_in):
        """Sets the entity_async_status_not_in of this VmWhereInput.


        :param entity_async_status_not_in: The entity_async_status_not_in of this VmWhereInput.  # noqa: E501
        :type entity_async_status_not_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_not_in = entity_async_status_not_in

    @property
    def entity_filter_results_every(self):
        """Gets the entity_filter_results_every of this VmWhereInput.  # noqa: E501


        :return: The entity_filter_results_every of this VmWhereInput.  # noqa: E501
        :rtype: VmEntityFilterResultWhereInput
        """
        return self._entity_filter_results_every

    @entity_filter_results_every.setter
    def entity_filter_results_every(self, entity_filter_results_every):
        """Sets the entity_filter_results_every of this VmWhereInput.


        :param entity_filter_results_every: The entity_filter_results_every of this VmWhereInput.  # noqa: E501
        :type entity_filter_results_every: VmEntityFilterResultWhereInput
        """

        self._entity_filter_results_every = entity_filter_results_every

    @property
    def entity_filter_results_none(self):
        """Gets the entity_filter_results_none of this VmWhereInput.  # noqa: E501


        :return: The entity_filter_results_none of this VmWhereInput.  # noqa: E501
        :rtype: VmEntityFilterResultWhereInput
        """
        return self._entity_filter_results_none

    @entity_filter_results_none.setter
    def entity_filter_results_none(self, entity_filter_results_none):
        """Sets the entity_filter_results_none of this VmWhereInput.


        :param entity_filter_results_none: The entity_filter_results_none of this VmWhereInput.  # noqa: E501
        :type entity_filter_results_none: VmEntityFilterResultWhereInput
        """

        self._entity_filter_results_none = entity_filter_results_none

    @property
    def entity_filter_results_some(self):
        """Gets the entity_filter_results_some of this VmWhereInput.  # noqa: E501


        :return: The entity_filter_results_some of this VmWhereInput.  # noqa: E501
        :rtype: VmEntityFilterResultWhereInput
        """
        return self._entity_filter_results_some

    @entity_filter_results_some.setter
    def entity_filter_results_some(self, entity_filter_results_some):
        """Sets the entity_filter_results_some of this VmWhereInput.


        :param entity_filter_results_some: The entity_filter_results_some of this VmWhereInput.  # noqa: E501
        :type entity_filter_results_some: VmEntityFilterResultWhereInput
        """

        self._entity_filter_results_some = entity_filter_results_some

    @property
    def firmware(self):
        """Gets the firmware of this VmWhereInput.  # noqa: E501


        :return: The firmware of this VmWhereInput.  # noqa: E501
        :rtype: VmFirmware
        """
        return self._firmware

    @firmware.setter
    def firmware(self, firmware):
        """Sets the firmware of this VmWhereInput.


        :param firmware: The firmware of this VmWhereInput.  # noqa: E501
        :type firmware: VmFirmware
        """

        self._firmware = firmware

    @property
    def firmware_in(self):
        """Gets the firmware_in of this VmWhereInput.  # noqa: E501


        :return: The firmware_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmFirmware]
        """
        return self._firmware_in

    @firmware_in.setter
    def firmware_in(self, firmware_in):
        """Sets the firmware_in of this VmWhereInput.


        :param firmware_in: The firmware_in of this VmWhereInput.  # noqa: E501
        :type firmware_in: list[VmFirmware]
        """

        self._firmware_in = firmware_in

    @property
    def firmware_not(self):
        """Gets the firmware_not of this VmWhereInput.  # noqa: E501


        :return: The firmware_not of this VmWhereInput.  # noqa: E501
        :rtype: VmFirmware
        """
        return self._firmware_not

    @firmware_not.setter
    def firmware_not(self, firmware_not):
        """Sets the firmware_not of this VmWhereInput.


        :param firmware_not: The firmware_not of this VmWhereInput.  # noqa: E501
        :type firmware_not: VmFirmware
        """

        self._firmware_not = firmware_not

    @property
    def firmware_not_in(self):
        """Gets the firmware_not_in of this VmWhereInput.  # noqa: E501


        :return: The firmware_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmFirmware]
        """
        return self._firmware_not_in

    @firmware_not_in.setter
    def firmware_not_in(self, firmware_not_in):
        """Sets the firmware_not_in of this VmWhereInput.


        :param firmware_not_in: The firmware_not_in of this VmWhereInput.  # noqa: E501
        :type firmware_not_in: list[VmFirmware]
        """

        self._firmware_not_in = firmware_not_in

    @property
    def folder(self):
        """Gets the folder of this VmWhereInput.  # noqa: E501


        :return: The folder of this VmWhereInput.  # noqa: E501
        :rtype: VmFolderWhereInput
        """
        return self._folder

    @folder.setter
    def folder(self, folder):
        """Sets the folder of this VmWhereInput.


        :param folder: The folder of this VmWhereInput.  # noqa: E501
        :type folder: VmFolderWhereInput
        """

        self._folder = folder

    @property
    def gpu_devices_every(self):
        """Gets the gpu_devices_every of this VmWhereInput.  # noqa: E501


        :return: The gpu_devices_every of this VmWhereInput.  # noqa: E501
        :rtype: GpuDeviceWhereInput
        """
        return self._gpu_devices_every

    @gpu_devices_every.setter
    def gpu_devices_every(self, gpu_devices_every):
        """Sets the gpu_devices_every of this VmWhereInput.


        :param gpu_devices_every: The gpu_devices_every of this VmWhereInput.  # noqa: E501
        :type gpu_devices_every: GpuDeviceWhereInput
        """

        self._gpu_devices_every = gpu_devices_every

    @property
    def gpu_devices_none(self):
        """Gets the gpu_devices_none of this VmWhereInput.  # noqa: E501


        :return: The gpu_devices_none of this VmWhereInput.  # noqa: E501
        :rtype: GpuDeviceWhereInput
        """
        return self._gpu_devices_none

    @gpu_devices_none.setter
    def gpu_devices_none(self, gpu_devices_none):
        """Sets the gpu_devices_none of this VmWhereInput.


        :param gpu_devices_none: The gpu_devices_none of this VmWhereInput.  # noqa: E501
        :type gpu_devices_none: GpuDeviceWhereInput
        """

        self._gpu_devices_none = gpu_devices_none

    @property
    def gpu_devices_some(self):
        """Gets the gpu_devices_some of this VmWhereInput.  # noqa: E501


        :return: The gpu_devices_some of this VmWhereInput.  # noqa: E501
        :rtype: GpuDeviceWhereInput
        """
        return self._gpu_devices_some

    @gpu_devices_some.setter
    def gpu_devices_some(self, gpu_devices_some):
        """Sets the gpu_devices_some of this VmWhereInput.


        :param gpu_devices_some: The gpu_devices_some of this VmWhereInput.  # noqa: E501
        :type gpu_devices_some: GpuDeviceWhereInput
        """

        self._gpu_devices_some = gpu_devices_some

    @property
    def guest_cpu_model(self):
        """Gets the guest_cpu_model of this VmWhereInput.  # noqa: E501


        :return: The guest_cpu_model of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._guest_cpu_model

    @guest_cpu_model.setter
    def guest_cpu_model(self, guest_cpu_model):
        """Sets the guest_cpu_model of this VmWhereInput.


        :param guest_cpu_model: The guest_cpu_model of this VmWhereInput.  # noqa: E501
        :type guest_cpu_model: str
        """

        self._guest_cpu_model = guest_cpu_model

    @property
    def guest_cpu_model_contains(self):
        """Gets the guest_cpu_model_contains of this VmWhereInput.  # noqa: E501


        :return: The guest_cpu_model_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._guest_cpu_model_contains

    @guest_cpu_model_contains.setter
    def guest_cpu_model_contains(self, guest_cpu_model_contains):
        """Sets the guest_cpu_model_contains of this VmWhereInput.


        :param guest_cpu_model_contains: The guest_cpu_model_contains of this VmWhereInput.  # noqa: E501
        :type guest_cpu_model_contains: str
        """

        self._guest_cpu_model_contains = guest_cpu_model_contains

    @property
    def guest_cpu_model_ends_with(self):
        """Gets the guest_cpu_model_ends_with of this VmWhereInput.  # noqa: E501


        :return: The guest_cpu_model_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._guest_cpu_model_ends_with

    @guest_cpu_model_ends_with.setter
    def guest_cpu_model_ends_with(self, guest_cpu_model_ends_with):
        """Sets the guest_cpu_model_ends_with of this VmWhereInput.


        :param guest_cpu_model_ends_with: The guest_cpu_model_ends_with of this VmWhereInput.  # noqa: E501
        :type guest_cpu_model_ends_with: str
        """

        self._guest_cpu_model_ends_with = guest_cpu_model_ends_with

    @property
    def guest_cpu_model_gt(self):
        """Gets the guest_cpu_model_gt of this VmWhereInput.  # noqa: E501


        :return: The guest_cpu_model_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._guest_cpu_model_gt

    @guest_cpu_model_gt.setter
    def guest_cpu_model_gt(self, guest_cpu_model_gt):
        """Sets the guest_cpu_model_gt of this VmWhereInput.


        :param guest_cpu_model_gt: The guest_cpu_model_gt of this VmWhereInput.  # noqa: E501
        :type guest_cpu_model_gt: str
        """

        self._guest_cpu_model_gt = guest_cpu_model_gt

    @property
    def guest_cpu_model_gte(self):
        """Gets the guest_cpu_model_gte of this VmWhereInput.  # noqa: E501


        :return: The guest_cpu_model_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._guest_cpu_model_gte

    @guest_cpu_model_gte.setter
    def guest_cpu_model_gte(self, guest_cpu_model_gte):
        """Sets the guest_cpu_model_gte of this VmWhereInput.


        :param guest_cpu_model_gte: The guest_cpu_model_gte of this VmWhereInput.  # noqa: E501
        :type guest_cpu_model_gte: str
        """

        self._guest_cpu_model_gte = guest_cpu_model_gte

    @property
    def guest_cpu_model_in(self):
        """Gets the guest_cpu_model_in of this VmWhereInput.  # noqa: E501


        :return: The guest_cpu_model_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._guest_cpu_model_in

    @guest_cpu_model_in.setter
    def guest_cpu_model_in(self, guest_cpu_model_in):
        """Sets the guest_cpu_model_in of this VmWhereInput.


        :param guest_cpu_model_in: The guest_cpu_model_in of this VmWhereInput.  # noqa: E501
        :type guest_cpu_model_in: list[str]
        """

        self._guest_cpu_model_in = guest_cpu_model_in

    @property
    def guest_cpu_model_lt(self):
        """Gets the guest_cpu_model_lt of this VmWhereInput.  # noqa: E501


        :return: The guest_cpu_model_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._guest_cpu_model_lt

    @guest_cpu_model_lt.setter
    def guest_cpu_model_lt(self, guest_cpu_model_lt):
        """Sets the guest_cpu_model_lt of this VmWhereInput.


        :param guest_cpu_model_lt: The guest_cpu_model_lt of this VmWhereInput.  # noqa: E501
        :type guest_cpu_model_lt: str
        """

        self._guest_cpu_model_lt = guest_cpu_model_lt

    @property
    def guest_cpu_model_lte(self):
        """Gets the guest_cpu_model_lte of this VmWhereInput.  # noqa: E501


        :return: The guest_cpu_model_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._guest_cpu_model_lte

    @guest_cpu_model_lte.setter
    def guest_cpu_model_lte(self, guest_cpu_model_lte):
        """Sets the guest_cpu_model_lte of this VmWhereInput.


        :param guest_cpu_model_lte: The guest_cpu_model_lte of this VmWhereInput.  # noqa: E501
        :type guest_cpu_model_lte: str
        """

        self._guest_cpu_model_lte = guest_cpu_model_lte

    @property
    def guest_cpu_model_not(self):
        """Gets the guest_cpu_model_not of this VmWhereInput.  # noqa: E501


        :return: The guest_cpu_model_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._guest_cpu_model_not

    @guest_cpu_model_not.setter
    def guest_cpu_model_not(self, guest_cpu_model_not):
        """Sets the guest_cpu_model_not of this VmWhereInput.


        :param guest_cpu_model_not: The guest_cpu_model_not of this VmWhereInput.  # noqa: E501
        :type guest_cpu_model_not: str
        """

        self._guest_cpu_model_not = guest_cpu_model_not

    @property
    def guest_cpu_model_not_contains(self):
        """Gets the guest_cpu_model_not_contains of this VmWhereInput.  # noqa: E501


        :return: The guest_cpu_model_not_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._guest_cpu_model_not_contains

    @guest_cpu_model_not_contains.setter
    def guest_cpu_model_not_contains(self, guest_cpu_model_not_contains):
        """Sets the guest_cpu_model_not_contains of this VmWhereInput.


        :param guest_cpu_model_not_contains: The guest_cpu_model_not_contains of this VmWhereInput.  # noqa: E501
        :type guest_cpu_model_not_contains: str
        """

        self._guest_cpu_model_not_contains = guest_cpu_model_not_contains

    @property
    def guest_cpu_model_not_ends_with(self):
        """Gets the guest_cpu_model_not_ends_with of this VmWhereInput.  # noqa: E501


        :return: The guest_cpu_model_not_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._guest_cpu_model_not_ends_with

    @guest_cpu_model_not_ends_with.setter
    def guest_cpu_model_not_ends_with(self, guest_cpu_model_not_ends_with):
        """Sets the guest_cpu_model_not_ends_with of this VmWhereInput.


        :param guest_cpu_model_not_ends_with: The guest_cpu_model_not_ends_with of this VmWhereInput.  # noqa: E501
        :type guest_cpu_model_not_ends_with: str
        """

        self._guest_cpu_model_not_ends_with = guest_cpu_model_not_ends_with

    @property
    def guest_cpu_model_not_in(self):
        """Gets the guest_cpu_model_not_in of this VmWhereInput.  # noqa: E501


        :return: The guest_cpu_model_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._guest_cpu_model_not_in

    @guest_cpu_model_not_in.setter
    def guest_cpu_model_not_in(self, guest_cpu_model_not_in):
        """Sets the guest_cpu_model_not_in of this VmWhereInput.


        :param guest_cpu_model_not_in: The guest_cpu_model_not_in of this VmWhereInput.  # noqa: E501
        :type guest_cpu_model_not_in: list[str]
        """

        self._guest_cpu_model_not_in = guest_cpu_model_not_in

    @property
    def guest_cpu_model_not_starts_with(self):
        """Gets the guest_cpu_model_not_starts_with of this VmWhereInput.  # noqa: E501


        :return: The guest_cpu_model_not_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._guest_cpu_model_not_starts_with

    @guest_cpu_model_not_starts_with.setter
    def guest_cpu_model_not_starts_with(self, guest_cpu_model_not_starts_with):
        """Sets the guest_cpu_model_not_starts_with of this VmWhereInput.


        :param guest_cpu_model_not_starts_with: The guest_cpu_model_not_starts_with of this VmWhereInput.  # noqa: E501
        :type guest_cpu_model_not_starts_with: str
        """

        self._guest_cpu_model_not_starts_with = guest_cpu_model_not_starts_with

    @property
    def guest_cpu_model_starts_with(self):
        """Gets the guest_cpu_model_starts_with of this VmWhereInput.  # noqa: E501


        :return: The guest_cpu_model_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._guest_cpu_model_starts_with

    @guest_cpu_model_starts_with.setter
    def guest_cpu_model_starts_with(self, guest_cpu_model_starts_with):
        """Sets the guest_cpu_model_starts_with of this VmWhereInput.


        :param guest_cpu_model_starts_with: The guest_cpu_model_starts_with of this VmWhereInput.  # noqa: E501
        :type guest_cpu_model_starts_with: str
        """

        self._guest_cpu_model_starts_with = guest_cpu_model_starts_with

    @property
    def guest_os_type(self):
        """Gets the guest_os_type of this VmWhereInput.  # noqa: E501


        :return: The guest_os_type of this VmWhereInput.  # noqa: E501
        :rtype: VmGuestsOperationSystem
        """
        return self._guest_os_type

    @guest_os_type.setter
    def guest_os_type(self, guest_os_type):
        """Sets the guest_os_type of this VmWhereInput.


        :param guest_os_type: The guest_os_type of this VmWhereInput.  # noqa: E501
        :type guest_os_type: VmGuestsOperationSystem
        """

        self._guest_os_type = guest_os_type

    @property
    def guest_os_type_in(self):
        """Gets the guest_os_type_in of this VmWhereInput.  # noqa: E501


        :return: The guest_os_type_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmGuestsOperationSystem]
        """
        return self._guest_os_type_in

    @guest_os_type_in.setter
    def guest_os_type_in(self, guest_os_type_in):
        """Sets the guest_os_type_in of this VmWhereInput.


        :param guest_os_type_in: The guest_os_type_in of this VmWhereInput.  # noqa: E501
        :type guest_os_type_in: list[VmGuestsOperationSystem]
        """

        self._guest_os_type_in = guest_os_type_in

    @property
    def guest_os_type_not(self):
        """Gets the guest_os_type_not of this VmWhereInput.  # noqa: E501


        :return: The guest_os_type_not of this VmWhereInput.  # noqa: E501
        :rtype: VmGuestsOperationSystem
        """
        return self._guest_os_type_not

    @guest_os_type_not.setter
    def guest_os_type_not(self, guest_os_type_not):
        """Sets the guest_os_type_not of this VmWhereInput.


        :param guest_os_type_not: The guest_os_type_not of this VmWhereInput.  # noqa: E501
        :type guest_os_type_not: VmGuestsOperationSystem
        """

        self._guest_os_type_not = guest_os_type_not

    @property
    def guest_os_type_not_in(self):
        """Gets the guest_os_type_not_in of this VmWhereInput.  # noqa: E501


        :return: The guest_os_type_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmGuestsOperationSystem]
        """
        return self._guest_os_type_not_in

    @guest_os_type_not_in.setter
    def guest_os_type_not_in(self, guest_os_type_not_in):
        """Sets the guest_os_type_not_in of this VmWhereInput.


        :param guest_os_type_not_in: The guest_os_type_not_in of this VmWhereInput.  # noqa: E501
        :type guest_os_type_not_in: list[VmGuestsOperationSystem]
        """

        self._guest_os_type_not_in = guest_os_type_not_in

    @property
    def guest_size_usage(self):
        """Gets the guest_size_usage of this VmWhereInput.  # noqa: E501


        :return: The guest_size_usage of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._guest_size_usage

    @guest_size_usage.setter
    def guest_size_usage(self, guest_size_usage):
        """Sets the guest_size_usage of this VmWhereInput.


        :param guest_size_usage: The guest_size_usage of this VmWhereInput.  # noqa: E501
        :type guest_size_usage: float
        """

        self._guest_size_usage = guest_size_usage

    @property
    def guest_size_usage_gt(self):
        """Gets the guest_size_usage_gt of this VmWhereInput.  # noqa: E501


        :return: The guest_size_usage_gt of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._guest_size_usage_gt

    @guest_size_usage_gt.setter
    def guest_size_usage_gt(self, guest_size_usage_gt):
        """Sets the guest_size_usage_gt of this VmWhereInput.


        :param guest_size_usage_gt: The guest_size_usage_gt of this VmWhereInput.  # noqa: E501
        :type guest_size_usage_gt: float
        """

        self._guest_size_usage_gt = guest_size_usage_gt

    @property
    def guest_size_usage_gte(self):
        """Gets the guest_size_usage_gte of this VmWhereInput.  # noqa: E501


        :return: The guest_size_usage_gte of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._guest_size_usage_gte

    @guest_size_usage_gte.setter
    def guest_size_usage_gte(self, guest_size_usage_gte):
        """Sets the guest_size_usage_gte of this VmWhereInput.


        :param guest_size_usage_gte: The guest_size_usage_gte of this VmWhereInput.  # noqa: E501
        :type guest_size_usage_gte: float
        """

        self._guest_size_usage_gte = guest_size_usage_gte

    @property
    def guest_size_usage_in(self):
        """Gets the guest_size_usage_in of this VmWhereInput.  # noqa: E501


        :return: The guest_size_usage_in of this VmWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._guest_size_usage_in

    @guest_size_usage_in.setter
    def guest_size_usage_in(self, guest_size_usage_in):
        """Sets the guest_size_usage_in of this VmWhereInput.


        :param guest_size_usage_in: The guest_size_usage_in of this VmWhereInput.  # noqa: E501
        :type guest_size_usage_in: list[float]
        """

        self._guest_size_usage_in = guest_size_usage_in

    @property
    def guest_size_usage_lt(self):
        """Gets the guest_size_usage_lt of this VmWhereInput.  # noqa: E501


        :return: The guest_size_usage_lt of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._guest_size_usage_lt

    @guest_size_usage_lt.setter
    def guest_size_usage_lt(self, guest_size_usage_lt):
        """Sets the guest_size_usage_lt of this VmWhereInput.


        :param guest_size_usage_lt: The guest_size_usage_lt of this VmWhereInput.  # noqa: E501
        :type guest_size_usage_lt: float
        """

        self._guest_size_usage_lt = guest_size_usage_lt

    @property
    def guest_size_usage_lte(self):
        """Gets the guest_size_usage_lte of this VmWhereInput.  # noqa: E501


        :return: The guest_size_usage_lte of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._guest_size_usage_lte

    @guest_size_usage_lte.setter
    def guest_size_usage_lte(self, guest_size_usage_lte):
        """Sets the guest_size_usage_lte of this VmWhereInput.


        :param guest_size_usage_lte: The guest_size_usage_lte of this VmWhereInput.  # noqa: E501
        :type guest_size_usage_lte: float
        """

        self._guest_size_usage_lte = guest_size_usage_lte

    @property
    def guest_size_usage_not(self):
        """Gets the guest_size_usage_not of this VmWhereInput.  # noqa: E501


        :return: The guest_size_usage_not of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._guest_size_usage_not

    @guest_size_usage_not.setter
    def guest_size_usage_not(self, guest_size_usage_not):
        """Sets the guest_size_usage_not of this VmWhereInput.


        :param guest_size_usage_not: The guest_size_usage_not of this VmWhereInput.  # noqa: E501
        :type guest_size_usage_not: float
        """

        self._guest_size_usage_not = guest_size_usage_not

    @property
    def guest_size_usage_not_in(self):
        """Gets the guest_size_usage_not_in of this VmWhereInput.  # noqa: E501


        :return: The guest_size_usage_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._guest_size_usage_not_in

    @guest_size_usage_not_in.setter
    def guest_size_usage_not_in(self, guest_size_usage_not_in):
        """Sets the guest_size_usage_not_in of this VmWhereInput.


        :param guest_size_usage_not_in: The guest_size_usage_not_in of this VmWhereInput.  # noqa: E501
        :type guest_size_usage_not_in: list[float]
        """

        self._guest_size_usage_not_in = guest_size_usage_not_in

    @property
    def guest_used_size(self):
        """Gets the guest_used_size of this VmWhereInput.  # noqa: E501


        :return: The guest_used_size of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._guest_used_size

    @guest_used_size.setter
    def guest_used_size(self, guest_used_size):
        """Sets the guest_used_size of this VmWhereInput.


        :param guest_used_size: The guest_used_size of this VmWhereInput.  # noqa: E501
        :type guest_used_size: int
        """

        self._guest_used_size = guest_used_size

    @property
    def guest_used_size_gt(self):
        """Gets the guest_used_size_gt of this VmWhereInput.  # noqa: E501


        :return: The guest_used_size_gt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._guest_used_size_gt

    @guest_used_size_gt.setter
    def guest_used_size_gt(self, guest_used_size_gt):
        """Sets the guest_used_size_gt of this VmWhereInput.


        :param guest_used_size_gt: The guest_used_size_gt of this VmWhereInput.  # noqa: E501
        :type guest_used_size_gt: int
        """

        self._guest_used_size_gt = guest_used_size_gt

    @property
    def guest_used_size_gte(self):
        """Gets the guest_used_size_gte of this VmWhereInput.  # noqa: E501


        :return: The guest_used_size_gte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._guest_used_size_gte

    @guest_used_size_gte.setter
    def guest_used_size_gte(self, guest_used_size_gte):
        """Sets the guest_used_size_gte of this VmWhereInput.


        :param guest_used_size_gte: The guest_used_size_gte of this VmWhereInput.  # noqa: E501
        :type guest_used_size_gte: int
        """

        self._guest_used_size_gte = guest_used_size_gte

    @property
    def guest_used_size_in(self):
        """Gets the guest_used_size_in of this VmWhereInput.  # noqa: E501


        :return: The guest_used_size_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._guest_used_size_in

    @guest_used_size_in.setter
    def guest_used_size_in(self, guest_used_size_in):
        """Sets the guest_used_size_in of this VmWhereInput.


        :param guest_used_size_in: The guest_used_size_in of this VmWhereInput.  # noqa: E501
        :type guest_used_size_in: list[int]
        """

        self._guest_used_size_in = guest_used_size_in

    @property
    def guest_used_size_lt(self):
        """Gets the guest_used_size_lt of this VmWhereInput.  # noqa: E501


        :return: The guest_used_size_lt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._guest_used_size_lt

    @guest_used_size_lt.setter
    def guest_used_size_lt(self, guest_used_size_lt):
        """Sets the guest_used_size_lt of this VmWhereInput.


        :param guest_used_size_lt: The guest_used_size_lt of this VmWhereInput.  # noqa: E501
        :type guest_used_size_lt: int
        """

        self._guest_used_size_lt = guest_used_size_lt

    @property
    def guest_used_size_lte(self):
        """Gets the guest_used_size_lte of this VmWhereInput.  # noqa: E501


        :return: The guest_used_size_lte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._guest_used_size_lte

    @guest_used_size_lte.setter
    def guest_used_size_lte(self, guest_used_size_lte):
        """Sets the guest_used_size_lte of this VmWhereInput.


        :param guest_used_size_lte: The guest_used_size_lte of this VmWhereInput.  # noqa: E501
        :type guest_used_size_lte: int
        """

        self._guest_used_size_lte = guest_used_size_lte

    @property
    def guest_used_size_not(self):
        """Gets the guest_used_size_not of this VmWhereInput.  # noqa: E501


        :return: The guest_used_size_not of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._guest_used_size_not

    @guest_used_size_not.setter
    def guest_used_size_not(self, guest_used_size_not):
        """Sets the guest_used_size_not of this VmWhereInput.


        :param guest_used_size_not: The guest_used_size_not of this VmWhereInput.  # noqa: E501
        :type guest_used_size_not: int
        """

        self._guest_used_size_not = guest_used_size_not

    @property
    def guest_used_size_not_in(self):
        """Gets the guest_used_size_not_in of this VmWhereInput.  # noqa: E501


        :return: The guest_used_size_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._guest_used_size_not_in

    @guest_used_size_not_in.setter
    def guest_used_size_not_in(self, guest_used_size_not_in):
        """Sets the guest_used_size_not_in of this VmWhereInput.


        :param guest_used_size_not_in: The guest_used_size_not_in of this VmWhereInput.  # noqa: E501
        :type guest_used_size_not_in: list[int]
        """

        self._guest_used_size_not_in = guest_used_size_not_in

    @property
    def ha(self):
        """Gets the ha of this VmWhereInput.  # noqa: E501


        :return: The ha of this VmWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._ha

    @ha.setter
    def ha(self, ha):
        """Sets the ha of this VmWhereInput.


        :param ha: The ha of this VmWhereInput.  # noqa: E501
        :type ha: bool
        """

        self._ha = ha

    @property
    def ha_not(self):
        """Gets the ha_not of this VmWhereInput.  # noqa: E501


        :return: The ha_not of this VmWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._ha_not

    @ha_not.setter
    def ha_not(self, ha_not):
        """Sets the ha_not of this VmWhereInput.


        :param ha_not: The ha_not of this VmWhereInput.  # noqa: E501
        :type ha_not: bool
        """

        self._ha_not = ha_not

    @property
    def host(self):
        """Gets the host of this VmWhereInput.  # noqa: E501


        :return: The host of this VmWhereInput.  # noqa: E501
        :rtype: HostWhereInput
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this VmWhereInput.


        :param host: The host of this VmWhereInput.  # noqa: E501
        :type host: HostWhereInput
        """

        self._host = host

    @property
    def hostname(self):
        """Gets the hostname of this VmWhereInput.  # noqa: E501


        :return: The hostname of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname):
        """Sets the hostname of this VmWhereInput.


        :param hostname: The hostname of this VmWhereInput.  # noqa: E501
        :type hostname: str
        """

        self._hostname = hostname

    @property
    def hostname_contains(self):
        """Gets the hostname_contains of this VmWhereInput.  # noqa: E501


        :return: The hostname_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._hostname_contains

    @hostname_contains.setter
    def hostname_contains(self, hostname_contains):
        """Sets the hostname_contains of this VmWhereInput.


        :param hostname_contains: The hostname_contains of this VmWhereInput.  # noqa: E501
        :type hostname_contains: str
        """

        self._hostname_contains = hostname_contains

    @property
    def hostname_ends_with(self):
        """Gets the hostname_ends_with of this VmWhereInput.  # noqa: E501


        :return: The hostname_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._hostname_ends_with

    @hostname_ends_with.setter
    def hostname_ends_with(self, hostname_ends_with):
        """Sets the hostname_ends_with of this VmWhereInput.


        :param hostname_ends_with: The hostname_ends_with of this VmWhereInput.  # noqa: E501
        :type hostname_ends_with: str
        """

        self._hostname_ends_with = hostname_ends_with

    @property
    def hostname_gt(self):
        """Gets the hostname_gt of this VmWhereInput.  # noqa: E501


        :return: The hostname_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._hostname_gt

    @hostname_gt.setter
    def hostname_gt(self, hostname_gt):
        """Sets the hostname_gt of this VmWhereInput.


        :param hostname_gt: The hostname_gt of this VmWhereInput.  # noqa: E501
        :type hostname_gt: str
        """

        self._hostname_gt = hostname_gt

    @property
    def hostname_gte(self):
        """Gets the hostname_gte of this VmWhereInput.  # noqa: E501


        :return: The hostname_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._hostname_gte

    @hostname_gte.setter
    def hostname_gte(self, hostname_gte):
        """Sets the hostname_gte of this VmWhereInput.


        :param hostname_gte: The hostname_gte of this VmWhereInput.  # noqa: E501
        :type hostname_gte: str
        """

        self._hostname_gte = hostname_gte

    @property
    def hostname_in(self):
        """Gets the hostname_in of this VmWhereInput.  # noqa: E501


        :return: The hostname_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._hostname_in

    @hostname_in.setter
    def hostname_in(self, hostname_in):
        """Sets the hostname_in of this VmWhereInput.


        :param hostname_in: The hostname_in of this VmWhereInput.  # noqa: E501
        :type hostname_in: list[str]
        """

        self._hostname_in = hostname_in

    @property
    def hostname_lt(self):
        """Gets the hostname_lt of this VmWhereInput.  # noqa: E501


        :return: The hostname_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._hostname_lt

    @hostname_lt.setter
    def hostname_lt(self, hostname_lt):
        """Sets the hostname_lt of this VmWhereInput.


        :param hostname_lt: The hostname_lt of this VmWhereInput.  # noqa: E501
        :type hostname_lt: str
        """

        self._hostname_lt = hostname_lt

    @property
    def hostname_lte(self):
        """Gets the hostname_lte of this VmWhereInput.  # noqa: E501


        :return: The hostname_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._hostname_lte

    @hostname_lte.setter
    def hostname_lte(self, hostname_lte):
        """Sets the hostname_lte of this VmWhereInput.


        :param hostname_lte: The hostname_lte of this VmWhereInput.  # noqa: E501
        :type hostname_lte: str
        """

        self._hostname_lte = hostname_lte

    @property
    def hostname_not(self):
        """Gets the hostname_not of this VmWhereInput.  # noqa: E501


        :return: The hostname_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._hostname_not

    @hostname_not.setter
    def hostname_not(self, hostname_not):
        """Sets the hostname_not of this VmWhereInput.


        :param hostname_not: The hostname_not of this VmWhereInput.  # noqa: E501
        :type hostname_not: str
        """

        self._hostname_not = hostname_not

    @property
    def hostname_not_contains(self):
        """Gets the hostname_not_contains of this VmWhereInput.  # noqa: E501


        :return: The hostname_not_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._hostname_not_contains

    @hostname_not_contains.setter
    def hostname_not_contains(self, hostname_not_contains):
        """Sets the hostname_not_contains of this VmWhereInput.


        :param hostname_not_contains: The hostname_not_contains of this VmWhereInput.  # noqa: E501
        :type hostname_not_contains: str
        """

        self._hostname_not_contains = hostname_not_contains

    @property
    def hostname_not_ends_with(self):
        """Gets the hostname_not_ends_with of this VmWhereInput.  # noqa: E501


        :return: The hostname_not_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._hostname_not_ends_with

    @hostname_not_ends_with.setter
    def hostname_not_ends_with(self, hostname_not_ends_with):
        """Sets the hostname_not_ends_with of this VmWhereInput.


        :param hostname_not_ends_with: The hostname_not_ends_with of this VmWhereInput.  # noqa: E501
        :type hostname_not_ends_with: str
        """

        self._hostname_not_ends_with = hostname_not_ends_with

    @property
    def hostname_not_in(self):
        """Gets the hostname_not_in of this VmWhereInput.  # noqa: E501


        :return: The hostname_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._hostname_not_in

    @hostname_not_in.setter
    def hostname_not_in(self, hostname_not_in):
        """Sets the hostname_not_in of this VmWhereInput.


        :param hostname_not_in: The hostname_not_in of this VmWhereInput.  # noqa: E501
        :type hostname_not_in: list[str]
        """

        self._hostname_not_in = hostname_not_in

    @property
    def hostname_not_starts_with(self):
        """Gets the hostname_not_starts_with of this VmWhereInput.  # noqa: E501


        :return: The hostname_not_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._hostname_not_starts_with

    @hostname_not_starts_with.setter
    def hostname_not_starts_with(self, hostname_not_starts_with):
        """Sets the hostname_not_starts_with of this VmWhereInput.


        :param hostname_not_starts_with: The hostname_not_starts_with of this VmWhereInput.  # noqa: E501
        :type hostname_not_starts_with: str
        """

        self._hostname_not_starts_with = hostname_not_starts_with

    @property
    def hostname_starts_with(self):
        """Gets the hostname_starts_with of this VmWhereInput.  # noqa: E501


        :return: The hostname_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._hostname_starts_with

    @hostname_starts_with.setter
    def hostname_starts_with(self, hostname_starts_with):
        """Sets the hostname_starts_with of this VmWhereInput.


        :param hostname_starts_with: The hostname_starts_with of this VmWhereInput.  # noqa: E501
        :type hostname_starts_with: str
        """

        self._hostname_starts_with = hostname_starts_with

    @property
    def id(self):
        """Gets the id of this VmWhereInput.  # noqa: E501


        :return: The id of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VmWhereInput.


        :param id: The id of this VmWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this VmWhereInput.  # noqa: E501


        :return: The id_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this VmWhereInput.


        :param id_contains: The id_contains of this VmWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this VmWhereInput.  # noqa: E501


        :return: The id_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this VmWhereInput.


        :param id_ends_with: The id_ends_with of this VmWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this VmWhereInput.  # noqa: E501


        :return: The id_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this VmWhereInput.


        :param id_gt: The id_gt of this VmWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this VmWhereInput.  # noqa: E501


        :return: The id_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this VmWhereInput.


        :param id_gte: The id_gte of this VmWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this VmWhereInput.  # noqa: E501


        :return: The id_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this VmWhereInput.


        :param id_in: The id_in of this VmWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this VmWhereInput.  # noqa: E501


        :return: The id_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this VmWhereInput.


        :param id_lt: The id_lt of this VmWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this VmWhereInput.  # noqa: E501


        :return: The id_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this VmWhereInput.


        :param id_lte: The id_lte of this VmWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this VmWhereInput.  # noqa: E501


        :return: The id_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this VmWhereInput.


        :param id_not: The id_not of this VmWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this VmWhereInput.  # noqa: E501


        :return: The id_not_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this VmWhereInput.


        :param id_not_contains: The id_not_contains of this VmWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this VmWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this VmWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this VmWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this VmWhereInput.  # noqa: E501


        :return: The id_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this VmWhereInput.


        :param id_not_in: The id_not_in of this VmWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this VmWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this VmWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this VmWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this VmWhereInput.  # noqa: E501


        :return: The id_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this VmWhereInput.


        :param id_starts_with: The id_starts_with of this VmWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def in_recycle_bin(self):
        """Gets the in_recycle_bin of this VmWhereInput.  # noqa: E501


        :return: The in_recycle_bin of this VmWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._in_recycle_bin

    @in_recycle_bin.setter
    def in_recycle_bin(self, in_recycle_bin):
        """Sets the in_recycle_bin of this VmWhereInput.


        :param in_recycle_bin: The in_recycle_bin of this VmWhereInput.  # noqa: E501
        :type in_recycle_bin: bool
        """

        self._in_recycle_bin = in_recycle_bin

    @property
    def in_recycle_bin_not(self):
        """Gets the in_recycle_bin_not of this VmWhereInput.  # noqa: E501


        :return: The in_recycle_bin_not of this VmWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._in_recycle_bin_not

    @in_recycle_bin_not.setter
    def in_recycle_bin_not(self, in_recycle_bin_not):
        """Sets the in_recycle_bin_not of this VmWhereInput.


        :param in_recycle_bin_not: The in_recycle_bin_not of this VmWhereInput.  # noqa: E501
        :type in_recycle_bin_not: bool
        """

        self._in_recycle_bin_not = in_recycle_bin_not

    @property
    def internal(self):
        """Gets the internal of this VmWhereInput.  # noqa: E501


        :return: The internal of this VmWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._internal

    @internal.setter
    def internal(self, internal):
        """Sets the internal of this VmWhereInput.


        :param internal: The internal of this VmWhereInput.  # noqa: E501
        :type internal: bool
        """

        self._internal = internal

    @property
    def internal_not(self):
        """Gets the internal_not of this VmWhereInput.  # noqa: E501


        :return: The internal_not of this VmWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._internal_not

    @internal_not.setter
    def internal_not(self, internal_not):
        """Sets the internal_not of this VmWhereInput.


        :param internal_not: The internal_not of this VmWhereInput.  # noqa: E501
        :type internal_not: bool
        """

        self._internal_not = internal_not

    @property
    def io_policy(self):
        """Gets the io_policy of this VmWhereInput.  # noqa: E501


        :return: The io_policy of this VmWhereInput.  # noqa: E501
        :rtype: VmDiskIoPolicy
        """
        return self._io_policy

    @io_policy.setter
    def io_policy(self, io_policy):
        """Sets the io_policy of this VmWhereInput.


        :param io_policy: The io_policy of this VmWhereInput.  # noqa: E501
        :type io_policy: VmDiskIoPolicy
        """

        self._io_policy = io_policy

    @property
    def io_policy_in(self):
        """Gets the io_policy_in of this VmWhereInput.  # noqa: E501


        :return: The io_policy_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmDiskIoPolicy]
        """
        return self._io_policy_in

    @io_policy_in.setter
    def io_policy_in(self, io_policy_in):
        """Sets the io_policy_in of this VmWhereInput.


        :param io_policy_in: The io_policy_in of this VmWhereInput.  # noqa: E501
        :type io_policy_in: list[VmDiskIoPolicy]
        """

        self._io_policy_in = io_policy_in

    @property
    def io_policy_not(self):
        """Gets the io_policy_not of this VmWhereInput.  # noqa: E501


        :return: The io_policy_not of this VmWhereInput.  # noqa: E501
        :rtype: VmDiskIoPolicy
        """
        return self._io_policy_not

    @io_policy_not.setter
    def io_policy_not(self, io_policy_not):
        """Sets the io_policy_not of this VmWhereInput.


        :param io_policy_not: The io_policy_not of this VmWhereInput.  # noqa: E501
        :type io_policy_not: VmDiskIoPolicy
        """

        self._io_policy_not = io_policy_not

    @property
    def io_policy_not_in(self):
        """Gets the io_policy_not_in of this VmWhereInput.  # noqa: E501


        :return: The io_policy_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmDiskIoPolicy]
        """
        return self._io_policy_not_in

    @io_policy_not_in.setter
    def io_policy_not_in(self, io_policy_not_in):
        """Sets the io_policy_not_in of this VmWhereInput.


        :param io_policy_not_in: The io_policy_not_in of this VmWhereInput.  # noqa: E501
        :type io_policy_not_in: list[VmDiskIoPolicy]
        """

        self._io_policy_not_in = io_policy_not_in

    @property
    def ips(self):
        """Gets the ips of this VmWhereInput.  # noqa: E501


        :return: The ips of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ips

    @ips.setter
    def ips(self, ips):
        """Sets the ips of this VmWhereInput.


        :param ips: The ips of this VmWhereInput.  # noqa: E501
        :type ips: str
        """

        self._ips = ips

    @property
    def ips_contains(self):
        """Gets the ips_contains of this VmWhereInput.  # noqa: E501


        :return: The ips_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ips_contains

    @ips_contains.setter
    def ips_contains(self, ips_contains):
        """Sets the ips_contains of this VmWhereInput.


        :param ips_contains: The ips_contains of this VmWhereInput.  # noqa: E501
        :type ips_contains: str
        """

        self._ips_contains = ips_contains

    @property
    def ips_ends_with(self):
        """Gets the ips_ends_with of this VmWhereInput.  # noqa: E501


        :return: The ips_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ips_ends_with

    @ips_ends_with.setter
    def ips_ends_with(self, ips_ends_with):
        """Sets the ips_ends_with of this VmWhereInput.


        :param ips_ends_with: The ips_ends_with of this VmWhereInput.  # noqa: E501
        :type ips_ends_with: str
        """

        self._ips_ends_with = ips_ends_with

    @property
    def ips_gt(self):
        """Gets the ips_gt of this VmWhereInput.  # noqa: E501


        :return: The ips_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ips_gt

    @ips_gt.setter
    def ips_gt(self, ips_gt):
        """Sets the ips_gt of this VmWhereInput.


        :param ips_gt: The ips_gt of this VmWhereInput.  # noqa: E501
        :type ips_gt: str
        """

        self._ips_gt = ips_gt

    @property
    def ips_gte(self):
        """Gets the ips_gte of this VmWhereInput.  # noqa: E501


        :return: The ips_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ips_gte

    @ips_gte.setter
    def ips_gte(self, ips_gte):
        """Sets the ips_gte of this VmWhereInput.


        :param ips_gte: The ips_gte of this VmWhereInput.  # noqa: E501
        :type ips_gte: str
        """

        self._ips_gte = ips_gte

    @property
    def ips_in(self):
        """Gets the ips_in of this VmWhereInput.  # noqa: E501


        :return: The ips_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ips_in

    @ips_in.setter
    def ips_in(self, ips_in):
        """Sets the ips_in of this VmWhereInput.


        :param ips_in: The ips_in of this VmWhereInput.  # noqa: E501
        :type ips_in: list[str]
        """

        self._ips_in = ips_in

    @property
    def ips_lt(self):
        """Gets the ips_lt of this VmWhereInput.  # noqa: E501


        :return: The ips_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ips_lt

    @ips_lt.setter
    def ips_lt(self, ips_lt):
        """Sets the ips_lt of this VmWhereInput.


        :param ips_lt: The ips_lt of this VmWhereInput.  # noqa: E501
        :type ips_lt: str
        """

        self._ips_lt = ips_lt

    @property
    def ips_lte(self):
        """Gets the ips_lte of this VmWhereInput.  # noqa: E501


        :return: The ips_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ips_lte

    @ips_lte.setter
    def ips_lte(self, ips_lte):
        """Sets the ips_lte of this VmWhereInput.


        :param ips_lte: The ips_lte of this VmWhereInput.  # noqa: E501
        :type ips_lte: str
        """

        self._ips_lte = ips_lte

    @property
    def ips_not(self):
        """Gets the ips_not of this VmWhereInput.  # noqa: E501


        :return: The ips_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ips_not

    @ips_not.setter
    def ips_not(self, ips_not):
        """Sets the ips_not of this VmWhereInput.


        :param ips_not: The ips_not of this VmWhereInput.  # noqa: E501
        :type ips_not: str
        """

        self._ips_not = ips_not

    @property
    def ips_not_contains(self):
        """Gets the ips_not_contains of this VmWhereInput.  # noqa: E501


        :return: The ips_not_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ips_not_contains

    @ips_not_contains.setter
    def ips_not_contains(self, ips_not_contains):
        """Sets the ips_not_contains of this VmWhereInput.


        :param ips_not_contains: The ips_not_contains of this VmWhereInput.  # noqa: E501
        :type ips_not_contains: str
        """

        self._ips_not_contains = ips_not_contains

    @property
    def ips_not_ends_with(self):
        """Gets the ips_not_ends_with of this VmWhereInput.  # noqa: E501


        :return: The ips_not_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ips_not_ends_with

    @ips_not_ends_with.setter
    def ips_not_ends_with(self, ips_not_ends_with):
        """Sets the ips_not_ends_with of this VmWhereInput.


        :param ips_not_ends_with: The ips_not_ends_with of this VmWhereInput.  # noqa: E501
        :type ips_not_ends_with: str
        """

        self._ips_not_ends_with = ips_not_ends_with

    @property
    def ips_not_in(self):
        """Gets the ips_not_in of this VmWhereInput.  # noqa: E501


        :return: The ips_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ips_not_in

    @ips_not_in.setter
    def ips_not_in(self, ips_not_in):
        """Sets the ips_not_in of this VmWhereInput.


        :param ips_not_in: The ips_not_in of this VmWhereInput.  # noqa: E501
        :type ips_not_in: list[str]
        """

        self._ips_not_in = ips_not_in

    @property
    def ips_not_starts_with(self):
        """Gets the ips_not_starts_with of this VmWhereInput.  # noqa: E501


        :return: The ips_not_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ips_not_starts_with

    @ips_not_starts_with.setter
    def ips_not_starts_with(self, ips_not_starts_with):
        """Sets the ips_not_starts_with of this VmWhereInput.


        :param ips_not_starts_with: The ips_not_starts_with of this VmWhereInput.  # noqa: E501
        :type ips_not_starts_with: str
        """

        self._ips_not_starts_with = ips_not_starts_with

    @property
    def ips_starts_with(self):
        """Gets the ips_starts_with of this VmWhereInput.  # noqa: E501


        :return: The ips_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ips_starts_with

    @ips_starts_with.setter
    def ips_starts_with(self, ips_starts_with):
        """Sets the ips_starts_with of this VmWhereInput.


        :param ips_starts_with: The ips_starts_with of this VmWhereInput.  # noqa: E501
        :type ips_starts_with: str
        """

        self._ips_starts_with = ips_starts_with

    @property
    def isolation_policy(self):
        """Gets the isolation_policy of this VmWhereInput.  # noqa: E501


        :return: The isolation_policy of this VmWhereInput.  # noqa: E501
        :rtype: IsolationPolicyWhereInput
        """
        return self._isolation_policy

    @isolation_policy.setter
    def isolation_policy(self, isolation_policy):
        """Sets the isolation_policy of this VmWhereInput.


        :param isolation_policy: The isolation_policy of this VmWhereInput.  # noqa: E501
        :type isolation_policy: IsolationPolicyWhereInput
        """

        self._isolation_policy = isolation_policy

    @property
    def kernel_info(self):
        """Gets the kernel_info of this VmWhereInput.  # noqa: E501


        :return: The kernel_info of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kernel_info

    @kernel_info.setter
    def kernel_info(self, kernel_info):
        """Sets the kernel_info of this VmWhereInput.


        :param kernel_info: The kernel_info of this VmWhereInput.  # noqa: E501
        :type kernel_info: str
        """

        self._kernel_info = kernel_info

    @property
    def kernel_info_contains(self):
        """Gets the kernel_info_contains of this VmWhereInput.  # noqa: E501


        :return: The kernel_info_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kernel_info_contains

    @kernel_info_contains.setter
    def kernel_info_contains(self, kernel_info_contains):
        """Sets the kernel_info_contains of this VmWhereInput.


        :param kernel_info_contains: The kernel_info_contains of this VmWhereInput.  # noqa: E501
        :type kernel_info_contains: str
        """

        self._kernel_info_contains = kernel_info_contains

    @property
    def kernel_info_ends_with(self):
        """Gets the kernel_info_ends_with of this VmWhereInput.  # noqa: E501


        :return: The kernel_info_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kernel_info_ends_with

    @kernel_info_ends_with.setter
    def kernel_info_ends_with(self, kernel_info_ends_with):
        """Sets the kernel_info_ends_with of this VmWhereInput.


        :param kernel_info_ends_with: The kernel_info_ends_with of this VmWhereInput.  # noqa: E501
        :type kernel_info_ends_with: str
        """

        self._kernel_info_ends_with = kernel_info_ends_with

    @property
    def kernel_info_gt(self):
        """Gets the kernel_info_gt of this VmWhereInput.  # noqa: E501


        :return: The kernel_info_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kernel_info_gt

    @kernel_info_gt.setter
    def kernel_info_gt(self, kernel_info_gt):
        """Sets the kernel_info_gt of this VmWhereInput.


        :param kernel_info_gt: The kernel_info_gt of this VmWhereInput.  # noqa: E501
        :type kernel_info_gt: str
        """

        self._kernel_info_gt = kernel_info_gt

    @property
    def kernel_info_gte(self):
        """Gets the kernel_info_gte of this VmWhereInput.  # noqa: E501


        :return: The kernel_info_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kernel_info_gte

    @kernel_info_gte.setter
    def kernel_info_gte(self, kernel_info_gte):
        """Sets the kernel_info_gte of this VmWhereInput.


        :param kernel_info_gte: The kernel_info_gte of this VmWhereInput.  # noqa: E501
        :type kernel_info_gte: str
        """

        self._kernel_info_gte = kernel_info_gte

    @property
    def kernel_info_in(self):
        """Gets the kernel_info_in of this VmWhereInput.  # noqa: E501


        :return: The kernel_info_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._kernel_info_in

    @kernel_info_in.setter
    def kernel_info_in(self, kernel_info_in):
        """Sets the kernel_info_in of this VmWhereInput.


        :param kernel_info_in: The kernel_info_in of this VmWhereInput.  # noqa: E501
        :type kernel_info_in: list[str]
        """

        self._kernel_info_in = kernel_info_in

    @property
    def kernel_info_lt(self):
        """Gets the kernel_info_lt of this VmWhereInput.  # noqa: E501


        :return: The kernel_info_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kernel_info_lt

    @kernel_info_lt.setter
    def kernel_info_lt(self, kernel_info_lt):
        """Sets the kernel_info_lt of this VmWhereInput.


        :param kernel_info_lt: The kernel_info_lt of this VmWhereInput.  # noqa: E501
        :type kernel_info_lt: str
        """

        self._kernel_info_lt = kernel_info_lt

    @property
    def kernel_info_lte(self):
        """Gets the kernel_info_lte of this VmWhereInput.  # noqa: E501


        :return: The kernel_info_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kernel_info_lte

    @kernel_info_lte.setter
    def kernel_info_lte(self, kernel_info_lte):
        """Sets the kernel_info_lte of this VmWhereInput.


        :param kernel_info_lte: The kernel_info_lte of this VmWhereInput.  # noqa: E501
        :type kernel_info_lte: str
        """

        self._kernel_info_lte = kernel_info_lte

    @property
    def kernel_info_not(self):
        """Gets the kernel_info_not of this VmWhereInput.  # noqa: E501


        :return: The kernel_info_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kernel_info_not

    @kernel_info_not.setter
    def kernel_info_not(self, kernel_info_not):
        """Sets the kernel_info_not of this VmWhereInput.


        :param kernel_info_not: The kernel_info_not of this VmWhereInput.  # noqa: E501
        :type kernel_info_not: str
        """

        self._kernel_info_not = kernel_info_not

    @property
    def kernel_info_not_contains(self):
        """Gets the kernel_info_not_contains of this VmWhereInput.  # noqa: E501


        :return: The kernel_info_not_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kernel_info_not_contains

    @kernel_info_not_contains.setter
    def kernel_info_not_contains(self, kernel_info_not_contains):
        """Sets the kernel_info_not_contains of this VmWhereInput.


        :param kernel_info_not_contains: The kernel_info_not_contains of this VmWhereInput.  # noqa: E501
        :type kernel_info_not_contains: str
        """

        self._kernel_info_not_contains = kernel_info_not_contains

    @property
    def kernel_info_not_ends_with(self):
        """Gets the kernel_info_not_ends_with of this VmWhereInput.  # noqa: E501


        :return: The kernel_info_not_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kernel_info_not_ends_with

    @kernel_info_not_ends_with.setter
    def kernel_info_not_ends_with(self, kernel_info_not_ends_with):
        """Sets the kernel_info_not_ends_with of this VmWhereInput.


        :param kernel_info_not_ends_with: The kernel_info_not_ends_with of this VmWhereInput.  # noqa: E501
        :type kernel_info_not_ends_with: str
        """

        self._kernel_info_not_ends_with = kernel_info_not_ends_with

    @property
    def kernel_info_not_in(self):
        """Gets the kernel_info_not_in of this VmWhereInput.  # noqa: E501


        :return: The kernel_info_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._kernel_info_not_in

    @kernel_info_not_in.setter
    def kernel_info_not_in(self, kernel_info_not_in):
        """Sets the kernel_info_not_in of this VmWhereInput.


        :param kernel_info_not_in: The kernel_info_not_in of this VmWhereInput.  # noqa: E501
        :type kernel_info_not_in: list[str]
        """

        self._kernel_info_not_in = kernel_info_not_in

    @property
    def kernel_info_not_starts_with(self):
        """Gets the kernel_info_not_starts_with of this VmWhereInput.  # noqa: E501


        :return: The kernel_info_not_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kernel_info_not_starts_with

    @kernel_info_not_starts_with.setter
    def kernel_info_not_starts_with(self, kernel_info_not_starts_with):
        """Sets the kernel_info_not_starts_with of this VmWhereInput.


        :param kernel_info_not_starts_with: The kernel_info_not_starts_with of this VmWhereInput.  # noqa: E501
        :type kernel_info_not_starts_with: str
        """

        self._kernel_info_not_starts_with = kernel_info_not_starts_with

    @property
    def kernel_info_starts_with(self):
        """Gets the kernel_info_starts_with of this VmWhereInput.  # noqa: E501


        :return: The kernel_info_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kernel_info_starts_with

    @kernel_info_starts_with.setter
    def kernel_info_starts_with(self, kernel_info_starts_with):
        """Sets the kernel_info_starts_with of this VmWhereInput.


        :param kernel_info_starts_with: The kernel_info_starts_with of this VmWhereInput.  # noqa: E501
        :type kernel_info_starts_with: str
        """

        self._kernel_info_starts_with = kernel_info_starts_with

    @property
    def labels_every(self):
        """Gets the labels_every of this VmWhereInput.  # noqa: E501


        :return: The labels_every of this VmWhereInput.  # noqa: E501
        :rtype: LabelWhereInput
        """
        return self._labels_every

    @labels_every.setter
    def labels_every(self, labels_every):
        """Sets the labels_every of this VmWhereInput.


        :param labels_every: The labels_every of this VmWhereInput.  # noqa: E501
        :type labels_every: LabelWhereInput
        """

        self._labels_every = labels_every

    @property
    def labels_none(self):
        """Gets the labels_none of this VmWhereInput.  # noqa: E501


        :return: The labels_none of this VmWhereInput.  # noqa: E501
        :rtype: LabelWhereInput
        """
        return self._labels_none

    @labels_none.setter
    def labels_none(self, labels_none):
        """Sets the labels_none of this VmWhereInput.


        :param labels_none: The labels_none of this VmWhereInput.  # noqa: E501
        :type labels_none: LabelWhereInput
        """

        self._labels_none = labels_none

    @property
    def labels_some(self):
        """Gets the labels_some of this VmWhereInput.  # noqa: E501


        :return: The labels_some of this VmWhereInput.  # noqa: E501
        :rtype: LabelWhereInput
        """
        return self._labels_some

    @labels_some.setter
    def labels_some(self, labels_some):
        """Sets the labels_some of this VmWhereInput.


        :param labels_some: The labels_some of this VmWhereInput.  # noqa: E501
        :type labels_some: LabelWhereInput
        """

        self._labels_some = labels_some

    @property
    def last_shutdown_time(self):
        """Gets the last_shutdown_time of this VmWhereInput.  # noqa: E501


        :return: The last_shutdown_time of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._last_shutdown_time

    @last_shutdown_time.setter
    def last_shutdown_time(self, last_shutdown_time):
        """Sets the last_shutdown_time of this VmWhereInput.


        :param last_shutdown_time: The last_shutdown_time of this VmWhereInput.  # noqa: E501
        :type last_shutdown_time: str
        """

        self._last_shutdown_time = last_shutdown_time

    @property
    def last_shutdown_time_gt(self):
        """Gets the last_shutdown_time_gt of this VmWhereInput.  # noqa: E501


        :return: The last_shutdown_time_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._last_shutdown_time_gt

    @last_shutdown_time_gt.setter
    def last_shutdown_time_gt(self, last_shutdown_time_gt):
        """Sets the last_shutdown_time_gt of this VmWhereInput.


        :param last_shutdown_time_gt: The last_shutdown_time_gt of this VmWhereInput.  # noqa: E501
        :type last_shutdown_time_gt: str
        """

        self._last_shutdown_time_gt = last_shutdown_time_gt

    @property
    def last_shutdown_time_gte(self):
        """Gets the last_shutdown_time_gte of this VmWhereInput.  # noqa: E501


        :return: The last_shutdown_time_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._last_shutdown_time_gte

    @last_shutdown_time_gte.setter
    def last_shutdown_time_gte(self, last_shutdown_time_gte):
        """Sets the last_shutdown_time_gte of this VmWhereInput.


        :param last_shutdown_time_gte: The last_shutdown_time_gte of this VmWhereInput.  # noqa: E501
        :type last_shutdown_time_gte: str
        """

        self._last_shutdown_time_gte = last_shutdown_time_gte

    @property
    def last_shutdown_time_in(self):
        """Gets the last_shutdown_time_in of this VmWhereInput.  # noqa: E501


        :return: The last_shutdown_time_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._last_shutdown_time_in

    @last_shutdown_time_in.setter
    def last_shutdown_time_in(self, last_shutdown_time_in):
        """Sets the last_shutdown_time_in of this VmWhereInput.


        :param last_shutdown_time_in: The last_shutdown_time_in of this VmWhereInput.  # noqa: E501
        :type last_shutdown_time_in: list[str]
        """

        self._last_shutdown_time_in = last_shutdown_time_in

    @property
    def last_shutdown_time_lt(self):
        """Gets the last_shutdown_time_lt of this VmWhereInput.  # noqa: E501


        :return: The last_shutdown_time_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._last_shutdown_time_lt

    @last_shutdown_time_lt.setter
    def last_shutdown_time_lt(self, last_shutdown_time_lt):
        """Sets the last_shutdown_time_lt of this VmWhereInput.


        :param last_shutdown_time_lt: The last_shutdown_time_lt of this VmWhereInput.  # noqa: E501
        :type last_shutdown_time_lt: str
        """

        self._last_shutdown_time_lt = last_shutdown_time_lt

    @property
    def last_shutdown_time_lte(self):
        """Gets the last_shutdown_time_lte of this VmWhereInput.  # noqa: E501


        :return: The last_shutdown_time_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._last_shutdown_time_lte

    @last_shutdown_time_lte.setter
    def last_shutdown_time_lte(self, last_shutdown_time_lte):
        """Sets the last_shutdown_time_lte of this VmWhereInput.


        :param last_shutdown_time_lte: The last_shutdown_time_lte of this VmWhereInput.  # noqa: E501
        :type last_shutdown_time_lte: str
        """

        self._last_shutdown_time_lte = last_shutdown_time_lte

    @property
    def last_shutdown_time_not(self):
        """Gets the last_shutdown_time_not of this VmWhereInput.  # noqa: E501


        :return: The last_shutdown_time_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._last_shutdown_time_not

    @last_shutdown_time_not.setter
    def last_shutdown_time_not(self, last_shutdown_time_not):
        """Sets the last_shutdown_time_not of this VmWhereInput.


        :param last_shutdown_time_not: The last_shutdown_time_not of this VmWhereInput.  # noqa: E501
        :type last_shutdown_time_not: str
        """

        self._last_shutdown_time_not = last_shutdown_time_not

    @property
    def last_shutdown_time_not_in(self):
        """Gets the last_shutdown_time_not_in of this VmWhereInput.  # noqa: E501


        :return: The last_shutdown_time_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._last_shutdown_time_not_in

    @last_shutdown_time_not_in.setter
    def last_shutdown_time_not_in(self, last_shutdown_time_not_in):
        """Sets the last_shutdown_time_not_in of this VmWhereInput.


        :param last_shutdown_time_not_in: The last_shutdown_time_not_in of this VmWhereInput.  # noqa: E501
        :type last_shutdown_time_not_in: list[str]
        """

        self._last_shutdown_time_not_in = last_shutdown_time_not_in

    @property
    def local_created_at(self):
        """Gets the local_created_at of this VmWhereInput.  # noqa: E501


        :return: The local_created_at of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at

    @local_created_at.setter
    def local_created_at(self, local_created_at):
        """Sets the local_created_at of this VmWhereInput.


        :param local_created_at: The local_created_at of this VmWhereInput.  # noqa: E501
        :type local_created_at: str
        """

        self._local_created_at = local_created_at

    @property
    def local_created_at_gt(self):
        """Gets the local_created_at_gt of this VmWhereInput.  # noqa: E501


        :return: The local_created_at_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at_gt

    @local_created_at_gt.setter
    def local_created_at_gt(self, local_created_at_gt):
        """Sets the local_created_at_gt of this VmWhereInput.


        :param local_created_at_gt: The local_created_at_gt of this VmWhereInput.  # noqa: E501
        :type local_created_at_gt: str
        """

        self._local_created_at_gt = local_created_at_gt

    @property
    def local_created_at_gte(self):
        """Gets the local_created_at_gte of this VmWhereInput.  # noqa: E501


        :return: The local_created_at_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at_gte

    @local_created_at_gte.setter
    def local_created_at_gte(self, local_created_at_gte):
        """Sets the local_created_at_gte of this VmWhereInput.


        :param local_created_at_gte: The local_created_at_gte of this VmWhereInput.  # noqa: E501
        :type local_created_at_gte: str
        """

        self._local_created_at_gte = local_created_at_gte

    @property
    def local_created_at_in(self):
        """Gets the local_created_at_in of this VmWhereInput.  # noqa: E501


        :return: The local_created_at_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_created_at_in

    @local_created_at_in.setter
    def local_created_at_in(self, local_created_at_in):
        """Sets the local_created_at_in of this VmWhereInput.


        :param local_created_at_in: The local_created_at_in of this VmWhereInput.  # noqa: E501
        :type local_created_at_in: list[str]
        """

        self._local_created_at_in = local_created_at_in

    @property
    def local_created_at_lt(self):
        """Gets the local_created_at_lt of this VmWhereInput.  # noqa: E501


        :return: The local_created_at_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at_lt

    @local_created_at_lt.setter
    def local_created_at_lt(self, local_created_at_lt):
        """Sets the local_created_at_lt of this VmWhereInput.


        :param local_created_at_lt: The local_created_at_lt of this VmWhereInput.  # noqa: E501
        :type local_created_at_lt: str
        """

        self._local_created_at_lt = local_created_at_lt

    @property
    def local_created_at_lte(self):
        """Gets the local_created_at_lte of this VmWhereInput.  # noqa: E501


        :return: The local_created_at_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at_lte

    @local_created_at_lte.setter
    def local_created_at_lte(self, local_created_at_lte):
        """Sets the local_created_at_lte of this VmWhereInput.


        :param local_created_at_lte: The local_created_at_lte of this VmWhereInput.  # noqa: E501
        :type local_created_at_lte: str
        """

        self._local_created_at_lte = local_created_at_lte

    @property
    def local_created_at_not(self):
        """Gets the local_created_at_not of this VmWhereInput.  # noqa: E501


        :return: The local_created_at_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_created_at_not

    @local_created_at_not.setter
    def local_created_at_not(self, local_created_at_not):
        """Sets the local_created_at_not of this VmWhereInput.


        :param local_created_at_not: The local_created_at_not of this VmWhereInput.  # noqa: E501
        :type local_created_at_not: str
        """

        self._local_created_at_not = local_created_at_not

    @property
    def local_created_at_not_in(self):
        """Gets the local_created_at_not_in of this VmWhereInput.  # noqa: E501


        :return: The local_created_at_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_created_at_not_in

    @local_created_at_not_in.setter
    def local_created_at_not_in(self, local_created_at_not_in):
        """Sets the local_created_at_not_in of this VmWhereInput.


        :param local_created_at_not_in: The local_created_at_not_in of this VmWhereInput.  # noqa: E501
        :type local_created_at_not_in: list[str]
        """

        self._local_created_at_not_in = local_created_at_not_in

    @property
    def local_id(self):
        """Gets the local_id of this VmWhereInput.  # noqa: E501


        :return: The local_id of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id

    @local_id.setter
    def local_id(self, local_id):
        """Sets the local_id of this VmWhereInput.


        :param local_id: The local_id of this VmWhereInput.  # noqa: E501
        :type local_id: str
        """

        self._local_id = local_id

    @property
    def local_id_contains(self):
        """Gets the local_id_contains of this VmWhereInput.  # noqa: E501


        :return: The local_id_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_contains

    @local_id_contains.setter
    def local_id_contains(self, local_id_contains):
        """Sets the local_id_contains of this VmWhereInput.


        :param local_id_contains: The local_id_contains of this VmWhereInput.  # noqa: E501
        :type local_id_contains: str
        """

        self._local_id_contains = local_id_contains

    @property
    def local_id_ends_with(self):
        """Gets the local_id_ends_with of this VmWhereInput.  # noqa: E501


        :return: The local_id_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_ends_with

    @local_id_ends_with.setter
    def local_id_ends_with(self, local_id_ends_with):
        """Sets the local_id_ends_with of this VmWhereInput.


        :param local_id_ends_with: The local_id_ends_with of this VmWhereInput.  # noqa: E501
        :type local_id_ends_with: str
        """

        self._local_id_ends_with = local_id_ends_with

    @property
    def local_id_gt(self):
        """Gets the local_id_gt of this VmWhereInput.  # noqa: E501


        :return: The local_id_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gt

    @local_id_gt.setter
    def local_id_gt(self, local_id_gt):
        """Sets the local_id_gt of this VmWhereInput.


        :param local_id_gt: The local_id_gt of this VmWhereInput.  # noqa: E501
        :type local_id_gt: str
        """

        self._local_id_gt = local_id_gt

    @property
    def local_id_gte(self):
        """Gets the local_id_gte of this VmWhereInput.  # noqa: E501


        :return: The local_id_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_gte

    @local_id_gte.setter
    def local_id_gte(self, local_id_gte):
        """Sets the local_id_gte of this VmWhereInput.


        :param local_id_gte: The local_id_gte of this VmWhereInput.  # noqa: E501
        :type local_id_gte: str
        """

        self._local_id_gte = local_id_gte

    @property
    def local_id_in(self):
        """Gets the local_id_in of this VmWhereInput.  # noqa: E501


        :return: The local_id_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_in

    @local_id_in.setter
    def local_id_in(self, local_id_in):
        """Sets the local_id_in of this VmWhereInput.


        :param local_id_in: The local_id_in of this VmWhereInput.  # noqa: E501
        :type local_id_in: list[str]
        """

        self._local_id_in = local_id_in

    @property
    def local_id_lt(self):
        """Gets the local_id_lt of this VmWhereInput.  # noqa: E501


        :return: The local_id_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lt

    @local_id_lt.setter
    def local_id_lt(self, local_id_lt):
        """Sets the local_id_lt of this VmWhereInput.


        :param local_id_lt: The local_id_lt of this VmWhereInput.  # noqa: E501
        :type local_id_lt: str
        """

        self._local_id_lt = local_id_lt

    @property
    def local_id_lte(self):
        """Gets the local_id_lte of this VmWhereInput.  # noqa: E501


        :return: The local_id_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_lte

    @local_id_lte.setter
    def local_id_lte(self, local_id_lte):
        """Sets the local_id_lte of this VmWhereInput.


        :param local_id_lte: The local_id_lte of this VmWhereInput.  # noqa: E501
        :type local_id_lte: str
        """

        self._local_id_lte = local_id_lte

    @property
    def local_id_not(self):
        """Gets the local_id_not of this VmWhereInput.  # noqa: E501


        :return: The local_id_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not

    @local_id_not.setter
    def local_id_not(self, local_id_not):
        """Sets the local_id_not of this VmWhereInput.


        :param local_id_not: The local_id_not of this VmWhereInput.  # noqa: E501
        :type local_id_not: str
        """

        self._local_id_not = local_id_not

    @property
    def local_id_not_contains(self):
        """Gets the local_id_not_contains of this VmWhereInput.  # noqa: E501


        :return: The local_id_not_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_contains

    @local_id_not_contains.setter
    def local_id_not_contains(self, local_id_not_contains):
        """Sets the local_id_not_contains of this VmWhereInput.


        :param local_id_not_contains: The local_id_not_contains of this VmWhereInput.  # noqa: E501
        :type local_id_not_contains: str
        """

        self._local_id_not_contains = local_id_not_contains

    @property
    def local_id_not_ends_with(self):
        """Gets the local_id_not_ends_with of this VmWhereInput.  # noqa: E501


        :return: The local_id_not_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_ends_with

    @local_id_not_ends_with.setter
    def local_id_not_ends_with(self, local_id_not_ends_with):
        """Sets the local_id_not_ends_with of this VmWhereInput.


        :param local_id_not_ends_with: The local_id_not_ends_with of this VmWhereInput.  # noqa: E501
        :type local_id_not_ends_with: str
        """

        self._local_id_not_ends_with = local_id_not_ends_with

    @property
    def local_id_not_in(self):
        """Gets the local_id_not_in of this VmWhereInput.  # noqa: E501


        :return: The local_id_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._local_id_not_in

    @local_id_not_in.setter
    def local_id_not_in(self, local_id_not_in):
        """Sets the local_id_not_in of this VmWhereInput.


        :param local_id_not_in: The local_id_not_in of this VmWhereInput.  # noqa: E501
        :type local_id_not_in: list[str]
        """

        self._local_id_not_in = local_id_not_in

    @property
    def local_id_not_starts_with(self):
        """Gets the local_id_not_starts_with of this VmWhereInput.  # noqa: E501


        :return: The local_id_not_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_not_starts_with

    @local_id_not_starts_with.setter
    def local_id_not_starts_with(self, local_id_not_starts_with):
        """Sets the local_id_not_starts_with of this VmWhereInput.


        :param local_id_not_starts_with: The local_id_not_starts_with of this VmWhereInput.  # noqa: E501
        :type local_id_not_starts_with: str
        """

        self._local_id_not_starts_with = local_id_not_starts_with

    @property
    def local_id_starts_with(self):
        """Gets the local_id_starts_with of this VmWhereInput.  # noqa: E501


        :return: The local_id_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._local_id_starts_with

    @local_id_starts_with.setter
    def local_id_starts_with(self, local_id_starts_with):
        """Sets the local_id_starts_with of this VmWhereInput.


        :param local_id_starts_with: The local_id_starts_with of this VmWhereInput.  # noqa: E501
        :type local_id_starts_with: str
        """

        self._local_id_starts_with = local_id_starts_with

    @property
    def logical_size_bytes(self):
        """Gets the logical_size_bytes of this VmWhereInput.  # noqa: E501


        :return: The logical_size_bytes of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._logical_size_bytes

    @logical_size_bytes.setter
    def logical_size_bytes(self, logical_size_bytes):
        """Sets the logical_size_bytes of this VmWhereInput.


        :param logical_size_bytes: The logical_size_bytes of this VmWhereInput.  # noqa: E501
        :type logical_size_bytes: int
        """

        self._logical_size_bytes = logical_size_bytes

    @property
    def logical_size_bytes_gt(self):
        """Gets the logical_size_bytes_gt of this VmWhereInput.  # noqa: E501


        :return: The logical_size_bytes_gt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._logical_size_bytes_gt

    @logical_size_bytes_gt.setter
    def logical_size_bytes_gt(self, logical_size_bytes_gt):
        """Sets the logical_size_bytes_gt of this VmWhereInput.


        :param logical_size_bytes_gt: The logical_size_bytes_gt of this VmWhereInput.  # noqa: E501
        :type logical_size_bytes_gt: int
        """

        self._logical_size_bytes_gt = logical_size_bytes_gt

    @property
    def logical_size_bytes_gte(self):
        """Gets the logical_size_bytes_gte of this VmWhereInput.  # noqa: E501


        :return: The logical_size_bytes_gte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._logical_size_bytes_gte

    @logical_size_bytes_gte.setter
    def logical_size_bytes_gte(self, logical_size_bytes_gte):
        """Sets the logical_size_bytes_gte of this VmWhereInput.


        :param logical_size_bytes_gte: The logical_size_bytes_gte of this VmWhereInput.  # noqa: E501
        :type logical_size_bytes_gte: int
        """

        self._logical_size_bytes_gte = logical_size_bytes_gte

    @property
    def logical_size_bytes_in(self):
        """Gets the logical_size_bytes_in of this VmWhereInput.  # noqa: E501


        :return: The logical_size_bytes_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._logical_size_bytes_in

    @logical_size_bytes_in.setter
    def logical_size_bytes_in(self, logical_size_bytes_in):
        """Sets the logical_size_bytes_in of this VmWhereInput.


        :param logical_size_bytes_in: The logical_size_bytes_in of this VmWhereInput.  # noqa: E501
        :type logical_size_bytes_in: list[int]
        """

        self._logical_size_bytes_in = logical_size_bytes_in

    @property
    def logical_size_bytes_lt(self):
        """Gets the logical_size_bytes_lt of this VmWhereInput.  # noqa: E501


        :return: The logical_size_bytes_lt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._logical_size_bytes_lt

    @logical_size_bytes_lt.setter
    def logical_size_bytes_lt(self, logical_size_bytes_lt):
        """Sets the logical_size_bytes_lt of this VmWhereInput.


        :param logical_size_bytes_lt: The logical_size_bytes_lt of this VmWhereInput.  # noqa: E501
        :type logical_size_bytes_lt: int
        """

        self._logical_size_bytes_lt = logical_size_bytes_lt

    @property
    def logical_size_bytes_lte(self):
        """Gets the logical_size_bytes_lte of this VmWhereInput.  # noqa: E501


        :return: The logical_size_bytes_lte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._logical_size_bytes_lte

    @logical_size_bytes_lte.setter
    def logical_size_bytes_lte(self, logical_size_bytes_lte):
        """Sets the logical_size_bytes_lte of this VmWhereInput.


        :param logical_size_bytes_lte: The logical_size_bytes_lte of this VmWhereInput.  # noqa: E501
        :type logical_size_bytes_lte: int
        """

        self._logical_size_bytes_lte = logical_size_bytes_lte

    @property
    def logical_size_bytes_not(self):
        """Gets the logical_size_bytes_not of this VmWhereInput.  # noqa: E501


        :return: The logical_size_bytes_not of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._logical_size_bytes_not

    @logical_size_bytes_not.setter
    def logical_size_bytes_not(self, logical_size_bytes_not):
        """Sets the logical_size_bytes_not of this VmWhereInput.


        :param logical_size_bytes_not: The logical_size_bytes_not of this VmWhereInput.  # noqa: E501
        :type logical_size_bytes_not: int
        """

        self._logical_size_bytes_not = logical_size_bytes_not

    @property
    def logical_size_bytes_not_in(self):
        """Gets the logical_size_bytes_not_in of this VmWhereInput.  # noqa: E501


        :return: The logical_size_bytes_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._logical_size_bytes_not_in

    @logical_size_bytes_not_in.setter
    def logical_size_bytes_not_in(self, logical_size_bytes_not_in):
        """Sets the logical_size_bytes_not_in of this VmWhereInput.


        :param logical_size_bytes_not_in: The logical_size_bytes_not_in of this VmWhereInput.  # noqa: E501
        :type logical_size_bytes_not_in: list[int]
        """

        self._logical_size_bytes_not_in = logical_size_bytes_not_in

    @property
    def max_bandwidth(self):
        """Gets the max_bandwidth of this VmWhereInput.  # noqa: E501


        :return: The max_bandwidth of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_bandwidth

    @max_bandwidth.setter
    def max_bandwidth(self, max_bandwidth):
        """Sets the max_bandwidth of this VmWhereInput.


        :param max_bandwidth: The max_bandwidth of this VmWhereInput.  # noqa: E501
        :type max_bandwidth: int
        """

        self._max_bandwidth = max_bandwidth

    @property
    def max_bandwidth_gt(self):
        """Gets the max_bandwidth_gt of this VmWhereInput.  # noqa: E501


        :return: The max_bandwidth_gt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_bandwidth_gt

    @max_bandwidth_gt.setter
    def max_bandwidth_gt(self, max_bandwidth_gt):
        """Sets the max_bandwidth_gt of this VmWhereInput.


        :param max_bandwidth_gt: The max_bandwidth_gt of this VmWhereInput.  # noqa: E501
        :type max_bandwidth_gt: int
        """

        self._max_bandwidth_gt = max_bandwidth_gt

    @property
    def max_bandwidth_gte(self):
        """Gets the max_bandwidth_gte of this VmWhereInput.  # noqa: E501


        :return: The max_bandwidth_gte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_bandwidth_gte

    @max_bandwidth_gte.setter
    def max_bandwidth_gte(self, max_bandwidth_gte):
        """Sets the max_bandwidth_gte of this VmWhereInput.


        :param max_bandwidth_gte: The max_bandwidth_gte of this VmWhereInput.  # noqa: E501
        :type max_bandwidth_gte: int
        """

        self._max_bandwidth_gte = max_bandwidth_gte

    @property
    def max_bandwidth_in(self):
        """Gets the max_bandwidth_in of this VmWhereInput.  # noqa: E501


        :return: The max_bandwidth_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._max_bandwidth_in

    @max_bandwidth_in.setter
    def max_bandwidth_in(self, max_bandwidth_in):
        """Sets the max_bandwidth_in of this VmWhereInput.


        :param max_bandwidth_in: The max_bandwidth_in of this VmWhereInput.  # noqa: E501
        :type max_bandwidth_in: list[int]
        """

        self._max_bandwidth_in = max_bandwidth_in

    @property
    def max_bandwidth_lt(self):
        """Gets the max_bandwidth_lt of this VmWhereInput.  # noqa: E501


        :return: The max_bandwidth_lt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_bandwidth_lt

    @max_bandwidth_lt.setter
    def max_bandwidth_lt(self, max_bandwidth_lt):
        """Sets the max_bandwidth_lt of this VmWhereInput.


        :param max_bandwidth_lt: The max_bandwidth_lt of this VmWhereInput.  # noqa: E501
        :type max_bandwidth_lt: int
        """

        self._max_bandwidth_lt = max_bandwidth_lt

    @property
    def max_bandwidth_lte(self):
        """Gets the max_bandwidth_lte of this VmWhereInput.  # noqa: E501


        :return: The max_bandwidth_lte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_bandwidth_lte

    @max_bandwidth_lte.setter
    def max_bandwidth_lte(self, max_bandwidth_lte):
        """Sets the max_bandwidth_lte of this VmWhereInput.


        :param max_bandwidth_lte: The max_bandwidth_lte of this VmWhereInput.  # noqa: E501
        :type max_bandwidth_lte: int
        """

        self._max_bandwidth_lte = max_bandwidth_lte

    @property
    def max_bandwidth_not(self):
        """Gets the max_bandwidth_not of this VmWhereInput.  # noqa: E501


        :return: The max_bandwidth_not of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_bandwidth_not

    @max_bandwidth_not.setter
    def max_bandwidth_not(self, max_bandwidth_not):
        """Sets the max_bandwidth_not of this VmWhereInput.


        :param max_bandwidth_not: The max_bandwidth_not of this VmWhereInput.  # noqa: E501
        :type max_bandwidth_not: int
        """

        self._max_bandwidth_not = max_bandwidth_not

    @property
    def max_bandwidth_not_in(self):
        """Gets the max_bandwidth_not_in of this VmWhereInput.  # noqa: E501


        :return: The max_bandwidth_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._max_bandwidth_not_in

    @max_bandwidth_not_in.setter
    def max_bandwidth_not_in(self, max_bandwidth_not_in):
        """Sets the max_bandwidth_not_in of this VmWhereInput.


        :param max_bandwidth_not_in: The max_bandwidth_not_in of this VmWhereInput.  # noqa: E501
        :type max_bandwidth_not_in: list[int]
        """

        self._max_bandwidth_not_in = max_bandwidth_not_in

    @property
    def max_bandwidth_policy(self):
        """Gets the max_bandwidth_policy of this VmWhereInput.  # noqa: E501


        :return: The max_bandwidth_policy of this VmWhereInput.  # noqa: E501
        :rtype: VmDiskIoRestrictType
        """
        return self._max_bandwidth_policy

    @max_bandwidth_policy.setter
    def max_bandwidth_policy(self, max_bandwidth_policy):
        """Sets the max_bandwidth_policy of this VmWhereInput.


        :param max_bandwidth_policy: The max_bandwidth_policy of this VmWhereInput.  # noqa: E501
        :type max_bandwidth_policy: VmDiskIoRestrictType
        """

        self._max_bandwidth_policy = max_bandwidth_policy

    @property
    def max_bandwidth_policy_in(self):
        """Gets the max_bandwidth_policy_in of this VmWhereInput.  # noqa: E501


        :return: The max_bandwidth_policy_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmDiskIoRestrictType]
        """
        return self._max_bandwidth_policy_in

    @max_bandwidth_policy_in.setter
    def max_bandwidth_policy_in(self, max_bandwidth_policy_in):
        """Sets the max_bandwidth_policy_in of this VmWhereInput.


        :param max_bandwidth_policy_in: The max_bandwidth_policy_in of this VmWhereInput.  # noqa: E501
        :type max_bandwidth_policy_in: list[VmDiskIoRestrictType]
        """

        self._max_bandwidth_policy_in = max_bandwidth_policy_in

    @property
    def max_bandwidth_policy_not(self):
        """Gets the max_bandwidth_policy_not of this VmWhereInput.  # noqa: E501


        :return: The max_bandwidth_policy_not of this VmWhereInput.  # noqa: E501
        :rtype: VmDiskIoRestrictType
        """
        return self._max_bandwidth_policy_not

    @max_bandwidth_policy_not.setter
    def max_bandwidth_policy_not(self, max_bandwidth_policy_not):
        """Sets the max_bandwidth_policy_not of this VmWhereInput.


        :param max_bandwidth_policy_not: The max_bandwidth_policy_not of this VmWhereInput.  # noqa: E501
        :type max_bandwidth_policy_not: VmDiskIoRestrictType
        """

        self._max_bandwidth_policy_not = max_bandwidth_policy_not

    @property
    def max_bandwidth_policy_not_in(self):
        """Gets the max_bandwidth_policy_not_in of this VmWhereInput.  # noqa: E501


        :return: The max_bandwidth_policy_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmDiskIoRestrictType]
        """
        return self._max_bandwidth_policy_not_in

    @max_bandwidth_policy_not_in.setter
    def max_bandwidth_policy_not_in(self, max_bandwidth_policy_not_in):
        """Sets the max_bandwidth_policy_not_in of this VmWhereInput.


        :param max_bandwidth_policy_not_in: The max_bandwidth_policy_not_in of this VmWhereInput.  # noqa: E501
        :type max_bandwidth_policy_not_in: list[VmDiskIoRestrictType]
        """

        self._max_bandwidth_policy_not_in = max_bandwidth_policy_not_in

    @property
    def max_iops(self):
        """Gets the max_iops of this VmWhereInput.  # noqa: E501


        :return: The max_iops of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_iops

    @max_iops.setter
    def max_iops(self, max_iops):
        """Sets the max_iops of this VmWhereInput.


        :param max_iops: The max_iops of this VmWhereInput.  # noqa: E501
        :type max_iops: int
        """

        self._max_iops = max_iops

    @property
    def max_iops_gt(self):
        """Gets the max_iops_gt of this VmWhereInput.  # noqa: E501


        :return: The max_iops_gt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_iops_gt

    @max_iops_gt.setter
    def max_iops_gt(self, max_iops_gt):
        """Sets the max_iops_gt of this VmWhereInput.


        :param max_iops_gt: The max_iops_gt of this VmWhereInput.  # noqa: E501
        :type max_iops_gt: int
        """

        self._max_iops_gt = max_iops_gt

    @property
    def max_iops_gte(self):
        """Gets the max_iops_gte of this VmWhereInput.  # noqa: E501


        :return: The max_iops_gte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_iops_gte

    @max_iops_gte.setter
    def max_iops_gte(self, max_iops_gte):
        """Sets the max_iops_gte of this VmWhereInput.


        :param max_iops_gte: The max_iops_gte of this VmWhereInput.  # noqa: E501
        :type max_iops_gte: int
        """

        self._max_iops_gte = max_iops_gte

    @property
    def max_iops_in(self):
        """Gets the max_iops_in of this VmWhereInput.  # noqa: E501


        :return: The max_iops_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._max_iops_in

    @max_iops_in.setter
    def max_iops_in(self, max_iops_in):
        """Sets the max_iops_in of this VmWhereInput.


        :param max_iops_in: The max_iops_in of this VmWhereInput.  # noqa: E501
        :type max_iops_in: list[int]
        """

        self._max_iops_in = max_iops_in

    @property
    def max_iops_lt(self):
        """Gets the max_iops_lt of this VmWhereInput.  # noqa: E501


        :return: The max_iops_lt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_iops_lt

    @max_iops_lt.setter
    def max_iops_lt(self, max_iops_lt):
        """Sets the max_iops_lt of this VmWhereInput.


        :param max_iops_lt: The max_iops_lt of this VmWhereInput.  # noqa: E501
        :type max_iops_lt: int
        """

        self._max_iops_lt = max_iops_lt

    @property
    def max_iops_lte(self):
        """Gets the max_iops_lte of this VmWhereInput.  # noqa: E501


        :return: The max_iops_lte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_iops_lte

    @max_iops_lte.setter
    def max_iops_lte(self, max_iops_lte):
        """Sets the max_iops_lte of this VmWhereInput.


        :param max_iops_lte: The max_iops_lte of this VmWhereInput.  # noqa: E501
        :type max_iops_lte: int
        """

        self._max_iops_lte = max_iops_lte

    @property
    def max_iops_not(self):
        """Gets the max_iops_not of this VmWhereInput.  # noqa: E501


        :return: The max_iops_not of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_iops_not

    @max_iops_not.setter
    def max_iops_not(self, max_iops_not):
        """Sets the max_iops_not of this VmWhereInput.


        :param max_iops_not: The max_iops_not of this VmWhereInput.  # noqa: E501
        :type max_iops_not: int
        """

        self._max_iops_not = max_iops_not

    @property
    def max_iops_not_in(self):
        """Gets the max_iops_not_in of this VmWhereInput.  # noqa: E501


        :return: The max_iops_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._max_iops_not_in

    @max_iops_not_in.setter
    def max_iops_not_in(self, max_iops_not_in):
        """Sets the max_iops_not_in of this VmWhereInput.


        :param max_iops_not_in: The max_iops_not_in of this VmWhereInput.  # noqa: E501
        :type max_iops_not_in: list[int]
        """

        self._max_iops_not_in = max_iops_not_in

    @property
    def max_iops_policy(self):
        """Gets the max_iops_policy of this VmWhereInput.  # noqa: E501


        :return: The max_iops_policy of this VmWhereInput.  # noqa: E501
        :rtype: VmDiskIoRestrictType
        """
        return self._max_iops_policy

    @max_iops_policy.setter
    def max_iops_policy(self, max_iops_policy):
        """Sets the max_iops_policy of this VmWhereInput.


        :param max_iops_policy: The max_iops_policy of this VmWhereInput.  # noqa: E501
        :type max_iops_policy: VmDiskIoRestrictType
        """

        self._max_iops_policy = max_iops_policy

    @property
    def max_iops_policy_in(self):
        """Gets the max_iops_policy_in of this VmWhereInput.  # noqa: E501


        :return: The max_iops_policy_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmDiskIoRestrictType]
        """
        return self._max_iops_policy_in

    @max_iops_policy_in.setter
    def max_iops_policy_in(self, max_iops_policy_in):
        """Sets the max_iops_policy_in of this VmWhereInput.


        :param max_iops_policy_in: The max_iops_policy_in of this VmWhereInput.  # noqa: E501
        :type max_iops_policy_in: list[VmDiskIoRestrictType]
        """

        self._max_iops_policy_in = max_iops_policy_in

    @property
    def max_iops_policy_not(self):
        """Gets the max_iops_policy_not of this VmWhereInput.  # noqa: E501


        :return: The max_iops_policy_not of this VmWhereInput.  # noqa: E501
        :rtype: VmDiskIoRestrictType
        """
        return self._max_iops_policy_not

    @max_iops_policy_not.setter
    def max_iops_policy_not(self, max_iops_policy_not):
        """Sets the max_iops_policy_not of this VmWhereInput.


        :param max_iops_policy_not: The max_iops_policy_not of this VmWhereInput.  # noqa: E501
        :type max_iops_policy_not: VmDiskIoRestrictType
        """

        self._max_iops_policy_not = max_iops_policy_not

    @property
    def max_iops_policy_not_in(self):
        """Gets the max_iops_policy_not_in of this VmWhereInput.  # noqa: E501


        :return: The max_iops_policy_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmDiskIoRestrictType]
        """
        return self._max_iops_policy_not_in

    @max_iops_policy_not_in.setter
    def max_iops_policy_not_in(self, max_iops_policy_not_in):
        """Sets the max_iops_policy_not_in of this VmWhereInput.


        :param max_iops_policy_not_in: The max_iops_policy_not_in of this VmWhereInput.  # noqa: E501
        :type max_iops_policy_not_in: list[VmDiskIoRestrictType]
        """

        self._max_iops_policy_not_in = max_iops_policy_not_in

    @property
    def memory(self):
        """Gets the memory of this VmWhereInput.  # noqa: E501


        :return: The memory of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._memory

    @memory.setter
    def memory(self, memory):
        """Sets the memory of this VmWhereInput.


        :param memory: The memory of this VmWhereInput.  # noqa: E501
        :type memory: int
        """

        self._memory = memory

    @property
    def memory_gt(self):
        """Gets the memory_gt of this VmWhereInput.  # noqa: E501


        :return: The memory_gt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._memory_gt

    @memory_gt.setter
    def memory_gt(self, memory_gt):
        """Sets the memory_gt of this VmWhereInput.


        :param memory_gt: The memory_gt of this VmWhereInput.  # noqa: E501
        :type memory_gt: int
        """

        self._memory_gt = memory_gt

    @property
    def memory_gte(self):
        """Gets the memory_gte of this VmWhereInput.  # noqa: E501


        :return: The memory_gte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._memory_gte

    @memory_gte.setter
    def memory_gte(self, memory_gte):
        """Sets the memory_gte of this VmWhereInput.


        :param memory_gte: The memory_gte of this VmWhereInput.  # noqa: E501
        :type memory_gte: int
        """

        self._memory_gte = memory_gte

    @property
    def memory_in(self):
        """Gets the memory_in of this VmWhereInput.  # noqa: E501


        :return: The memory_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._memory_in

    @memory_in.setter
    def memory_in(self, memory_in):
        """Sets the memory_in of this VmWhereInput.


        :param memory_in: The memory_in of this VmWhereInput.  # noqa: E501
        :type memory_in: list[int]
        """

        self._memory_in = memory_in

    @property
    def memory_lt(self):
        """Gets the memory_lt of this VmWhereInput.  # noqa: E501


        :return: The memory_lt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._memory_lt

    @memory_lt.setter
    def memory_lt(self, memory_lt):
        """Sets the memory_lt of this VmWhereInput.


        :param memory_lt: The memory_lt of this VmWhereInput.  # noqa: E501
        :type memory_lt: int
        """

        self._memory_lt = memory_lt

    @property
    def memory_lte(self):
        """Gets the memory_lte of this VmWhereInput.  # noqa: E501


        :return: The memory_lte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._memory_lte

    @memory_lte.setter
    def memory_lte(self, memory_lte):
        """Sets the memory_lte of this VmWhereInput.


        :param memory_lte: The memory_lte of this VmWhereInput.  # noqa: E501
        :type memory_lte: int
        """

        self._memory_lte = memory_lte

    @property
    def memory_not(self):
        """Gets the memory_not of this VmWhereInput.  # noqa: E501


        :return: The memory_not of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._memory_not

    @memory_not.setter
    def memory_not(self, memory_not):
        """Sets the memory_not of this VmWhereInput.


        :param memory_not: The memory_not of this VmWhereInput.  # noqa: E501
        :type memory_not: int
        """

        self._memory_not = memory_not

    @property
    def memory_not_in(self):
        """Gets the memory_not_in of this VmWhereInput.  # noqa: E501


        :return: The memory_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._memory_not_in

    @memory_not_in.setter
    def memory_not_in(self, memory_not_in):
        """Sets the memory_not_in of this VmWhereInput.


        :param memory_not_in: The memory_not_in of this VmWhereInput.  # noqa: E501
        :type memory_not_in: list[int]
        """

        self._memory_not_in = memory_not_in

    @property
    def memory_usage(self):
        """Gets the memory_usage of this VmWhereInput.  # noqa: E501


        :return: The memory_usage of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._memory_usage

    @memory_usage.setter
    def memory_usage(self, memory_usage):
        """Sets the memory_usage of this VmWhereInput.


        :param memory_usage: The memory_usage of this VmWhereInput.  # noqa: E501
        :type memory_usage: float
        """

        self._memory_usage = memory_usage

    @property
    def memory_usage_gt(self):
        """Gets the memory_usage_gt of this VmWhereInput.  # noqa: E501


        :return: The memory_usage_gt of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._memory_usage_gt

    @memory_usage_gt.setter
    def memory_usage_gt(self, memory_usage_gt):
        """Sets the memory_usage_gt of this VmWhereInput.


        :param memory_usage_gt: The memory_usage_gt of this VmWhereInput.  # noqa: E501
        :type memory_usage_gt: float
        """

        self._memory_usage_gt = memory_usage_gt

    @property
    def memory_usage_gte(self):
        """Gets the memory_usage_gte of this VmWhereInput.  # noqa: E501


        :return: The memory_usage_gte of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._memory_usage_gte

    @memory_usage_gte.setter
    def memory_usage_gte(self, memory_usage_gte):
        """Sets the memory_usage_gte of this VmWhereInput.


        :param memory_usage_gte: The memory_usage_gte of this VmWhereInput.  # noqa: E501
        :type memory_usage_gte: float
        """

        self._memory_usage_gte = memory_usage_gte

    @property
    def memory_usage_in(self):
        """Gets the memory_usage_in of this VmWhereInput.  # noqa: E501


        :return: The memory_usage_in of this VmWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._memory_usage_in

    @memory_usage_in.setter
    def memory_usage_in(self, memory_usage_in):
        """Sets the memory_usage_in of this VmWhereInput.


        :param memory_usage_in: The memory_usage_in of this VmWhereInput.  # noqa: E501
        :type memory_usage_in: list[float]
        """

        self._memory_usage_in = memory_usage_in

    @property
    def memory_usage_lt(self):
        """Gets the memory_usage_lt of this VmWhereInput.  # noqa: E501


        :return: The memory_usage_lt of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._memory_usage_lt

    @memory_usage_lt.setter
    def memory_usage_lt(self, memory_usage_lt):
        """Sets the memory_usage_lt of this VmWhereInput.


        :param memory_usage_lt: The memory_usage_lt of this VmWhereInput.  # noqa: E501
        :type memory_usage_lt: float
        """

        self._memory_usage_lt = memory_usage_lt

    @property
    def memory_usage_lte(self):
        """Gets the memory_usage_lte of this VmWhereInput.  # noqa: E501


        :return: The memory_usage_lte of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._memory_usage_lte

    @memory_usage_lte.setter
    def memory_usage_lte(self, memory_usage_lte):
        """Sets the memory_usage_lte of this VmWhereInput.


        :param memory_usage_lte: The memory_usage_lte of this VmWhereInput.  # noqa: E501
        :type memory_usage_lte: float
        """

        self._memory_usage_lte = memory_usage_lte

    @property
    def memory_usage_not(self):
        """Gets the memory_usage_not of this VmWhereInput.  # noqa: E501


        :return: The memory_usage_not of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._memory_usage_not

    @memory_usage_not.setter
    def memory_usage_not(self, memory_usage_not):
        """Sets the memory_usage_not of this VmWhereInput.


        :param memory_usage_not: The memory_usage_not of this VmWhereInput.  # noqa: E501
        :type memory_usage_not: float
        """

        self._memory_usage_not = memory_usage_not

    @property
    def memory_usage_not_in(self):
        """Gets the memory_usage_not_in of this VmWhereInput.  # noqa: E501


        :return: The memory_usage_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._memory_usage_not_in

    @memory_usage_not_in.setter
    def memory_usage_not_in(self, memory_usage_not_in):
        """Sets the memory_usage_not_in of this VmWhereInput.


        :param memory_usage_not_in: The memory_usage_not_in of this VmWhereInput.  # noqa: E501
        :type memory_usage_not_in: list[float]
        """

        self._memory_usage_not_in = memory_usage_not_in

    @property
    def name(self):
        """Gets the name of this VmWhereInput.  # noqa: E501


        :return: The name of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this VmWhereInput.


        :param name: The name of this VmWhereInput.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def name_contains(self):
        """Gets the name_contains of this VmWhereInput.  # noqa: E501


        :return: The name_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_contains

    @name_contains.setter
    def name_contains(self, name_contains):
        """Sets the name_contains of this VmWhereInput.


        :param name_contains: The name_contains of this VmWhereInput.  # noqa: E501
        :type name_contains: str
        """

        self._name_contains = name_contains

    @property
    def name_ends_with(self):
        """Gets the name_ends_with of this VmWhereInput.  # noqa: E501


        :return: The name_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_ends_with

    @name_ends_with.setter
    def name_ends_with(self, name_ends_with):
        """Sets the name_ends_with of this VmWhereInput.


        :param name_ends_with: The name_ends_with of this VmWhereInput.  # noqa: E501
        :type name_ends_with: str
        """

        self._name_ends_with = name_ends_with

    @property
    def name_gt(self):
        """Gets the name_gt of this VmWhereInput.  # noqa: E501


        :return: The name_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gt

    @name_gt.setter
    def name_gt(self, name_gt):
        """Sets the name_gt of this VmWhereInput.


        :param name_gt: The name_gt of this VmWhereInput.  # noqa: E501
        :type name_gt: str
        """

        self._name_gt = name_gt

    @property
    def name_gte(self):
        """Gets the name_gte of this VmWhereInput.  # noqa: E501


        :return: The name_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gte

    @name_gte.setter
    def name_gte(self, name_gte):
        """Sets the name_gte of this VmWhereInput.


        :param name_gte: The name_gte of this VmWhereInput.  # noqa: E501
        :type name_gte: str
        """

        self._name_gte = name_gte

    @property
    def name_in(self):
        """Gets the name_in of this VmWhereInput.  # noqa: E501


        :return: The name_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_in

    @name_in.setter
    def name_in(self, name_in):
        """Sets the name_in of this VmWhereInput.


        :param name_in: The name_in of this VmWhereInput.  # noqa: E501
        :type name_in: list[str]
        """

        self._name_in = name_in

    @property
    def name_lt(self):
        """Gets the name_lt of this VmWhereInput.  # noqa: E501


        :return: The name_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lt

    @name_lt.setter
    def name_lt(self, name_lt):
        """Sets the name_lt of this VmWhereInput.


        :param name_lt: The name_lt of this VmWhereInput.  # noqa: E501
        :type name_lt: str
        """

        self._name_lt = name_lt

    @property
    def name_lte(self):
        """Gets the name_lte of this VmWhereInput.  # noqa: E501


        :return: The name_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lte

    @name_lte.setter
    def name_lte(self, name_lte):
        """Sets the name_lte of this VmWhereInput.


        :param name_lte: The name_lte of this VmWhereInput.  # noqa: E501
        :type name_lte: str
        """

        self._name_lte = name_lte

    @property
    def name_not(self):
        """Gets the name_not of this VmWhereInput.  # noqa: E501


        :return: The name_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not

    @name_not.setter
    def name_not(self, name_not):
        """Sets the name_not of this VmWhereInput.


        :param name_not: The name_not of this VmWhereInput.  # noqa: E501
        :type name_not: str
        """

        self._name_not = name_not

    @property
    def name_not_contains(self):
        """Gets the name_not_contains of this VmWhereInput.  # noqa: E501


        :return: The name_not_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_contains

    @name_not_contains.setter
    def name_not_contains(self, name_not_contains):
        """Sets the name_not_contains of this VmWhereInput.


        :param name_not_contains: The name_not_contains of this VmWhereInput.  # noqa: E501
        :type name_not_contains: str
        """

        self._name_not_contains = name_not_contains

    @property
    def name_not_ends_with(self):
        """Gets the name_not_ends_with of this VmWhereInput.  # noqa: E501


        :return: The name_not_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_ends_with

    @name_not_ends_with.setter
    def name_not_ends_with(self, name_not_ends_with):
        """Sets the name_not_ends_with of this VmWhereInput.


        :param name_not_ends_with: The name_not_ends_with of this VmWhereInput.  # noqa: E501
        :type name_not_ends_with: str
        """

        self._name_not_ends_with = name_not_ends_with

    @property
    def name_not_in(self):
        """Gets the name_not_in of this VmWhereInput.  # noqa: E501


        :return: The name_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_not_in

    @name_not_in.setter
    def name_not_in(self, name_not_in):
        """Sets the name_not_in of this VmWhereInput.


        :param name_not_in: The name_not_in of this VmWhereInput.  # noqa: E501
        :type name_not_in: list[str]
        """

        self._name_not_in = name_not_in

    @property
    def name_not_starts_with(self):
        """Gets the name_not_starts_with of this VmWhereInput.  # noqa: E501


        :return: The name_not_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_starts_with

    @name_not_starts_with.setter
    def name_not_starts_with(self, name_not_starts_with):
        """Sets the name_not_starts_with of this VmWhereInput.


        :param name_not_starts_with: The name_not_starts_with of this VmWhereInput.  # noqa: E501
        :type name_not_starts_with: str
        """

        self._name_not_starts_with = name_not_starts_with

    @property
    def name_starts_with(self):
        """Gets the name_starts_with of this VmWhereInput.  # noqa: E501


        :return: The name_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_starts_with

    @name_starts_with.setter
    def name_starts_with(self, name_starts_with):
        """Sets the name_starts_with of this VmWhereInput.


        :param name_starts_with: The name_starts_with of this VmWhereInput.  # noqa: E501
        :type name_starts_with: str
        """

        self._name_starts_with = name_starts_with

    @property
    def nested_virtualization(self):
        """Gets the nested_virtualization of this VmWhereInput.  # noqa: E501


        :return: The nested_virtualization of this VmWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._nested_virtualization

    @nested_virtualization.setter
    def nested_virtualization(self, nested_virtualization):
        """Sets the nested_virtualization of this VmWhereInput.


        :param nested_virtualization: The nested_virtualization of this VmWhereInput.  # noqa: E501
        :type nested_virtualization: bool
        """

        self._nested_virtualization = nested_virtualization

    @property
    def nested_virtualization_not(self):
        """Gets the nested_virtualization_not of this VmWhereInput.  # noqa: E501


        :return: The nested_virtualization_not of this VmWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._nested_virtualization_not

    @nested_virtualization_not.setter
    def nested_virtualization_not(self, nested_virtualization_not):
        """Sets the nested_virtualization_not of this VmWhereInput.


        :param nested_virtualization_not: The nested_virtualization_not of this VmWhereInput.  # noqa: E501
        :type nested_virtualization_not: bool
        """

        self._nested_virtualization_not = nested_virtualization_not

    @property
    def node_ip(self):
        """Gets the node_ip of this VmWhereInput.  # noqa: E501


        :return: The node_ip of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._node_ip

    @node_ip.setter
    def node_ip(self, node_ip):
        """Sets the node_ip of this VmWhereInput.


        :param node_ip: The node_ip of this VmWhereInput.  # noqa: E501
        :type node_ip: str
        """

        self._node_ip = node_ip

    @property
    def node_ip_contains(self):
        """Gets the node_ip_contains of this VmWhereInput.  # noqa: E501


        :return: The node_ip_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._node_ip_contains

    @node_ip_contains.setter
    def node_ip_contains(self, node_ip_contains):
        """Sets the node_ip_contains of this VmWhereInput.


        :param node_ip_contains: The node_ip_contains of this VmWhereInput.  # noqa: E501
        :type node_ip_contains: str
        """

        self._node_ip_contains = node_ip_contains

    @property
    def node_ip_ends_with(self):
        """Gets the node_ip_ends_with of this VmWhereInput.  # noqa: E501


        :return: The node_ip_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._node_ip_ends_with

    @node_ip_ends_with.setter
    def node_ip_ends_with(self, node_ip_ends_with):
        """Sets the node_ip_ends_with of this VmWhereInput.


        :param node_ip_ends_with: The node_ip_ends_with of this VmWhereInput.  # noqa: E501
        :type node_ip_ends_with: str
        """

        self._node_ip_ends_with = node_ip_ends_with

    @property
    def node_ip_gt(self):
        """Gets the node_ip_gt of this VmWhereInput.  # noqa: E501


        :return: The node_ip_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._node_ip_gt

    @node_ip_gt.setter
    def node_ip_gt(self, node_ip_gt):
        """Sets the node_ip_gt of this VmWhereInput.


        :param node_ip_gt: The node_ip_gt of this VmWhereInput.  # noqa: E501
        :type node_ip_gt: str
        """

        self._node_ip_gt = node_ip_gt

    @property
    def node_ip_gte(self):
        """Gets the node_ip_gte of this VmWhereInput.  # noqa: E501


        :return: The node_ip_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._node_ip_gte

    @node_ip_gte.setter
    def node_ip_gte(self, node_ip_gte):
        """Sets the node_ip_gte of this VmWhereInput.


        :param node_ip_gte: The node_ip_gte of this VmWhereInput.  # noqa: E501
        :type node_ip_gte: str
        """

        self._node_ip_gte = node_ip_gte

    @property
    def node_ip_in(self):
        """Gets the node_ip_in of this VmWhereInput.  # noqa: E501


        :return: The node_ip_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._node_ip_in

    @node_ip_in.setter
    def node_ip_in(self, node_ip_in):
        """Sets the node_ip_in of this VmWhereInput.


        :param node_ip_in: The node_ip_in of this VmWhereInput.  # noqa: E501
        :type node_ip_in: list[str]
        """

        self._node_ip_in = node_ip_in

    @property
    def node_ip_lt(self):
        """Gets the node_ip_lt of this VmWhereInput.  # noqa: E501


        :return: The node_ip_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._node_ip_lt

    @node_ip_lt.setter
    def node_ip_lt(self, node_ip_lt):
        """Sets the node_ip_lt of this VmWhereInput.


        :param node_ip_lt: The node_ip_lt of this VmWhereInput.  # noqa: E501
        :type node_ip_lt: str
        """

        self._node_ip_lt = node_ip_lt

    @property
    def node_ip_lte(self):
        """Gets the node_ip_lte of this VmWhereInput.  # noqa: E501


        :return: The node_ip_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._node_ip_lte

    @node_ip_lte.setter
    def node_ip_lte(self, node_ip_lte):
        """Sets the node_ip_lte of this VmWhereInput.


        :param node_ip_lte: The node_ip_lte of this VmWhereInput.  # noqa: E501
        :type node_ip_lte: str
        """

        self._node_ip_lte = node_ip_lte

    @property
    def node_ip_not(self):
        """Gets the node_ip_not of this VmWhereInput.  # noqa: E501


        :return: The node_ip_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._node_ip_not

    @node_ip_not.setter
    def node_ip_not(self, node_ip_not):
        """Sets the node_ip_not of this VmWhereInput.


        :param node_ip_not: The node_ip_not of this VmWhereInput.  # noqa: E501
        :type node_ip_not: str
        """

        self._node_ip_not = node_ip_not

    @property
    def node_ip_not_contains(self):
        """Gets the node_ip_not_contains of this VmWhereInput.  # noqa: E501


        :return: The node_ip_not_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._node_ip_not_contains

    @node_ip_not_contains.setter
    def node_ip_not_contains(self, node_ip_not_contains):
        """Sets the node_ip_not_contains of this VmWhereInput.


        :param node_ip_not_contains: The node_ip_not_contains of this VmWhereInput.  # noqa: E501
        :type node_ip_not_contains: str
        """

        self._node_ip_not_contains = node_ip_not_contains

    @property
    def node_ip_not_ends_with(self):
        """Gets the node_ip_not_ends_with of this VmWhereInput.  # noqa: E501


        :return: The node_ip_not_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._node_ip_not_ends_with

    @node_ip_not_ends_with.setter
    def node_ip_not_ends_with(self, node_ip_not_ends_with):
        """Sets the node_ip_not_ends_with of this VmWhereInput.


        :param node_ip_not_ends_with: The node_ip_not_ends_with of this VmWhereInput.  # noqa: E501
        :type node_ip_not_ends_with: str
        """

        self._node_ip_not_ends_with = node_ip_not_ends_with

    @property
    def node_ip_not_in(self):
        """Gets the node_ip_not_in of this VmWhereInput.  # noqa: E501


        :return: The node_ip_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._node_ip_not_in

    @node_ip_not_in.setter
    def node_ip_not_in(self, node_ip_not_in):
        """Sets the node_ip_not_in of this VmWhereInput.


        :param node_ip_not_in: The node_ip_not_in of this VmWhereInput.  # noqa: E501
        :type node_ip_not_in: list[str]
        """

        self._node_ip_not_in = node_ip_not_in

    @property
    def node_ip_not_starts_with(self):
        """Gets the node_ip_not_starts_with of this VmWhereInput.  # noqa: E501


        :return: The node_ip_not_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._node_ip_not_starts_with

    @node_ip_not_starts_with.setter
    def node_ip_not_starts_with(self, node_ip_not_starts_with):
        """Sets the node_ip_not_starts_with of this VmWhereInput.


        :param node_ip_not_starts_with: The node_ip_not_starts_with of this VmWhereInput.  # noqa: E501
        :type node_ip_not_starts_with: str
        """

        self._node_ip_not_starts_with = node_ip_not_starts_with

    @property
    def node_ip_starts_with(self):
        """Gets the node_ip_starts_with of this VmWhereInput.  # noqa: E501


        :return: The node_ip_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._node_ip_starts_with

    @node_ip_starts_with.setter
    def node_ip_starts_with(self, node_ip_starts_with):
        """Sets the node_ip_starts_with of this VmWhereInput.


        :param node_ip_starts_with: The node_ip_starts_with of this VmWhereInput.  # noqa: E501
        :type node_ip_starts_with: str
        """

        self._node_ip_starts_with = node_ip_starts_with

    @property
    def original_name(self):
        """Gets the original_name of this VmWhereInput.  # noqa: E501


        :return: The original_name of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._original_name

    @original_name.setter
    def original_name(self, original_name):
        """Sets the original_name of this VmWhereInput.


        :param original_name: The original_name of this VmWhereInput.  # noqa: E501
        :type original_name: str
        """

        self._original_name = original_name

    @property
    def original_name_contains(self):
        """Gets the original_name_contains of this VmWhereInput.  # noqa: E501


        :return: The original_name_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._original_name_contains

    @original_name_contains.setter
    def original_name_contains(self, original_name_contains):
        """Sets the original_name_contains of this VmWhereInput.


        :param original_name_contains: The original_name_contains of this VmWhereInput.  # noqa: E501
        :type original_name_contains: str
        """

        self._original_name_contains = original_name_contains

    @property
    def original_name_ends_with(self):
        """Gets the original_name_ends_with of this VmWhereInput.  # noqa: E501


        :return: The original_name_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._original_name_ends_with

    @original_name_ends_with.setter
    def original_name_ends_with(self, original_name_ends_with):
        """Sets the original_name_ends_with of this VmWhereInput.


        :param original_name_ends_with: The original_name_ends_with of this VmWhereInput.  # noqa: E501
        :type original_name_ends_with: str
        """

        self._original_name_ends_with = original_name_ends_with

    @property
    def original_name_gt(self):
        """Gets the original_name_gt of this VmWhereInput.  # noqa: E501


        :return: The original_name_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._original_name_gt

    @original_name_gt.setter
    def original_name_gt(self, original_name_gt):
        """Sets the original_name_gt of this VmWhereInput.


        :param original_name_gt: The original_name_gt of this VmWhereInput.  # noqa: E501
        :type original_name_gt: str
        """

        self._original_name_gt = original_name_gt

    @property
    def original_name_gte(self):
        """Gets the original_name_gte of this VmWhereInput.  # noqa: E501


        :return: The original_name_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._original_name_gte

    @original_name_gte.setter
    def original_name_gte(self, original_name_gte):
        """Sets the original_name_gte of this VmWhereInput.


        :param original_name_gte: The original_name_gte of this VmWhereInput.  # noqa: E501
        :type original_name_gte: str
        """

        self._original_name_gte = original_name_gte

    @property
    def original_name_in(self):
        """Gets the original_name_in of this VmWhereInput.  # noqa: E501


        :return: The original_name_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._original_name_in

    @original_name_in.setter
    def original_name_in(self, original_name_in):
        """Sets the original_name_in of this VmWhereInput.


        :param original_name_in: The original_name_in of this VmWhereInput.  # noqa: E501
        :type original_name_in: list[str]
        """

        self._original_name_in = original_name_in

    @property
    def original_name_lt(self):
        """Gets the original_name_lt of this VmWhereInput.  # noqa: E501


        :return: The original_name_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._original_name_lt

    @original_name_lt.setter
    def original_name_lt(self, original_name_lt):
        """Sets the original_name_lt of this VmWhereInput.


        :param original_name_lt: The original_name_lt of this VmWhereInput.  # noqa: E501
        :type original_name_lt: str
        """

        self._original_name_lt = original_name_lt

    @property
    def original_name_lte(self):
        """Gets the original_name_lte of this VmWhereInput.  # noqa: E501


        :return: The original_name_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._original_name_lte

    @original_name_lte.setter
    def original_name_lte(self, original_name_lte):
        """Sets the original_name_lte of this VmWhereInput.


        :param original_name_lte: The original_name_lte of this VmWhereInput.  # noqa: E501
        :type original_name_lte: str
        """

        self._original_name_lte = original_name_lte

    @property
    def original_name_not(self):
        """Gets the original_name_not of this VmWhereInput.  # noqa: E501


        :return: The original_name_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._original_name_not

    @original_name_not.setter
    def original_name_not(self, original_name_not):
        """Sets the original_name_not of this VmWhereInput.


        :param original_name_not: The original_name_not of this VmWhereInput.  # noqa: E501
        :type original_name_not: str
        """

        self._original_name_not = original_name_not

    @property
    def original_name_not_contains(self):
        """Gets the original_name_not_contains of this VmWhereInput.  # noqa: E501


        :return: The original_name_not_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._original_name_not_contains

    @original_name_not_contains.setter
    def original_name_not_contains(self, original_name_not_contains):
        """Sets the original_name_not_contains of this VmWhereInput.


        :param original_name_not_contains: The original_name_not_contains of this VmWhereInput.  # noqa: E501
        :type original_name_not_contains: str
        """

        self._original_name_not_contains = original_name_not_contains

    @property
    def original_name_not_ends_with(self):
        """Gets the original_name_not_ends_with of this VmWhereInput.  # noqa: E501


        :return: The original_name_not_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._original_name_not_ends_with

    @original_name_not_ends_with.setter
    def original_name_not_ends_with(self, original_name_not_ends_with):
        """Sets the original_name_not_ends_with of this VmWhereInput.


        :param original_name_not_ends_with: The original_name_not_ends_with of this VmWhereInput.  # noqa: E501
        :type original_name_not_ends_with: str
        """

        self._original_name_not_ends_with = original_name_not_ends_with

    @property
    def original_name_not_in(self):
        """Gets the original_name_not_in of this VmWhereInput.  # noqa: E501


        :return: The original_name_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._original_name_not_in

    @original_name_not_in.setter
    def original_name_not_in(self, original_name_not_in):
        """Sets the original_name_not_in of this VmWhereInput.


        :param original_name_not_in: The original_name_not_in of this VmWhereInput.  # noqa: E501
        :type original_name_not_in: list[str]
        """

        self._original_name_not_in = original_name_not_in

    @property
    def original_name_not_starts_with(self):
        """Gets the original_name_not_starts_with of this VmWhereInput.  # noqa: E501


        :return: The original_name_not_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._original_name_not_starts_with

    @original_name_not_starts_with.setter
    def original_name_not_starts_with(self, original_name_not_starts_with):
        """Sets the original_name_not_starts_with of this VmWhereInput.


        :param original_name_not_starts_with: The original_name_not_starts_with of this VmWhereInput.  # noqa: E501
        :type original_name_not_starts_with: str
        """

        self._original_name_not_starts_with = original_name_not_starts_with

    @property
    def original_name_starts_with(self):
        """Gets the original_name_starts_with of this VmWhereInput.  # noqa: E501


        :return: The original_name_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._original_name_starts_with

    @original_name_starts_with.setter
    def original_name_starts_with(self, original_name_starts_with):
        """Sets the original_name_starts_with of this VmWhereInput.


        :param original_name_starts_with: The original_name_starts_with of this VmWhereInput.  # noqa: E501
        :type original_name_starts_with: str
        """

        self._original_name_starts_with = original_name_starts_with

    @property
    def os(self):
        """Gets the os of this VmWhereInput.  # noqa: E501


        :return: The os of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os

    @os.setter
    def os(self, os):
        """Sets the os of this VmWhereInput.


        :param os: The os of this VmWhereInput.  # noqa: E501
        :type os: str
        """

        self._os = os

    @property
    def os_contains(self):
        """Gets the os_contains of this VmWhereInput.  # noqa: E501


        :return: The os_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_contains

    @os_contains.setter
    def os_contains(self, os_contains):
        """Sets the os_contains of this VmWhereInput.


        :param os_contains: The os_contains of this VmWhereInput.  # noqa: E501
        :type os_contains: str
        """

        self._os_contains = os_contains

    @property
    def os_ends_with(self):
        """Gets the os_ends_with of this VmWhereInput.  # noqa: E501


        :return: The os_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_ends_with

    @os_ends_with.setter
    def os_ends_with(self, os_ends_with):
        """Sets the os_ends_with of this VmWhereInput.


        :param os_ends_with: The os_ends_with of this VmWhereInput.  # noqa: E501
        :type os_ends_with: str
        """

        self._os_ends_with = os_ends_with

    @property
    def os_gt(self):
        """Gets the os_gt of this VmWhereInput.  # noqa: E501


        :return: The os_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_gt

    @os_gt.setter
    def os_gt(self, os_gt):
        """Sets the os_gt of this VmWhereInput.


        :param os_gt: The os_gt of this VmWhereInput.  # noqa: E501
        :type os_gt: str
        """

        self._os_gt = os_gt

    @property
    def os_gte(self):
        """Gets the os_gte of this VmWhereInput.  # noqa: E501


        :return: The os_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_gte

    @os_gte.setter
    def os_gte(self, os_gte):
        """Sets the os_gte of this VmWhereInput.


        :param os_gte: The os_gte of this VmWhereInput.  # noqa: E501
        :type os_gte: str
        """

        self._os_gte = os_gte

    @property
    def os_in(self):
        """Gets the os_in of this VmWhereInput.  # noqa: E501


        :return: The os_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._os_in

    @os_in.setter
    def os_in(self, os_in):
        """Sets the os_in of this VmWhereInput.


        :param os_in: The os_in of this VmWhereInput.  # noqa: E501
        :type os_in: list[str]
        """

        self._os_in = os_in

    @property
    def os_lt(self):
        """Gets the os_lt of this VmWhereInput.  # noqa: E501


        :return: The os_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_lt

    @os_lt.setter
    def os_lt(self, os_lt):
        """Sets the os_lt of this VmWhereInput.


        :param os_lt: The os_lt of this VmWhereInput.  # noqa: E501
        :type os_lt: str
        """

        self._os_lt = os_lt

    @property
    def os_lte(self):
        """Gets the os_lte of this VmWhereInput.  # noqa: E501


        :return: The os_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_lte

    @os_lte.setter
    def os_lte(self, os_lte):
        """Sets the os_lte of this VmWhereInput.


        :param os_lte: The os_lte of this VmWhereInput.  # noqa: E501
        :type os_lte: str
        """

        self._os_lte = os_lte

    @property
    def os_not(self):
        """Gets the os_not of this VmWhereInput.  # noqa: E501


        :return: The os_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_not

    @os_not.setter
    def os_not(self, os_not):
        """Sets the os_not of this VmWhereInput.


        :param os_not: The os_not of this VmWhereInput.  # noqa: E501
        :type os_not: str
        """

        self._os_not = os_not

    @property
    def os_not_contains(self):
        """Gets the os_not_contains of this VmWhereInput.  # noqa: E501


        :return: The os_not_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_not_contains

    @os_not_contains.setter
    def os_not_contains(self, os_not_contains):
        """Sets the os_not_contains of this VmWhereInput.


        :param os_not_contains: The os_not_contains of this VmWhereInput.  # noqa: E501
        :type os_not_contains: str
        """

        self._os_not_contains = os_not_contains

    @property
    def os_not_ends_with(self):
        """Gets the os_not_ends_with of this VmWhereInput.  # noqa: E501


        :return: The os_not_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_not_ends_with

    @os_not_ends_with.setter
    def os_not_ends_with(self, os_not_ends_with):
        """Sets the os_not_ends_with of this VmWhereInput.


        :param os_not_ends_with: The os_not_ends_with of this VmWhereInput.  # noqa: E501
        :type os_not_ends_with: str
        """

        self._os_not_ends_with = os_not_ends_with

    @property
    def os_not_in(self):
        """Gets the os_not_in of this VmWhereInput.  # noqa: E501


        :return: The os_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._os_not_in

    @os_not_in.setter
    def os_not_in(self, os_not_in):
        """Sets the os_not_in of this VmWhereInput.


        :param os_not_in: The os_not_in of this VmWhereInput.  # noqa: E501
        :type os_not_in: list[str]
        """

        self._os_not_in = os_not_in

    @property
    def os_not_starts_with(self):
        """Gets the os_not_starts_with of this VmWhereInput.  # noqa: E501


        :return: The os_not_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_not_starts_with

    @os_not_starts_with.setter
    def os_not_starts_with(self, os_not_starts_with):
        """Sets the os_not_starts_with of this VmWhereInput.


        :param os_not_starts_with: The os_not_starts_with of this VmWhereInput.  # noqa: E501
        :type os_not_starts_with: str
        """

        self._os_not_starts_with = os_not_starts_with

    @property
    def os_starts_with(self):
        """Gets the os_starts_with of this VmWhereInput.  # noqa: E501


        :return: The os_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_starts_with

    @os_starts_with.setter
    def os_starts_with(self, os_starts_with):
        """Sets the os_starts_with of this VmWhereInput.


        :param os_starts_with: The os_starts_with of this VmWhereInput.  # noqa: E501
        :type os_starts_with: str
        """

        self._os_starts_with = os_starts_with

    @property
    def pci_nics_every(self):
        """Gets the pci_nics_every of this VmWhereInput.  # noqa: E501


        :return: The pci_nics_every of this VmWhereInput.  # noqa: E501
        :rtype: NicWhereInput
        """
        return self._pci_nics_every

    @pci_nics_every.setter
    def pci_nics_every(self, pci_nics_every):
        """Sets the pci_nics_every of this VmWhereInput.


        :param pci_nics_every: The pci_nics_every of this VmWhereInput.  # noqa: E501
        :type pci_nics_every: NicWhereInput
        """

        self._pci_nics_every = pci_nics_every

    @property
    def pci_nics_none(self):
        """Gets the pci_nics_none of this VmWhereInput.  # noqa: E501


        :return: The pci_nics_none of this VmWhereInput.  # noqa: E501
        :rtype: NicWhereInput
        """
        return self._pci_nics_none

    @pci_nics_none.setter
    def pci_nics_none(self, pci_nics_none):
        """Sets the pci_nics_none of this VmWhereInput.


        :param pci_nics_none: The pci_nics_none of this VmWhereInput.  # noqa: E501
        :type pci_nics_none: NicWhereInput
        """

        self._pci_nics_none = pci_nics_none

    @property
    def pci_nics_some(self):
        """Gets the pci_nics_some of this VmWhereInput.  # noqa: E501


        :return: The pci_nics_some of this VmWhereInput.  # noqa: E501
        :rtype: NicWhereInput
        """
        return self._pci_nics_some

    @pci_nics_some.setter
    def pci_nics_some(self, pci_nics_some):
        """Sets the pci_nics_some of this VmWhereInput.


        :param pci_nics_some: The pci_nics_some of this VmWhereInput.  # noqa: E501
        :type pci_nics_some: NicWhereInput
        """

        self._pci_nics_some = pci_nics_some

    @property
    def protected(self):
        """Gets the protected of this VmWhereInput.  # noqa: E501


        :return: The protected of this VmWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._protected

    @protected.setter
    def protected(self, protected):
        """Sets the protected of this VmWhereInput.


        :param protected: The protected of this VmWhereInput.  # noqa: E501
        :type protected: bool
        """

        self._protected = protected

    @property
    def protected_not(self):
        """Gets the protected_not of this VmWhereInput.  # noqa: E501


        :return: The protected_not of this VmWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._protected_not

    @protected_not.setter
    def protected_not(self, protected_not):
        """Sets the protected_not of this VmWhereInput.


        :param protected_not: The protected_not of this VmWhereInput.  # noqa: E501
        :type protected_not: bool
        """

        self._protected_not = protected_not

    @property
    def provisioned_size(self):
        """Gets the provisioned_size of this VmWhereInput.  # noqa: E501


        :return: The provisioned_size of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._provisioned_size

    @provisioned_size.setter
    def provisioned_size(self, provisioned_size):
        """Sets the provisioned_size of this VmWhereInput.


        :param provisioned_size: The provisioned_size of this VmWhereInput.  # noqa: E501
        :type provisioned_size: int
        """

        self._provisioned_size = provisioned_size

    @property
    def provisioned_size_gt(self):
        """Gets the provisioned_size_gt of this VmWhereInput.  # noqa: E501


        :return: The provisioned_size_gt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._provisioned_size_gt

    @provisioned_size_gt.setter
    def provisioned_size_gt(self, provisioned_size_gt):
        """Sets the provisioned_size_gt of this VmWhereInput.


        :param provisioned_size_gt: The provisioned_size_gt of this VmWhereInput.  # noqa: E501
        :type provisioned_size_gt: int
        """

        self._provisioned_size_gt = provisioned_size_gt

    @property
    def provisioned_size_gte(self):
        """Gets the provisioned_size_gte of this VmWhereInput.  # noqa: E501


        :return: The provisioned_size_gte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._provisioned_size_gte

    @provisioned_size_gte.setter
    def provisioned_size_gte(self, provisioned_size_gte):
        """Sets the provisioned_size_gte of this VmWhereInput.


        :param provisioned_size_gte: The provisioned_size_gte of this VmWhereInput.  # noqa: E501
        :type provisioned_size_gte: int
        """

        self._provisioned_size_gte = provisioned_size_gte

    @property
    def provisioned_size_in(self):
        """Gets the provisioned_size_in of this VmWhereInput.  # noqa: E501


        :return: The provisioned_size_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._provisioned_size_in

    @provisioned_size_in.setter
    def provisioned_size_in(self, provisioned_size_in):
        """Sets the provisioned_size_in of this VmWhereInput.


        :param provisioned_size_in: The provisioned_size_in of this VmWhereInput.  # noqa: E501
        :type provisioned_size_in: list[int]
        """

        self._provisioned_size_in = provisioned_size_in

    @property
    def provisioned_size_lt(self):
        """Gets the provisioned_size_lt of this VmWhereInput.  # noqa: E501


        :return: The provisioned_size_lt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._provisioned_size_lt

    @provisioned_size_lt.setter
    def provisioned_size_lt(self, provisioned_size_lt):
        """Sets the provisioned_size_lt of this VmWhereInput.


        :param provisioned_size_lt: The provisioned_size_lt of this VmWhereInput.  # noqa: E501
        :type provisioned_size_lt: int
        """

        self._provisioned_size_lt = provisioned_size_lt

    @property
    def provisioned_size_lte(self):
        """Gets the provisioned_size_lte of this VmWhereInput.  # noqa: E501


        :return: The provisioned_size_lte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._provisioned_size_lte

    @provisioned_size_lte.setter
    def provisioned_size_lte(self, provisioned_size_lte):
        """Sets the provisioned_size_lte of this VmWhereInput.


        :param provisioned_size_lte: The provisioned_size_lte of this VmWhereInput.  # noqa: E501
        :type provisioned_size_lte: int
        """

        self._provisioned_size_lte = provisioned_size_lte

    @property
    def provisioned_size_not(self):
        """Gets the provisioned_size_not of this VmWhereInput.  # noqa: E501


        :return: The provisioned_size_not of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._provisioned_size_not

    @provisioned_size_not.setter
    def provisioned_size_not(self, provisioned_size_not):
        """Sets the provisioned_size_not of this VmWhereInput.


        :param provisioned_size_not: The provisioned_size_not of this VmWhereInput.  # noqa: E501
        :type provisioned_size_not: int
        """

        self._provisioned_size_not = provisioned_size_not

    @property
    def provisioned_size_not_in(self):
        """Gets the provisioned_size_not_in of this VmWhereInput.  # noqa: E501


        :return: The provisioned_size_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._provisioned_size_not_in

    @provisioned_size_not_in.setter
    def provisioned_size_not_in(self, provisioned_size_not_in):
        """Sets the provisioned_size_not_in of this VmWhereInput.


        :param provisioned_size_not_in: The provisioned_size_not_in of this VmWhereInput.  # noqa: E501
        :type provisioned_size_not_in: list[int]
        """

        self._provisioned_size_not_in = provisioned_size_not_in

    @property
    def size(self):
        """Gets the size of this VmWhereInput.  # noqa: E501


        :return: The size of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this VmWhereInput.


        :param size: The size of this VmWhereInput.  # noqa: E501
        :type size: int
        """

        self._size = size

    @property
    def size_gt(self):
        """Gets the size_gt of this VmWhereInput.  # noqa: E501


        :return: The size_gt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_gt

    @size_gt.setter
    def size_gt(self, size_gt):
        """Sets the size_gt of this VmWhereInput.


        :param size_gt: The size_gt of this VmWhereInput.  # noqa: E501
        :type size_gt: int
        """

        self._size_gt = size_gt

    @property
    def size_gte(self):
        """Gets the size_gte of this VmWhereInput.  # noqa: E501


        :return: The size_gte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_gte

    @size_gte.setter
    def size_gte(self, size_gte):
        """Sets the size_gte of this VmWhereInput.


        :param size_gte: The size_gte of this VmWhereInput.  # noqa: E501
        :type size_gte: int
        """

        self._size_gte = size_gte

    @property
    def size_in(self):
        """Gets the size_in of this VmWhereInput.  # noqa: E501


        :return: The size_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._size_in

    @size_in.setter
    def size_in(self, size_in):
        """Sets the size_in of this VmWhereInput.


        :param size_in: The size_in of this VmWhereInput.  # noqa: E501
        :type size_in: list[int]
        """

        self._size_in = size_in

    @property
    def size_lt(self):
        """Gets the size_lt of this VmWhereInput.  # noqa: E501


        :return: The size_lt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_lt

    @size_lt.setter
    def size_lt(self, size_lt):
        """Sets the size_lt of this VmWhereInput.


        :param size_lt: The size_lt of this VmWhereInput.  # noqa: E501
        :type size_lt: int
        """

        self._size_lt = size_lt

    @property
    def size_lte(self):
        """Gets the size_lte of this VmWhereInput.  # noqa: E501


        :return: The size_lte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_lte

    @size_lte.setter
    def size_lte(self, size_lte):
        """Sets the size_lte of this VmWhereInput.


        :param size_lte: The size_lte of this VmWhereInput.  # noqa: E501
        :type size_lte: int
        """

        self._size_lte = size_lte

    @property
    def size_not(self):
        """Gets the size_not of this VmWhereInput.  # noqa: E501


        :return: The size_not of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_not

    @size_not.setter
    def size_not(self, size_not):
        """Sets the size_not of this VmWhereInput.


        :param size_not: The size_not of this VmWhereInput.  # noqa: E501
        :type size_not: int
        """

        self._size_not = size_not

    @property
    def size_not_in(self):
        """Gets the size_not_in of this VmWhereInput.  # noqa: E501


        :return: The size_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._size_not_in

    @size_not_in.setter
    def size_not_in(self, size_not_in):
        """Sets the size_not_in of this VmWhereInput.


        :param size_not_in: The size_not_in of this VmWhereInput.  # noqa: E501
        :type size_not_in: list[int]
        """

        self._size_not_in = size_not_in

    @property
    def snapshot_plan(self):
        """Gets the snapshot_plan of this VmWhereInput.  # noqa: E501


        :return: The snapshot_plan of this VmWhereInput.  # noqa: E501
        :rtype: SnapshotPlanWhereInput
        """
        return self._snapshot_plan

    @snapshot_plan.setter
    def snapshot_plan(self, snapshot_plan):
        """Sets the snapshot_plan of this VmWhereInput.


        :param snapshot_plan: The snapshot_plan of this VmWhereInput.  # noqa: E501
        :type snapshot_plan: SnapshotPlanWhereInput
        """

        self._snapshot_plan = snapshot_plan

    @property
    def snapshots_every(self):
        """Gets the snapshots_every of this VmWhereInput.  # noqa: E501


        :return: The snapshots_every of this VmWhereInput.  # noqa: E501
        :rtype: VmSnapshotWhereInput
        """
        return self._snapshots_every

    @snapshots_every.setter
    def snapshots_every(self, snapshots_every):
        """Sets the snapshots_every of this VmWhereInput.


        :param snapshots_every: The snapshots_every of this VmWhereInput.  # noqa: E501
        :type snapshots_every: VmSnapshotWhereInput
        """

        self._snapshots_every = snapshots_every

    @property
    def snapshots_none(self):
        """Gets the snapshots_none of this VmWhereInput.  # noqa: E501


        :return: The snapshots_none of this VmWhereInput.  # noqa: E501
        :rtype: VmSnapshotWhereInput
        """
        return self._snapshots_none

    @snapshots_none.setter
    def snapshots_none(self, snapshots_none):
        """Sets the snapshots_none of this VmWhereInput.


        :param snapshots_none: The snapshots_none of this VmWhereInput.  # noqa: E501
        :type snapshots_none: VmSnapshotWhereInput
        """

        self._snapshots_none = snapshots_none

    @property
    def snapshots_some(self):
        """Gets the snapshots_some of this VmWhereInput.  # noqa: E501


        :return: The snapshots_some of this VmWhereInput.  # noqa: E501
        :rtype: VmSnapshotWhereInput
        """
        return self._snapshots_some

    @snapshots_some.setter
    def snapshots_some(self, snapshots_some):
        """Sets the snapshots_some of this VmWhereInput.


        :param snapshots_some: The snapshots_some of this VmWhereInput.  # noqa: E501
        :type snapshots_some: VmSnapshotWhereInput
        """

        self._snapshots_some = snapshots_some

    @property
    def status(self):
        """Gets the status of this VmWhereInput.  # noqa: E501


        :return: The status of this VmWhereInput.  # noqa: E501
        :rtype: VmStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this VmWhereInput.


        :param status: The status of this VmWhereInput.  # noqa: E501
        :type status: VmStatus
        """

        self._status = status

    @property
    def status_in(self):
        """Gets the status_in of this VmWhereInput.  # noqa: E501


        :return: The status_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmStatus]
        """
        return self._status_in

    @status_in.setter
    def status_in(self, status_in):
        """Sets the status_in of this VmWhereInput.


        :param status_in: The status_in of this VmWhereInput.  # noqa: E501
        :type status_in: list[VmStatus]
        """

        self._status_in = status_in

    @property
    def status_not(self):
        """Gets the status_not of this VmWhereInput.  # noqa: E501


        :return: The status_not of this VmWhereInput.  # noqa: E501
        :rtype: VmStatus
        """
        return self._status_not

    @status_not.setter
    def status_not(self, status_not):
        """Sets the status_not of this VmWhereInput.


        :param status_not: The status_not of this VmWhereInput.  # noqa: E501
        :type status_not: VmStatus
        """

        self._status_not = status_not

    @property
    def status_not_in(self):
        """Gets the status_not_in of this VmWhereInput.  # noqa: E501


        :return: The status_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmStatus]
        """
        return self._status_not_in

    @status_not_in.setter
    def status_not_in(self, status_not_in):
        """Sets the status_not_in of this VmWhereInput.


        :param status_not_in: The status_not_in of this VmWhereInput.  # noqa: E501
        :type status_not_in: list[VmStatus]
        """

        self._status_not_in = status_not_in

    @property
    def unique_logical_size(self):
        """Gets the unique_logical_size of this VmWhereInput.  # noqa: E501


        :return: The unique_logical_size of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._unique_logical_size

    @unique_logical_size.setter
    def unique_logical_size(self, unique_logical_size):
        """Sets the unique_logical_size of this VmWhereInput.


        :param unique_logical_size: The unique_logical_size of this VmWhereInput.  # noqa: E501
        :type unique_logical_size: float
        """

        self._unique_logical_size = unique_logical_size

    @property
    def unique_logical_size_gt(self):
        """Gets the unique_logical_size_gt of this VmWhereInput.  # noqa: E501


        :return: The unique_logical_size_gt of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._unique_logical_size_gt

    @unique_logical_size_gt.setter
    def unique_logical_size_gt(self, unique_logical_size_gt):
        """Sets the unique_logical_size_gt of this VmWhereInput.


        :param unique_logical_size_gt: The unique_logical_size_gt of this VmWhereInput.  # noqa: E501
        :type unique_logical_size_gt: float
        """

        self._unique_logical_size_gt = unique_logical_size_gt

    @property
    def unique_logical_size_gte(self):
        """Gets the unique_logical_size_gte of this VmWhereInput.  # noqa: E501


        :return: The unique_logical_size_gte of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._unique_logical_size_gte

    @unique_logical_size_gte.setter
    def unique_logical_size_gte(self, unique_logical_size_gte):
        """Sets the unique_logical_size_gte of this VmWhereInput.


        :param unique_logical_size_gte: The unique_logical_size_gte of this VmWhereInput.  # noqa: E501
        :type unique_logical_size_gte: float
        """

        self._unique_logical_size_gte = unique_logical_size_gte

    @property
    def unique_logical_size_in(self):
        """Gets the unique_logical_size_in of this VmWhereInput.  # noqa: E501


        :return: The unique_logical_size_in of this VmWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._unique_logical_size_in

    @unique_logical_size_in.setter
    def unique_logical_size_in(self, unique_logical_size_in):
        """Sets the unique_logical_size_in of this VmWhereInput.


        :param unique_logical_size_in: The unique_logical_size_in of this VmWhereInput.  # noqa: E501
        :type unique_logical_size_in: list[float]
        """

        self._unique_logical_size_in = unique_logical_size_in

    @property
    def unique_logical_size_lt(self):
        """Gets the unique_logical_size_lt of this VmWhereInput.  # noqa: E501


        :return: The unique_logical_size_lt of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._unique_logical_size_lt

    @unique_logical_size_lt.setter
    def unique_logical_size_lt(self, unique_logical_size_lt):
        """Sets the unique_logical_size_lt of this VmWhereInput.


        :param unique_logical_size_lt: The unique_logical_size_lt of this VmWhereInput.  # noqa: E501
        :type unique_logical_size_lt: float
        """

        self._unique_logical_size_lt = unique_logical_size_lt

    @property
    def unique_logical_size_lte(self):
        """Gets the unique_logical_size_lte of this VmWhereInput.  # noqa: E501


        :return: The unique_logical_size_lte of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._unique_logical_size_lte

    @unique_logical_size_lte.setter
    def unique_logical_size_lte(self, unique_logical_size_lte):
        """Sets the unique_logical_size_lte of this VmWhereInput.


        :param unique_logical_size_lte: The unique_logical_size_lte of this VmWhereInput.  # noqa: E501
        :type unique_logical_size_lte: float
        """

        self._unique_logical_size_lte = unique_logical_size_lte

    @property
    def unique_logical_size_not(self):
        """Gets the unique_logical_size_not of this VmWhereInput.  # noqa: E501


        :return: The unique_logical_size_not of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._unique_logical_size_not

    @unique_logical_size_not.setter
    def unique_logical_size_not(self, unique_logical_size_not):
        """Sets the unique_logical_size_not of this VmWhereInput.


        :param unique_logical_size_not: The unique_logical_size_not of this VmWhereInput.  # noqa: E501
        :type unique_logical_size_not: float
        """

        self._unique_logical_size_not = unique_logical_size_not

    @property
    def unique_logical_size_not_in(self):
        """Gets the unique_logical_size_not_in of this VmWhereInput.  # noqa: E501


        :return: The unique_logical_size_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._unique_logical_size_not_in

    @unique_logical_size_not_in.setter
    def unique_logical_size_not_in(self, unique_logical_size_not_in):
        """Sets the unique_logical_size_not_in of this VmWhereInput.


        :param unique_logical_size_not_in: The unique_logical_size_not_in of this VmWhereInput.  # noqa: E501
        :type unique_logical_size_not_in: list[float]
        """

        self._unique_logical_size_not_in = unique_logical_size_not_in

    @property
    def unique_size(self):
        """Gets the unique_size of this VmWhereInput.  # noqa: E501


        :return: The unique_size of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._unique_size

    @unique_size.setter
    def unique_size(self, unique_size):
        """Sets the unique_size of this VmWhereInput.


        :param unique_size: The unique_size of this VmWhereInput.  # noqa: E501
        :type unique_size: int
        """

        self._unique_size = unique_size

    @property
    def unique_size_gt(self):
        """Gets the unique_size_gt of this VmWhereInput.  # noqa: E501


        :return: The unique_size_gt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._unique_size_gt

    @unique_size_gt.setter
    def unique_size_gt(self, unique_size_gt):
        """Sets the unique_size_gt of this VmWhereInput.


        :param unique_size_gt: The unique_size_gt of this VmWhereInput.  # noqa: E501
        :type unique_size_gt: int
        """

        self._unique_size_gt = unique_size_gt

    @property
    def unique_size_gte(self):
        """Gets the unique_size_gte of this VmWhereInput.  # noqa: E501


        :return: The unique_size_gte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._unique_size_gte

    @unique_size_gte.setter
    def unique_size_gte(self, unique_size_gte):
        """Sets the unique_size_gte of this VmWhereInput.


        :param unique_size_gte: The unique_size_gte of this VmWhereInput.  # noqa: E501
        :type unique_size_gte: int
        """

        self._unique_size_gte = unique_size_gte

    @property
    def unique_size_in(self):
        """Gets the unique_size_in of this VmWhereInput.  # noqa: E501


        :return: The unique_size_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._unique_size_in

    @unique_size_in.setter
    def unique_size_in(self, unique_size_in):
        """Sets the unique_size_in of this VmWhereInput.


        :param unique_size_in: The unique_size_in of this VmWhereInput.  # noqa: E501
        :type unique_size_in: list[int]
        """

        self._unique_size_in = unique_size_in

    @property
    def unique_size_lt(self):
        """Gets the unique_size_lt of this VmWhereInput.  # noqa: E501


        :return: The unique_size_lt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._unique_size_lt

    @unique_size_lt.setter
    def unique_size_lt(self, unique_size_lt):
        """Sets the unique_size_lt of this VmWhereInput.


        :param unique_size_lt: The unique_size_lt of this VmWhereInput.  # noqa: E501
        :type unique_size_lt: int
        """

        self._unique_size_lt = unique_size_lt

    @property
    def unique_size_lte(self):
        """Gets the unique_size_lte of this VmWhereInput.  # noqa: E501


        :return: The unique_size_lte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._unique_size_lte

    @unique_size_lte.setter
    def unique_size_lte(self, unique_size_lte):
        """Sets the unique_size_lte of this VmWhereInput.


        :param unique_size_lte: The unique_size_lte of this VmWhereInput.  # noqa: E501
        :type unique_size_lte: int
        """

        self._unique_size_lte = unique_size_lte

    @property
    def unique_size_not(self):
        """Gets the unique_size_not of this VmWhereInput.  # noqa: E501


        :return: The unique_size_not of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._unique_size_not

    @unique_size_not.setter
    def unique_size_not(self, unique_size_not):
        """Sets the unique_size_not of this VmWhereInput.


        :param unique_size_not: The unique_size_not of this VmWhereInput.  # noqa: E501
        :type unique_size_not: int
        """

        self._unique_size_not = unique_size_not

    @property
    def unique_size_not_in(self):
        """Gets the unique_size_not_in of this VmWhereInput.  # noqa: E501


        :return: The unique_size_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._unique_size_not_in

    @unique_size_not_in.setter
    def unique_size_not_in(self, unique_size_not_in):
        """Sets the unique_size_not_in of this VmWhereInput.


        :param unique_size_not_in: The unique_size_not_in of this VmWhereInput.  # noqa: E501
        :type unique_size_not_in: list[int]
        """

        self._unique_size_not_in = unique_size_not_in

    @property
    def usb_devices_every(self):
        """Gets the usb_devices_every of this VmWhereInput.  # noqa: E501


        :return: The usb_devices_every of this VmWhereInput.  # noqa: E501
        :rtype: UsbDeviceWhereInput
        """
        return self._usb_devices_every

    @usb_devices_every.setter
    def usb_devices_every(self, usb_devices_every):
        """Sets the usb_devices_every of this VmWhereInput.


        :param usb_devices_every: The usb_devices_every of this VmWhereInput.  # noqa: E501
        :type usb_devices_every: UsbDeviceWhereInput
        """

        self._usb_devices_every = usb_devices_every

    @property
    def usb_devices_none(self):
        """Gets the usb_devices_none of this VmWhereInput.  # noqa: E501


        :return: The usb_devices_none of this VmWhereInput.  # noqa: E501
        :rtype: UsbDeviceWhereInput
        """
        return self._usb_devices_none

    @usb_devices_none.setter
    def usb_devices_none(self, usb_devices_none):
        """Sets the usb_devices_none of this VmWhereInput.


        :param usb_devices_none: The usb_devices_none of this VmWhereInput.  # noqa: E501
        :type usb_devices_none: UsbDeviceWhereInput
        """

        self._usb_devices_none = usb_devices_none

    @property
    def usb_devices_some(self):
        """Gets the usb_devices_some of this VmWhereInput.  # noqa: E501


        :return: The usb_devices_some of this VmWhereInput.  # noqa: E501
        :rtype: UsbDeviceWhereInput
        """
        return self._usb_devices_some

    @usb_devices_some.setter
    def usb_devices_some(self, usb_devices_some):
        """Sets the usb_devices_some of this VmWhereInput.


        :param usb_devices_some: The usb_devices_some of this VmWhereInput.  # noqa: E501
        :type usb_devices_some: UsbDeviceWhereInput
        """

        self._usb_devices_some = usb_devices_some

    @property
    def used_size(self):
        """Gets the used_size of this VmWhereInput.  # noqa: E501


        :return: The used_size of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._used_size

    @used_size.setter
    def used_size(self, used_size):
        """Sets the used_size of this VmWhereInput.


        :param used_size: The used_size of this VmWhereInput.  # noqa: E501
        :type used_size: int
        """

        self._used_size = used_size

    @property
    def used_size_gt(self):
        """Gets the used_size_gt of this VmWhereInput.  # noqa: E501


        :return: The used_size_gt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._used_size_gt

    @used_size_gt.setter
    def used_size_gt(self, used_size_gt):
        """Sets the used_size_gt of this VmWhereInput.


        :param used_size_gt: The used_size_gt of this VmWhereInput.  # noqa: E501
        :type used_size_gt: int
        """

        self._used_size_gt = used_size_gt

    @property
    def used_size_gte(self):
        """Gets the used_size_gte of this VmWhereInput.  # noqa: E501


        :return: The used_size_gte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._used_size_gte

    @used_size_gte.setter
    def used_size_gte(self, used_size_gte):
        """Sets the used_size_gte of this VmWhereInput.


        :param used_size_gte: The used_size_gte of this VmWhereInput.  # noqa: E501
        :type used_size_gte: int
        """

        self._used_size_gte = used_size_gte

    @property
    def used_size_in(self):
        """Gets the used_size_in of this VmWhereInput.  # noqa: E501


        :return: The used_size_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._used_size_in

    @used_size_in.setter
    def used_size_in(self, used_size_in):
        """Sets the used_size_in of this VmWhereInput.


        :param used_size_in: The used_size_in of this VmWhereInput.  # noqa: E501
        :type used_size_in: list[int]
        """

        self._used_size_in = used_size_in

    @property
    def used_size_lt(self):
        """Gets the used_size_lt of this VmWhereInput.  # noqa: E501


        :return: The used_size_lt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._used_size_lt

    @used_size_lt.setter
    def used_size_lt(self, used_size_lt):
        """Sets the used_size_lt of this VmWhereInput.


        :param used_size_lt: The used_size_lt of this VmWhereInput.  # noqa: E501
        :type used_size_lt: int
        """

        self._used_size_lt = used_size_lt

    @property
    def used_size_lte(self):
        """Gets the used_size_lte of this VmWhereInput.  # noqa: E501


        :return: The used_size_lte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._used_size_lte

    @used_size_lte.setter
    def used_size_lte(self, used_size_lte):
        """Sets the used_size_lte of this VmWhereInput.


        :param used_size_lte: The used_size_lte of this VmWhereInput.  # noqa: E501
        :type used_size_lte: int
        """

        self._used_size_lte = used_size_lte

    @property
    def used_size_not(self):
        """Gets the used_size_not of this VmWhereInput.  # noqa: E501


        :return: The used_size_not of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._used_size_not

    @used_size_not.setter
    def used_size_not(self, used_size_not):
        """Sets the used_size_not of this VmWhereInput.


        :param used_size_not: The used_size_not of this VmWhereInput.  # noqa: E501
        :type used_size_not: int
        """

        self._used_size_not = used_size_not

    @property
    def used_size_not_in(self):
        """Gets the used_size_not_in of this VmWhereInput.  # noqa: E501


        :return: The used_size_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._used_size_not_in

    @used_size_not_in.setter
    def used_size_not_in(self, used_size_not_in):
        """Sets the used_size_not_in of this VmWhereInput.


        :param used_size_not_in: The used_size_not_in of this VmWhereInput.  # noqa: E501
        :type used_size_not_in: list[int]
        """

        self._used_size_not_in = used_size_not_in

    @property
    def used_size_usage(self):
        """Gets the used_size_usage of this VmWhereInput.  # noqa: E501


        :return: The used_size_usage of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._used_size_usage

    @used_size_usage.setter
    def used_size_usage(self, used_size_usage):
        """Sets the used_size_usage of this VmWhereInput.


        :param used_size_usage: The used_size_usage of this VmWhereInput.  # noqa: E501
        :type used_size_usage: float
        """

        self._used_size_usage = used_size_usage

    @property
    def used_size_usage_gt(self):
        """Gets the used_size_usage_gt of this VmWhereInput.  # noqa: E501


        :return: The used_size_usage_gt of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._used_size_usage_gt

    @used_size_usage_gt.setter
    def used_size_usage_gt(self, used_size_usage_gt):
        """Sets the used_size_usage_gt of this VmWhereInput.


        :param used_size_usage_gt: The used_size_usage_gt of this VmWhereInput.  # noqa: E501
        :type used_size_usage_gt: float
        """

        self._used_size_usage_gt = used_size_usage_gt

    @property
    def used_size_usage_gte(self):
        """Gets the used_size_usage_gte of this VmWhereInput.  # noqa: E501


        :return: The used_size_usage_gte of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._used_size_usage_gte

    @used_size_usage_gte.setter
    def used_size_usage_gte(self, used_size_usage_gte):
        """Sets the used_size_usage_gte of this VmWhereInput.


        :param used_size_usage_gte: The used_size_usage_gte of this VmWhereInput.  # noqa: E501
        :type used_size_usage_gte: float
        """

        self._used_size_usage_gte = used_size_usage_gte

    @property
    def used_size_usage_in(self):
        """Gets the used_size_usage_in of this VmWhereInput.  # noqa: E501


        :return: The used_size_usage_in of this VmWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._used_size_usage_in

    @used_size_usage_in.setter
    def used_size_usage_in(self, used_size_usage_in):
        """Sets the used_size_usage_in of this VmWhereInput.


        :param used_size_usage_in: The used_size_usage_in of this VmWhereInput.  # noqa: E501
        :type used_size_usage_in: list[float]
        """

        self._used_size_usage_in = used_size_usage_in

    @property
    def used_size_usage_lt(self):
        """Gets the used_size_usage_lt of this VmWhereInput.  # noqa: E501


        :return: The used_size_usage_lt of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._used_size_usage_lt

    @used_size_usage_lt.setter
    def used_size_usage_lt(self, used_size_usage_lt):
        """Sets the used_size_usage_lt of this VmWhereInput.


        :param used_size_usage_lt: The used_size_usage_lt of this VmWhereInput.  # noqa: E501
        :type used_size_usage_lt: float
        """

        self._used_size_usage_lt = used_size_usage_lt

    @property
    def used_size_usage_lte(self):
        """Gets the used_size_usage_lte of this VmWhereInput.  # noqa: E501


        :return: The used_size_usage_lte of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._used_size_usage_lte

    @used_size_usage_lte.setter
    def used_size_usage_lte(self, used_size_usage_lte):
        """Sets the used_size_usage_lte of this VmWhereInput.


        :param used_size_usage_lte: The used_size_usage_lte of this VmWhereInput.  # noqa: E501
        :type used_size_usage_lte: float
        """

        self._used_size_usage_lte = used_size_usage_lte

    @property
    def used_size_usage_not(self):
        """Gets the used_size_usage_not of this VmWhereInput.  # noqa: E501


        :return: The used_size_usage_not of this VmWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._used_size_usage_not

    @used_size_usage_not.setter
    def used_size_usage_not(self, used_size_usage_not):
        """Sets the used_size_usage_not of this VmWhereInput.


        :param used_size_usage_not: The used_size_usage_not of this VmWhereInput.  # noqa: E501
        :type used_size_usage_not: float
        """

        self._used_size_usage_not = used_size_usage_not

    @property
    def used_size_usage_not_in(self):
        """Gets the used_size_usage_not_in of this VmWhereInput.  # noqa: E501


        :return: The used_size_usage_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._used_size_usage_not_in

    @used_size_usage_not_in.setter
    def used_size_usage_not_in(self, used_size_usage_not_in):
        """Sets the used_size_usage_not_in of this VmWhereInput.


        :param used_size_usage_not_in: The used_size_usage_not_in of this VmWhereInput.  # noqa: E501
        :type used_size_usage_not_in: list[float]
        """

        self._used_size_usage_not_in = used_size_usage_not_in

    @property
    def vcpu(self):
        """Gets the vcpu of this VmWhereInput.  # noqa: E501


        :return: The vcpu of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._vcpu

    @vcpu.setter
    def vcpu(self, vcpu):
        """Sets the vcpu of this VmWhereInput.


        :param vcpu: The vcpu of this VmWhereInput.  # noqa: E501
        :type vcpu: int
        """

        self._vcpu = vcpu

    @property
    def vcpu_gt(self):
        """Gets the vcpu_gt of this VmWhereInput.  # noqa: E501


        :return: The vcpu_gt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._vcpu_gt

    @vcpu_gt.setter
    def vcpu_gt(self, vcpu_gt):
        """Sets the vcpu_gt of this VmWhereInput.


        :param vcpu_gt: The vcpu_gt of this VmWhereInput.  # noqa: E501
        :type vcpu_gt: int
        """

        self._vcpu_gt = vcpu_gt

    @property
    def vcpu_gte(self):
        """Gets the vcpu_gte of this VmWhereInput.  # noqa: E501


        :return: The vcpu_gte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._vcpu_gte

    @vcpu_gte.setter
    def vcpu_gte(self, vcpu_gte):
        """Sets the vcpu_gte of this VmWhereInput.


        :param vcpu_gte: The vcpu_gte of this VmWhereInput.  # noqa: E501
        :type vcpu_gte: int
        """

        self._vcpu_gte = vcpu_gte

    @property
    def vcpu_in(self):
        """Gets the vcpu_in of this VmWhereInput.  # noqa: E501


        :return: The vcpu_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._vcpu_in

    @vcpu_in.setter
    def vcpu_in(self, vcpu_in):
        """Sets the vcpu_in of this VmWhereInput.


        :param vcpu_in: The vcpu_in of this VmWhereInput.  # noqa: E501
        :type vcpu_in: list[int]
        """

        self._vcpu_in = vcpu_in

    @property
    def vcpu_lt(self):
        """Gets the vcpu_lt of this VmWhereInput.  # noqa: E501


        :return: The vcpu_lt of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._vcpu_lt

    @vcpu_lt.setter
    def vcpu_lt(self, vcpu_lt):
        """Sets the vcpu_lt of this VmWhereInput.


        :param vcpu_lt: The vcpu_lt of this VmWhereInput.  # noqa: E501
        :type vcpu_lt: int
        """

        self._vcpu_lt = vcpu_lt

    @property
    def vcpu_lte(self):
        """Gets the vcpu_lte of this VmWhereInput.  # noqa: E501


        :return: The vcpu_lte of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._vcpu_lte

    @vcpu_lte.setter
    def vcpu_lte(self, vcpu_lte):
        """Sets the vcpu_lte of this VmWhereInput.


        :param vcpu_lte: The vcpu_lte of this VmWhereInput.  # noqa: E501
        :type vcpu_lte: int
        """

        self._vcpu_lte = vcpu_lte

    @property
    def vcpu_not(self):
        """Gets the vcpu_not of this VmWhereInput.  # noqa: E501


        :return: The vcpu_not of this VmWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._vcpu_not

    @vcpu_not.setter
    def vcpu_not(self, vcpu_not):
        """Sets the vcpu_not of this VmWhereInput.


        :param vcpu_not: The vcpu_not of this VmWhereInput.  # noqa: E501
        :type vcpu_not: int
        """

        self._vcpu_not = vcpu_not

    @property
    def vcpu_not_in(self):
        """Gets the vcpu_not_in of this VmWhereInput.  # noqa: E501


        :return: The vcpu_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._vcpu_not_in

    @vcpu_not_in.setter
    def vcpu_not_in(self, vcpu_not_in):
        """Sets the vcpu_not_in of this VmWhereInput.


        :param vcpu_not_in: The vcpu_not_in of this VmWhereInput.  # noqa: E501
        :type vcpu_not_in: list[int]
        """

        self._vcpu_not_in = vcpu_not_in

    @property
    def video_type(self):
        """Gets the video_type of this VmWhereInput.  # noqa: E501


        :return: The video_type of this VmWhereInput.  # noqa: E501
        :rtype: VmVideoType
        """
        return self._video_type

    @video_type.setter
    def video_type(self, video_type):
        """Sets the video_type of this VmWhereInput.


        :param video_type: The video_type of this VmWhereInput.  # noqa: E501
        :type video_type: VmVideoType
        """

        self._video_type = video_type

    @property
    def video_type_in(self):
        """Gets the video_type_in of this VmWhereInput.  # noqa: E501


        :return: The video_type_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmVideoType]
        """
        return self._video_type_in

    @video_type_in.setter
    def video_type_in(self, video_type_in):
        """Sets the video_type_in of this VmWhereInput.


        :param video_type_in: The video_type_in of this VmWhereInput.  # noqa: E501
        :type video_type_in: list[VmVideoType]
        """

        self._video_type_in = video_type_in

    @property
    def video_type_not(self):
        """Gets the video_type_not of this VmWhereInput.  # noqa: E501


        :return: The video_type_not of this VmWhereInput.  # noqa: E501
        :rtype: VmVideoType
        """
        return self._video_type_not

    @video_type_not.setter
    def video_type_not(self, video_type_not):
        """Sets the video_type_not of this VmWhereInput.


        :param video_type_not: The video_type_not of this VmWhereInput.  # noqa: E501
        :type video_type_not: VmVideoType
        """

        self._video_type_not = video_type_not

    @property
    def video_type_not_in(self):
        """Gets the video_type_not_in of this VmWhereInput.  # noqa: E501


        :return: The video_type_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmVideoType]
        """
        return self._video_type_not_in

    @video_type_not_in.setter
    def video_type_not_in(self, video_type_not_in):
        """Sets the video_type_not_in of this VmWhereInput.


        :param video_type_not_in: The video_type_not_in of this VmWhereInput.  # noqa: E501
        :type video_type_not_in: list[VmVideoType]
        """

        self._video_type_not_in = video_type_not_in

    @property
    def vm_disks_every(self):
        """Gets the vm_disks_every of this VmWhereInput.  # noqa: E501


        :return: The vm_disks_every of this VmWhereInput.  # noqa: E501
        :rtype: VmDiskWhereInput
        """
        return self._vm_disks_every

    @vm_disks_every.setter
    def vm_disks_every(self, vm_disks_every):
        """Sets the vm_disks_every of this VmWhereInput.


        :param vm_disks_every: The vm_disks_every of this VmWhereInput.  # noqa: E501
        :type vm_disks_every: VmDiskWhereInput
        """

        self._vm_disks_every = vm_disks_every

    @property
    def vm_disks_none(self):
        """Gets the vm_disks_none of this VmWhereInput.  # noqa: E501


        :return: The vm_disks_none of this VmWhereInput.  # noqa: E501
        :rtype: VmDiskWhereInput
        """
        return self._vm_disks_none

    @vm_disks_none.setter
    def vm_disks_none(self, vm_disks_none):
        """Sets the vm_disks_none of this VmWhereInput.


        :param vm_disks_none: The vm_disks_none of this VmWhereInput.  # noqa: E501
        :type vm_disks_none: VmDiskWhereInput
        """

        self._vm_disks_none = vm_disks_none

    @property
    def vm_disks_some(self):
        """Gets the vm_disks_some of this VmWhereInput.  # noqa: E501


        :return: The vm_disks_some of this VmWhereInput.  # noqa: E501
        :rtype: VmDiskWhereInput
        """
        return self._vm_disks_some

    @vm_disks_some.setter
    def vm_disks_some(self, vm_disks_some):
        """Sets the vm_disks_some of this VmWhereInput.


        :param vm_disks_some: The vm_disks_some of this VmWhereInput.  # noqa: E501
        :type vm_disks_some: VmDiskWhereInput
        """

        self._vm_disks_some = vm_disks_some

    @property
    def vm_nics_every(self):
        """Gets the vm_nics_every of this VmWhereInput.  # noqa: E501


        :return: The vm_nics_every of this VmWhereInput.  # noqa: E501
        :rtype: VmNicWhereInput
        """
        return self._vm_nics_every

    @vm_nics_every.setter
    def vm_nics_every(self, vm_nics_every):
        """Sets the vm_nics_every of this VmWhereInput.


        :param vm_nics_every: The vm_nics_every of this VmWhereInput.  # noqa: E501
        :type vm_nics_every: VmNicWhereInput
        """

        self._vm_nics_every = vm_nics_every

    @property
    def vm_nics_none(self):
        """Gets the vm_nics_none of this VmWhereInput.  # noqa: E501


        :return: The vm_nics_none of this VmWhereInput.  # noqa: E501
        :rtype: VmNicWhereInput
        """
        return self._vm_nics_none

    @vm_nics_none.setter
    def vm_nics_none(self, vm_nics_none):
        """Sets the vm_nics_none of this VmWhereInput.


        :param vm_nics_none: The vm_nics_none of this VmWhereInput.  # noqa: E501
        :type vm_nics_none: VmNicWhereInput
        """

        self._vm_nics_none = vm_nics_none

    @property
    def vm_nics_some(self):
        """Gets the vm_nics_some of this VmWhereInput.  # noqa: E501


        :return: The vm_nics_some of this VmWhereInput.  # noqa: E501
        :rtype: VmNicWhereInput
        """
        return self._vm_nics_some

    @vm_nics_some.setter
    def vm_nics_some(self, vm_nics_some):
        """Sets the vm_nics_some of this VmWhereInput.


        :param vm_nics_some: The vm_nics_some of this VmWhereInput.  # noqa: E501
        :type vm_nics_some: VmNicWhereInput
        """

        self._vm_nics_some = vm_nics_some

    @property
    def vm_placement_group_every(self):
        """Gets the vm_placement_group_every of this VmWhereInput.  # noqa: E501


        :return: The vm_placement_group_every of this VmWhereInput.  # noqa: E501
        :rtype: VmPlacementGroupWhereInput
        """
        return self._vm_placement_group_every

    @vm_placement_group_every.setter
    def vm_placement_group_every(self, vm_placement_group_every):
        """Sets the vm_placement_group_every of this VmWhereInput.


        :param vm_placement_group_every: The vm_placement_group_every of this VmWhereInput.  # noqa: E501
        :type vm_placement_group_every: VmPlacementGroupWhereInput
        """

        self._vm_placement_group_every = vm_placement_group_every

    @property
    def vm_placement_group_none(self):
        """Gets the vm_placement_group_none of this VmWhereInput.  # noqa: E501


        :return: The vm_placement_group_none of this VmWhereInput.  # noqa: E501
        :rtype: VmPlacementGroupWhereInput
        """
        return self._vm_placement_group_none

    @vm_placement_group_none.setter
    def vm_placement_group_none(self, vm_placement_group_none):
        """Sets the vm_placement_group_none of this VmWhereInput.


        :param vm_placement_group_none: The vm_placement_group_none of this VmWhereInput.  # noqa: E501
        :type vm_placement_group_none: VmPlacementGroupWhereInput
        """

        self._vm_placement_group_none = vm_placement_group_none

    @property
    def vm_placement_group_some(self):
        """Gets the vm_placement_group_some of this VmWhereInput.  # noqa: E501


        :return: The vm_placement_group_some of this VmWhereInput.  # noqa: E501
        :rtype: VmPlacementGroupWhereInput
        """
        return self._vm_placement_group_some

    @vm_placement_group_some.setter
    def vm_placement_group_some(self, vm_placement_group_some):
        """Sets the vm_placement_group_some of this VmWhereInput.


        :param vm_placement_group_some: The vm_placement_group_some of this VmWhereInput.  # noqa: E501
        :type vm_placement_group_some: VmPlacementGroupWhereInput
        """

        self._vm_placement_group_some = vm_placement_group_some

    @property
    def vm_tools_status(self):
        """Gets the vm_tools_status of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_status of this VmWhereInput.  # noqa: E501
        :rtype: VmToolsStatus
        """
        return self._vm_tools_status

    @vm_tools_status.setter
    def vm_tools_status(self, vm_tools_status):
        """Sets the vm_tools_status of this VmWhereInput.


        :param vm_tools_status: The vm_tools_status of this VmWhereInput.  # noqa: E501
        :type vm_tools_status: VmToolsStatus
        """

        self._vm_tools_status = vm_tools_status

    @property
    def vm_tools_status_in(self):
        """Gets the vm_tools_status_in of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_status_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmToolsStatus]
        """
        return self._vm_tools_status_in

    @vm_tools_status_in.setter
    def vm_tools_status_in(self, vm_tools_status_in):
        """Sets the vm_tools_status_in of this VmWhereInput.


        :param vm_tools_status_in: The vm_tools_status_in of this VmWhereInput.  # noqa: E501
        :type vm_tools_status_in: list[VmToolsStatus]
        """

        self._vm_tools_status_in = vm_tools_status_in

    @property
    def vm_tools_status_not(self):
        """Gets the vm_tools_status_not of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_status_not of this VmWhereInput.  # noqa: E501
        :rtype: VmToolsStatus
        """
        return self._vm_tools_status_not

    @vm_tools_status_not.setter
    def vm_tools_status_not(self, vm_tools_status_not):
        """Sets the vm_tools_status_not of this VmWhereInput.


        :param vm_tools_status_not: The vm_tools_status_not of this VmWhereInput.  # noqa: E501
        :type vm_tools_status_not: VmToolsStatus
        """

        self._vm_tools_status_not = vm_tools_status_not

    @property
    def vm_tools_status_not_in(self):
        """Gets the vm_tools_status_not_in of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_status_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmToolsStatus]
        """
        return self._vm_tools_status_not_in

    @vm_tools_status_not_in.setter
    def vm_tools_status_not_in(self, vm_tools_status_not_in):
        """Sets the vm_tools_status_not_in of this VmWhereInput.


        :param vm_tools_status_not_in: The vm_tools_status_not_in of this VmWhereInput.  # noqa: E501
        :type vm_tools_status_not_in: list[VmToolsStatus]
        """

        self._vm_tools_status_not_in = vm_tools_status_not_in

    @property
    def vm_tools_version(self):
        """Gets the vm_tools_version of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_version of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._vm_tools_version

    @vm_tools_version.setter
    def vm_tools_version(self, vm_tools_version):
        """Sets the vm_tools_version of this VmWhereInput.


        :param vm_tools_version: The vm_tools_version of this VmWhereInput.  # noqa: E501
        :type vm_tools_version: str
        """

        self._vm_tools_version = vm_tools_version

    @property
    def vm_tools_version_contains(self):
        """Gets the vm_tools_version_contains of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_version_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._vm_tools_version_contains

    @vm_tools_version_contains.setter
    def vm_tools_version_contains(self, vm_tools_version_contains):
        """Sets the vm_tools_version_contains of this VmWhereInput.


        :param vm_tools_version_contains: The vm_tools_version_contains of this VmWhereInput.  # noqa: E501
        :type vm_tools_version_contains: str
        """

        self._vm_tools_version_contains = vm_tools_version_contains

    @property
    def vm_tools_version_ends_with(self):
        """Gets the vm_tools_version_ends_with of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_version_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._vm_tools_version_ends_with

    @vm_tools_version_ends_with.setter
    def vm_tools_version_ends_with(self, vm_tools_version_ends_with):
        """Sets the vm_tools_version_ends_with of this VmWhereInput.


        :param vm_tools_version_ends_with: The vm_tools_version_ends_with of this VmWhereInput.  # noqa: E501
        :type vm_tools_version_ends_with: str
        """

        self._vm_tools_version_ends_with = vm_tools_version_ends_with

    @property
    def vm_tools_version_gt(self):
        """Gets the vm_tools_version_gt of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_version_gt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._vm_tools_version_gt

    @vm_tools_version_gt.setter
    def vm_tools_version_gt(self, vm_tools_version_gt):
        """Sets the vm_tools_version_gt of this VmWhereInput.


        :param vm_tools_version_gt: The vm_tools_version_gt of this VmWhereInput.  # noqa: E501
        :type vm_tools_version_gt: str
        """

        self._vm_tools_version_gt = vm_tools_version_gt

    @property
    def vm_tools_version_gte(self):
        """Gets the vm_tools_version_gte of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_version_gte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._vm_tools_version_gte

    @vm_tools_version_gte.setter
    def vm_tools_version_gte(self, vm_tools_version_gte):
        """Sets the vm_tools_version_gte of this VmWhereInput.


        :param vm_tools_version_gte: The vm_tools_version_gte of this VmWhereInput.  # noqa: E501
        :type vm_tools_version_gte: str
        """

        self._vm_tools_version_gte = vm_tools_version_gte

    @property
    def vm_tools_version_in(self):
        """Gets the vm_tools_version_in of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_version_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._vm_tools_version_in

    @vm_tools_version_in.setter
    def vm_tools_version_in(self, vm_tools_version_in):
        """Sets the vm_tools_version_in of this VmWhereInput.


        :param vm_tools_version_in: The vm_tools_version_in of this VmWhereInput.  # noqa: E501
        :type vm_tools_version_in: list[str]
        """

        self._vm_tools_version_in = vm_tools_version_in

    @property
    def vm_tools_version_lt(self):
        """Gets the vm_tools_version_lt of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_version_lt of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._vm_tools_version_lt

    @vm_tools_version_lt.setter
    def vm_tools_version_lt(self, vm_tools_version_lt):
        """Sets the vm_tools_version_lt of this VmWhereInput.


        :param vm_tools_version_lt: The vm_tools_version_lt of this VmWhereInput.  # noqa: E501
        :type vm_tools_version_lt: str
        """

        self._vm_tools_version_lt = vm_tools_version_lt

    @property
    def vm_tools_version_lte(self):
        """Gets the vm_tools_version_lte of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_version_lte of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._vm_tools_version_lte

    @vm_tools_version_lte.setter
    def vm_tools_version_lte(self, vm_tools_version_lte):
        """Sets the vm_tools_version_lte of this VmWhereInput.


        :param vm_tools_version_lte: The vm_tools_version_lte of this VmWhereInput.  # noqa: E501
        :type vm_tools_version_lte: str
        """

        self._vm_tools_version_lte = vm_tools_version_lte

    @property
    def vm_tools_version_not(self):
        """Gets the vm_tools_version_not of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_version_not of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._vm_tools_version_not

    @vm_tools_version_not.setter
    def vm_tools_version_not(self, vm_tools_version_not):
        """Sets the vm_tools_version_not of this VmWhereInput.


        :param vm_tools_version_not: The vm_tools_version_not of this VmWhereInput.  # noqa: E501
        :type vm_tools_version_not: str
        """

        self._vm_tools_version_not = vm_tools_version_not

    @property
    def vm_tools_version_not_contains(self):
        """Gets the vm_tools_version_not_contains of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_version_not_contains of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._vm_tools_version_not_contains

    @vm_tools_version_not_contains.setter
    def vm_tools_version_not_contains(self, vm_tools_version_not_contains):
        """Sets the vm_tools_version_not_contains of this VmWhereInput.


        :param vm_tools_version_not_contains: The vm_tools_version_not_contains of this VmWhereInput.  # noqa: E501
        :type vm_tools_version_not_contains: str
        """

        self._vm_tools_version_not_contains = vm_tools_version_not_contains

    @property
    def vm_tools_version_not_ends_with(self):
        """Gets the vm_tools_version_not_ends_with of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_version_not_ends_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._vm_tools_version_not_ends_with

    @vm_tools_version_not_ends_with.setter
    def vm_tools_version_not_ends_with(self, vm_tools_version_not_ends_with):
        """Sets the vm_tools_version_not_ends_with of this VmWhereInput.


        :param vm_tools_version_not_ends_with: The vm_tools_version_not_ends_with of this VmWhereInput.  # noqa: E501
        :type vm_tools_version_not_ends_with: str
        """

        self._vm_tools_version_not_ends_with = vm_tools_version_not_ends_with

    @property
    def vm_tools_version_not_in(self):
        """Gets the vm_tools_version_not_in of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_version_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._vm_tools_version_not_in

    @vm_tools_version_not_in.setter
    def vm_tools_version_not_in(self, vm_tools_version_not_in):
        """Sets the vm_tools_version_not_in of this VmWhereInput.


        :param vm_tools_version_not_in: The vm_tools_version_not_in of this VmWhereInput.  # noqa: E501
        :type vm_tools_version_not_in: list[str]
        """

        self._vm_tools_version_not_in = vm_tools_version_not_in

    @property
    def vm_tools_version_not_starts_with(self):
        """Gets the vm_tools_version_not_starts_with of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_version_not_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._vm_tools_version_not_starts_with

    @vm_tools_version_not_starts_with.setter
    def vm_tools_version_not_starts_with(self, vm_tools_version_not_starts_with):
        """Sets the vm_tools_version_not_starts_with of this VmWhereInput.


        :param vm_tools_version_not_starts_with: The vm_tools_version_not_starts_with of this VmWhereInput.  # noqa: E501
        :type vm_tools_version_not_starts_with: str
        """

        self._vm_tools_version_not_starts_with = vm_tools_version_not_starts_with

    @property
    def vm_tools_version_starts_with(self):
        """Gets the vm_tools_version_starts_with of this VmWhereInput.  # noqa: E501


        :return: The vm_tools_version_starts_with of this VmWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._vm_tools_version_starts_with

    @vm_tools_version_starts_with.setter
    def vm_tools_version_starts_with(self, vm_tools_version_starts_with):
        """Sets the vm_tools_version_starts_with of this VmWhereInput.


        :param vm_tools_version_starts_with: The vm_tools_version_starts_with of this VmWhereInput.  # noqa: E501
        :type vm_tools_version_starts_with: str
        """

        self._vm_tools_version_starts_with = vm_tools_version_starts_with

    @property
    def vm_usage(self):
        """Gets the vm_usage of this VmWhereInput.  # noqa: E501


        :return: The vm_usage of this VmWhereInput.  # noqa: E501
        :rtype: VmUsage
        """
        return self._vm_usage

    @vm_usage.setter
    def vm_usage(self, vm_usage):
        """Sets the vm_usage of this VmWhereInput.


        :param vm_usage: The vm_usage of this VmWhereInput.  # noqa: E501
        :type vm_usage: VmUsage
        """

        self._vm_usage = vm_usage

    @property
    def vm_usage_in(self):
        """Gets the vm_usage_in of this VmWhereInput.  # noqa: E501


        :return: The vm_usage_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmUsage]
        """
        return self._vm_usage_in

    @vm_usage_in.setter
    def vm_usage_in(self, vm_usage_in):
        """Sets the vm_usage_in of this VmWhereInput.


        :param vm_usage_in: The vm_usage_in of this VmWhereInput.  # noqa: E501
        :type vm_usage_in: list[VmUsage]
        """

        self._vm_usage_in = vm_usage_in

    @property
    def vm_usage_not(self):
        """Gets the vm_usage_not of this VmWhereInput.  # noqa: E501


        :return: The vm_usage_not of this VmWhereInput.  # noqa: E501
        :rtype: VmUsage
        """
        return self._vm_usage_not

    @vm_usage_not.setter
    def vm_usage_not(self, vm_usage_not):
        """Sets the vm_usage_not of this VmWhereInput.


        :param vm_usage_not: The vm_usage_not of this VmWhereInput.  # noqa: E501
        :type vm_usage_not: VmUsage
        """

        self._vm_usage_not = vm_usage_not

    @property
    def vm_usage_not_in(self):
        """Gets the vm_usage_not_in of this VmWhereInput.  # noqa: E501


        :return: The vm_usage_not_in of this VmWhereInput.  # noqa: E501
        :rtype: list[VmUsage]
        """
        return self._vm_usage_not_in

    @vm_usage_not_in.setter
    def vm_usage_not_in(self, vm_usage_not_in):
        """Sets the vm_usage_not_in of this VmWhereInput.


        :param vm_usage_not_in: The vm_usage_not_in of this VmWhereInput.  # noqa: E501
        :type vm_usage_not_in: list[VmUsage]
        """

        self._vm_usage_not_in = vm_usage_not_in

    @property
    def win_opt(self):
        """Gets the win_opt of this VmWhereInput.  # noqa: E501


        :return: The win_opt of this VmWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._win_opt

    @win_opt.setter
    def win_opt(self, win_opt):
        """Sets the win_opt of this VmWhereInput.


        :param win_opt: The win_opt of this VmWhereInput.  # noqa: E501
        :type win_opt: bool
        """

        self._win_opt = win_opt

    @property
    def win_opt_not(self):
        """Gets the win_opt_not of this VmWhereInput.  # noqa: E501


        :return: The win_opt_not of this VmWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._win_opt_not

    @win_opt_not.setter
    def win_opt_not(self, win_opt_not):
        """Sets the win_opt_not of this VmWhereInput.


        :param win_opt_not: The win_opt_not of this VmWhereInput.  # noqa: E501
        :type win_opt_not: bool
        """

        self._win_opt_not = win_opt_not

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VmWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, VmWhereInput):
            return True

        return self.to_dict() != other.to_dict()
