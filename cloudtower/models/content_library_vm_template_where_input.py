# coding: utf-8
try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class ContentLibraryVmTemplateWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[ContentLibraryVmTemplateWhereInput]',
        '_not': 'list[ContentLibraryVmTemplateWhereInput]',
        '_or': 'list[ContentLibraryVmTemplateWhereInput]',
        'architecture': 'Architecture',
        'architecture_in': 'list[Architecture]',
        'architecture_not': 'Architecture',
        'architecture_not_in': 'list[Architecture]',
        'cloud_init_supported': 'bool',
        'cloud_init_supported_not': 'bool',
        'clusters_every': 'ClusterWhereInput',
        'clusters_none': 'ClusterWhereInput',
        'clusters_some': 'ClusterWhereInput',
        'created_at': 'str',
        'created_at_gt': 'str',
        'created_at_gte': 'str',
        'created_at_in': 'list[str]',
        'created_at_lt': 'str',
        'created_at_lte': 'str',
        'created_at_not': 'str',
        'created_at_not_in': 'list[str]',
        'description': 'str',
        'description_contains': 'str',
        'description_ends_with': 'str',
        'description_gt': 'str',
        'description_gte': 'str',
        'description_in': 'list[str]',
        'description_lt': 'str',
        'description_lte': 'str',
        'description_not': 'str',
        'description_not_contains': 'str',
        'description_not_ends_with': 'str',
        'description_not_in': 'list[str]',
        'description_not_starts_with': 'str',
        'description_starts_with': 'str',
        'entity_async_status': 'EntityAsyncStatus',
        'entity_async_status_in': 'list[EntityAsyncStatus]',
        'entity_async_status_not': 'EntityAsyncStatus',
        'entity_async_status_not_in': 'list[EntityAsyncStatus]',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'labels_every': 'LabelWhereInput',
        'labels_none': 'LabelWhereInput',
        'labels_some': 'LabelWhereInput',
        'memory': 'int',
        'memory_gt': 'int',
        'memory_gte': 'int',
        'memory_in': 'list[int]',
        'memory_lt': 'int',
        'memory_lte': 'int',
        'memory_not': 'int',
        'memory_not_in': 'list[int]',
        'name': 'str',
        'name_contains': 'str',
        'name_ends_with': 'str',
        'name_gt': 'str',
        'name_gte': 'str',
        'name_in': 'list[str]',
        'name_lt': 'str',
        'name_lte': 'str',
        'name_not': 'str',
        'name_not_contains': 'str',
        'name_not_ends_with': 'str',
        'name_not_in': 'list[str]',
        'name_not_starts_with': 'str',
        'name_starts_with': 'str',
        'os': 'str',
        'os_contains': 'str',
        'os_ends_with': 'str',
        'os_gt': 'str',
        'os_gte': 'str',
        'os_in': 'list[str]',
        'os_lt': 'str',
        'os_lte': 'str',
        'os_not': 'str',
        'os_not_contains': 'str',
        'os_not_ends_with': 'str',
        'os_not_in': 'list[str]',
        'os_not_starts_with': 'str',
        'os_starts_with': 'str',
        'size': 'int',
        'size_gt': 'int',
        'size_gte': 'int',
        'size_in': 'list[int]',
        'size_lt': 'int',
        'size_lte': 'int',
        'size_not': 'int',
        'size_not_in': 'list[int]',
        'vcpu': 'int',
        'vcpu_gt': 'int',
        'vcpu_gte': 'int',
        'vcpu_in': 'list[int]',
        'vcpu_lt': 'int',
        'vcpu_lte': 'int',
        'vcpu_not': 'int',
        'vcpu_not_in': 'list[int]',
        'vm_templates_every': 'VmTemplateWhereInput',
        'vm_templates_none': 'VmTemplateWhereInput',
        'vm_templates_some': 'VmTemplateWhereInput'
    }

    attribute_map = {
        '_and': 'AND',
        '_not': 'NOT',
        '_or': 'OR',
        'architecture': 'architecture',
        'architecture_in': 'architecture_in',
        'architecture_not': 'architecture_not',
        'architecture_not_in': 'architecture_not_in',
        'cloud_init_supported': 'cloud_init_supported',
        'cloud_init_supported_not': 'cloud_init_supported_not',
        'clusters_every': 'clusters_every',
        'clusters_none': 'clusters_none',
        'clusters_some': 'clusters_some',
        'created_at': 'createdAt',
        'created_at_gt': 'createdAt_gt',
        'created_at_gte': 'createdAt_gte',
        'created_at_in': 'createdAt_in',
        'created_at_lt': 'createdAt_lt',
        'created_at_lte': 'createdAt_lte',
        'created_at_not': 'createdAt_not',
        'created_at_not_in': 'createdAt_not_in',
        'description': 'description',
        'description_contains': 'description_contains',
        'description_ends_with': 'description_ends_with',
        'description_gt': 'description_gt',
        'description_gte': 'description_gte',
        'description_in': 'description_in',
        'description_lt': 'description_lt',
        'description_lte': 'description_lte',
        'description_not': 'description_not',
        'description_not_contains': 'description_not_contains',
        'description_not_ends_with': 'description_not_ends_with',
        'description_not_in': 'description_not_in',
        'description_not_starts_with': 'description_not_starts_with',
        'description_starts_with': 'description_starts_with',
        'entity_async_status': 'entityAsyncStatus',
        'entity_async_status_in': 'entityAsyncStatus_in',
        'entity_async_status_not': 'entityAsyncStatus_not',
        'entity_async_status_not_in': 'entityAsyncStatus_not_in',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'labels_every': 'labels_every',
        'labels_none': 'labels_none',
        'labels_some': 'labels_some',
        'memory': 'memory',
        'memory_gt': 'memory_gt',
        'memory_gte': 'memory_gte',
        'memory_in': 'memory_in',
        'memory_lt': 'memory_lt',
        'memory_lte': 'memory_lte',
        'memory_not': 'memory_not',
        'memory_not_in': 'memory_not_in',
        'name': 'name',
        'name_contains': 'name_contains',
        'name_ends_with': 'name_ends_with',
        'name_gt': 'name_gt',
        'name_gte': 'name_gte',
        'name_in': 'name_in',
        'name_lt': 'name_lt',
        'name_lte': 'name_lte',
        'name_not': 'name_not',
        'name_not_contains': 'name_not_contains',
        'name_not_ends_with': 'name_not_ends_with',
        'name_not_in': 'name_not_in',
        'name_not_starts_with': 'name_not_starts_with',
        'name_starts_with': 'name_starts_with',
        'os': 'os',
        'os_contains': 'os_contains',
        'os_ends_with': 'os_ends_with',
        'os_gt': 'os_gt',
        'os_gte': 'os_gte',
        'os_in': 'os_in',
        'os_lt': 'os_lt',
        'os_lte': 'os_lte',
        'os_not': 'os_not',
        'os_not_contains': 'os_not_contains',
        'os_not_ends_with': 'os_not_ends_with',
        'os_not_in': 'os_not_in',
        'os_not_starts_with': 'os_not_starts_with',
        'os_starts_with': 'os_starts_with',
        'size': 'size',
        'size_gt': 'size_gt',
        'size_gte': 'size_gte',
        'size_in': 'size_in',
        'size_lt': 'size_lt',
        'size_lte': 'size_lte',
        'size_not': 'size_not',
        'size_not_in': 'size_not_in',
        'vcpu': 'vcpu',
        'vcpu_gt': 'vcpu_gt',
        'vcpu_gte': 'vcpu_gte',
        'vcpu_in': 'vcpu_in',
        'vcpu_lt': 'vcpu_lt',
        'vcpu_lte': 'vcpu_lte',
        'vcpu_not': 'vcpu_not',
        'vcpu_not_in': 'vcpu_not_in',
        'vm_templates_every': 'vm_templates_every',
        'vm_templates_none': 'vm_templates_none',
        'vm_templates_some': 'vm_templates_some'
    }

    def __init__(self, **kwargs):  # noqa: E501
        """ContentLibraryVmTemplateWhereInput - a model defined in OpenAPI"""  # noqa: E501
        self.local_vars_configuration = kwargs.get("local_vars_configuration", Configuration.get_default_copy())

        self.__and = None
        self.__not = None
        self.__or = None
        self._architecture = None
        self._architecture_in = None
        self._architecture_not = None
        self._architecture_not_in = None
        self._cloud_init_supported = None
        self._cloud_init_supported_not = None
        self._clusters_every = None
        self._clusters_none = None
        self._clusters_some = None
        self._created_at = None
        self._created_at_gt = None
        self._created_at_gte = None
        self._created_at_in = None
        self._created_at_lt = None
        self._created_at_lte = None
        self._created_at_not = None
        self._created_at_not_in = None
        self._description = None
        self._description_contains = None
        self._description_ends_with = None
        self._description_gt = None
        self._description_gte = None
        self._description_in = None
        self._description_lt = None
        self._description_lte = None
        self._description_not = None
        self._description_not_contains = None
        self._description_not_ends_with = None
        self._description_not_in = None
        self._description_not_starts_with = None
        self._description_starts_with = None
        self._entity_async_status = None
        self._entity_async_status_in = None
        self._entity_async_status_not = None
        self._entity_async_status_not_in = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._labels_every = None
        self._labels_none = None
        self._labels_some = None
        self._memory = None
        self._memory_gt = None
        self._memory_gte = None
        self._memory_in = None
        self._memory_lt = None
        self._memory_lte = None
        self._memory_not = None
        self._memory_not_in = None
        self._name = None
        self._name_contains = None
        self._name_ends_with = None
        self._name_gt = None
        self._name_gte = None
        self._name_in = None
        self._name_lt = None
        self._name_lte = None
        self._name_not = None
        self._name_not_contains = None
        self._name_not_ends_with = None
        self._name_not_in = None
        self._name_not_starts_with = None
        self._name_starts_with = None
        self._os = None
        self._os_contains = None
        self._os_ends_with = None
        self._os_gt = None
        self._os_gte = None
        self._os_in = None
        self._os_lt = None
        self._os_lte = None
        self._os_not = None
        self._os_not_contains = None
        self._os_not_ends_with = None
        self._os_not_in = None
        self._os_not_starts_with = None
        self._os_starts_with = None
        self._size = None
        self._size_gt = None
        self._size_gte = None
        self._size_in = None
        self._size_lt = None
        self._size_lte = None
        self._size_not = None
        self._size_not_in = None
        self._vcpu = None
        self._vcpu_gt = None
        self._vcpu_gte = None
        self._vcpu_in = None
        self._vcpu_lt = None
        self._vcpu_lte = None
        self._vcpu_not = None
        self._vcpu_not_in = None
        self._vm_templates_every = None
        self._vm_templates_none = None
        self._vm_templates_some = None
        self.discriminator = None

        self._and = kwargs.get("_and", None)
        self._not = kwargs.get("_not", None)
        self._or = kwargs.get("_or", None)
        self.architecture = kwargs.get("architecture", None)
        self.architecture_in = kwargs.get("architecture_in", None)
        self.architecture_not = kwargs.get("architecture_not", None)
        self.architecture_not_in = kwargs.get("architecture_not_in", None)
        self.cloud_init_supported = kwargs.get("cloud_init_supported", None)
        self.cloud_init_supported_not = kwargs.get("cloud_init_supported_not", None)
        self.clusters_every = kwargs.get("clusters_every", None)
        self.clusters_none = kwargs.get("clusters_none", None)
        self.clusters_some = kwargs.get("clusters_some", None)
        self.created_at = kwargs.get("created_at", None)
        self.created_at_gt = kwargs.get("created_at_gt", None)
        self.created_at_gte = kwargs.get("created_at_gte", None)
        self.created_at_in = kwargs.get("created_at_in", None)
        self.created_at_lt = kwargs.get("created_at_lt", None)
        self.created_at_lte = kwargs.get("created_at_lte", None)
        self.created_at_not = kwargs.get("created_at_not", None)
        self.created_at_not_in = kwargs.get("created_at_not_in", None)
        self.description = kwargs.get("description", None)
        self.description_contains = kwargs.get("description_contains", None)
        self.description_ends_with = kwargs.get("description_ends_with", None)
        self.description_gt = kwargs.get("description_gt", None)
        self.description_gte = kwargs.get("description_gte", None)
        self.description_in = kwargs.get("description_in", None)
        self.description_lt = kwargs.get("description_lt", None)
        self.description_lte = kwargs.get("description_lte", None)
        self.description_not = kwargs.get("description_not", None)
        self.description_not_contains = kwargs.get("description_not_contains", None)
        self.description_not_ends_with = kwargs.get("description_not_ends_with", None)
        self.description_not_in = kwargs.get("description_not_in", None)
        self.description_not_starts_with = kwargs.get("description_not_starts_with", None)
        self.description_starts_with = kwargs.get("description_starts_with", None)
        self.entity_async_status = kwargs.get("entity_async_status", None)
        self.entity_async_status_in = kwargs.get("entity_async_status_in", None)
        self.entity_async_status_not = kwargs.get("entity_async_status_not", None)
        self.entity_async_status_not_in = kwargs.get("entity_async_status_not_in", None)
        self.id = kwargs.get("id", None)
        self.id_contains = kwargs.get("id_contains", None)
        self.id_ends_with = kwargs.get("id_ends_with", None)
        self.id_gt = kwargs.get("id_gt", None)
        self.id_gte = kwargs.get("id_gte", None)
        self.id_in = kwargs.get("id_in", None)
        self.id_lt = kwargs.get("id_lt", None)
        self.id_lte = kwargs.get("id_lte", None)
        self.id_not = kwargs.get("id_not", None)
        self.id_not_contains = kwargs.get("id_not_contains", None)
        self.id_not_ends_with = kwargs.get("id_not_ends_with", None)
        self.id_not_in = kwargs.get("id_not_in", None)
        self.id_not_starts_with = kwargs.get("id_not_starts_with", None)
        self.id_starts_with = kwargs.get("id_starts_with", None)
        self.labels_every = kwargs.get("labels_every", None)
        self.labels_none = kwargs.get("labels_none", None)
        self.labels_some = kwargs.get("labels_some", None)
        self.memory = kwargs.get("memory", None)
        self.memory_gt = kwargs.get("memory_gt", None)
        self.memory_gte = kwargs.get("memory_gte", None)
        self.memory_in = kwargs.get("memory_in", None)
        self.memory_lt = kwargs.get("memory_lt", None)
        self.memory_lte = kwargs.get("memory_lte", None)
        self.memory_not = kwargs.get("memory_not", None)
        self.memory_not_in = kwargs.get("memory_not_in", None)
        self.name = kwargs.get("name", None)
        self.name_contains = kwargs.get("name_contains", None)
        self.name_ends_with = kwargs.get("name_ends_with", None)
        self.name_gt = kwargs.get("name_gt", None)
        self.name_gte = kwargs.get("name_gte", None)
        self.name_in = kwargs.get("name_in", None)
        self.name_lt = kwargs.get("name_lt", None)
        self.name_lte = kwargs.get("name_lte", None)
        self.name_not = kwargs.get("name_not", None)
        self.name_not_contains = kwargs.get("name_not_contains", None)
        self.name_not_ends_with = kwargs.get("name_not_ends_with", None)
        self.name_not_in = kwargs.get("name_not_in", None)
        self.name_not_starts_with = kwargs.get("name_not_starts_with", None)
        self.name_starts_with = kwargs.get("name_starts_with", None)
        self.os = kwargs.get("os", None)
        self.os_contains = kwargs.get("os_contains", None)
        self.os_ends_with = kwargs.get("os_ends_with", None)
        self.os_gt = kwargs.get("os_gt", None)
        self.os_gte = kwargs.get("os_gte", None)
        self.os_in = kwargs.get("os_in", None)
        self.os_lt = kwargs.get("os_lt", None)
        self.os_lte = kwargs.get("os_lte", None)
        self.os_not = kwargs.get("os_not", None)
        self.os_not_contains = kwargs.get("os_not_contains", None)
        self.os_not_ends_with = kwargs.get("os_not_ends_with", None)
        self.os_not_in = kwargs.get("os_not_in", None)
        self.os_not_starts_with = kwargs.get("os_not_starts_with", None)
        self.os_starts_with = kwargs.get("os_starts_with", None)
        self.size = kwargs.get("size", None)
        self.size_gt = kwargs.get("size_gt", None)
        self.size_gte = kwargs.get("size_gte", None)
        self.size_in = kwargs.get("size_in", None)
        self.size_lt = kwargs.get("size_lt", None)
        self.size_lte = kwargs.get("size_lte", None)
        self.size_not = kwargs.get("size_not", None)
        self.size_not_in = kwargs.get("size_not_in", None)
        self.vcpu = kwargs.get("vcpu", None)
        self.vcpu_gt = kwargs.get("vcpu_gt", None)
        self.vcpu_gte = kwargs.get("vcpu_gte", None)
        self.vcpu_in = kwargs.get("vcpu_in", None)
        self.vcpu_lt = kwargs.get("vcpu_lt", None)
        self.vcpu_lte = kwargs.get("vcpu_lte", None)
        self.vcpu_not = kwargs.get("vcpu_not", None)
        self.vcpu_not_in = kwargs.get("vcpu_not_in", None)
        self.vm_templates_every = kwargs.get("vm_templates_every", None)
        self.vm_templates_none = kwargs.get("vm_templates_none", None)
        self.vm_templates_some = kwargs.get("vm_templates_some", None)

    @property
    def _and(self):
        """Gets the _and of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The _and of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[ContentLibraryVmTemplateWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this ContentLibraryVmTemplateWhereInput.


        :param _and: The _and of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type _and: list[ContentLibraryVmTemplateWhereInput]
        """

        self.__and = _and

    @property
    def _not(self):
        """Gets the _not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The _not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[ContentLibraryVmTemplateWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this ContentLibraryVmTemplateWhereInput.


        :param _not: The _not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type _not: list[ContentLibraryVmTemplateWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The _or of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[ContentLibraryVmTemplateWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this ContentLibraryVmTemplateWhereInput.


        :param _or: The _or of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type _or: list[ContentLibraryVmTemplateWhereInput]
        """

        self.__or = _or

    @property
    def architecture(self):
        """Gets the architecture of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The architecture of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: Architecture
        """
        return self._architecture

    @architecture.setter
    def architecture(self, architecture):
        """Sets the architecture of this ContentLibraryVmTemplateWhereInput.


        :param architecture: The architecture of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type architecture: Architecture
        """

        self._architecture = architecture

    @property
    def architecture_in(self):
        """Gets the architecture_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The architecture_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[Architecture]
        """
        return self._architecture_in

    @architecture_in.setter
    def architecture_in(self, architecture_in):
        """Sets the architecture_in of this ContentLibraryVmTemplateWhereInput.


        :param architecture_in: The architecture_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type architecture_in: list[Architecture]
        """

        self._architecture_in = architecture_in

    @property
    def architecture_not(self):
        """Gets the architecture_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The architecture_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: Architecture
        """
        return self._architecture_not

    @architecture_not.setter
    def architecture_not(self, architecture_not):
        """Sets the architecture_not of this ContentLibraryVmTemplateWhereInput.


        :param architecture_not: The architecture_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type architecture_not: Architecture
        """

        self._architecture_not = architecture_not

    @property
    def architecture_not_in(self):
        """Gets the architecture_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The architecture_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[Architecture]
        """
        return self._architecture_not_in

    @architecture_not_in.setter
    def architecture_not_in(self, architecture_not_in):
        """Sets the architecture_not_in of this ContentLibraryVmTemplateWhereInput.


        :param architecture_not_in: The architecture_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type architecture_not_in: list[Architecture]
        """

        self._architecture_not_in = architecture_not_in

    @property
    def cloud_init_supported(self):
        """Gets the cloud_init_supported of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The cloud_init_supported of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._cloud_init_supported

    @cloud_init_supported.setter
    def cloud_init_supported(self, cloud_init_supported):
        """Sets the cloud_init_supported of this ContentLibraryVmTemplateWhereInput.


        :param cloud_init_supported: The cloud_init_supported of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type cloud_init_supported: bool
        """

        self._cloud_init_supported = cloud_init_supported

    @property
    def cloud_init_supported_not(self):
        """Gets the cloud_init_supported_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The cloud_init_supported_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._cloud_init_supported_not

    @cloud_init_supported_not.setter
    def cloud_init_supported_not(self, cloud_init_supported_not):
        """Sets the cloud_init_supported_not of this ContentLibraryVmTemplateWhereInput.


        :param cloud_init_supported_not: The cloud_init_supported_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type cloud_init_supported_not: bool
        """

        self._cloud_init_supported_not = cloud_init_supported_not

    @property
    def clusters_every(self):
        """Gets the clusters_every of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The clusters_every of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: ClusterWhereInput
        """
        return self._clusters_every

    @clusters_every.setter
    def clusters_every(self, clusters_every):
        """Sets the clusters_every of this ContentLibraryVmTemplateWhereInput.


        :param clusters_every: The clusters_every of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type clusters_every: ClusterWhereInput
        """

        self._clusters_every = clusters_every

    @property
    def clusters_none(self):
        """Gets the clusters_none of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The clusters_none of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: ClusterWhereInput
        """
        return self._clusters_none

    @clusters_none.setter
    def clusters_none(self, clusters_none):
        """Sets the clusters_none of this ContentLibraryVmTemplateWhereInput.


        :param clusters_none: The clusters_none of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type clusters_none: ClusterWhereInput
        """

        self._clusters_none = clusters_none

    @property
    def clusters_some(self):
        """Gets the clusters_some of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The clusters_some of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: ClusterWhereInput
        """
        return self._clusters_some

    @clusters_some.setter
    def clusters_some(self, clusters_some):
        """Sets the clusters_some of this ContentLibraryVmTemplateWhereInput.


        :param clusters_some: The clusters_some of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type clusters_some: ClusterWhereInput
        """

        self._clusters_some = clusters_some

    @property
    def created_at(self):
        """Gets the created_at of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The created_at of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ContentLibraryVmTemplateWhereInput.


        :param created_at: The created_at of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def created_at_gt(self):
        """Gets the created_at_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The created_at_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_gt

    @created_at_gt.setter
    def created_at_gt(self, created_at_gt):
        """Sets the created_at_gt of this ContentLibraryVmTemplateWhereInput.


        :param created_at_gt: The created_at_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type created_at_gt: str
        """

        self._created_at_gt = created_at_gt

    @property
    def created_at_gte(self):
        """Gets the created_at_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The created_at_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_gte

    @created_at_gte.setter
    def created_at_gte(self, created_at_gte):
        """Sets the created_at_gte of this ContentLibraryVmTemplateWhereInput.


        :param created_at_gte: The created_at_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type created_at_gte: str
        """

        self._created_at_gte = created_at_gte

    @property
    def created_at_in(self):
        """Gets the created_at_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The created_at_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._created_at_in

    @created_at_in.setter
    def created_at_in(self, created_at_in):
        """Sets the created_at_in of this ContentLibraryVmTemplateWhereInput.


        :param created_at_in: The created_at_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type created_at_in: list[str]
        """

        self._created_at_in = created_at_in

    @property
    def created_at_lt(self):
        """Gets the created_at_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The created_at_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_lt

    @created_at_lt.setter
    def created_at_lt(self, created_at_lt):
        """Sets the created_at_lt of this ContentLibraryVmTemplateWhereInput.


        :param created_at_lt: The created_at_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type created_at_lt: str
        """

        self._created_at_lt = created_at_lt

    @property
    def created_at_lte(self):
        """Gets the created_at_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The created_at_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_lte

    @created_at_lte.setter
    def created_at_lte(self, created_at_lte):
        """Sets the created_at_lte of this ContentLibraryVmTemplateWhereInput.


        :param created_at_lte: The created_at_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type created_at_lte: str
        """

        self._created_at_lte = created_at_lte

    @property
    def created_at_not(self):
        """Gets the created_at_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The created_at_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_not

    @created_at_not.setter
    def created_at_not(self, created_at_not):
        """Sets the created_at_not of this ContentLibraryVmTemplateWhereInput.


        :param created_at_not: The created_at_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type created_at_not: str
        """

        self._created_at_not = created_at_not

    @property
    def created_at_not_in(self):
        """Gets the created_at_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The created_at_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._created_at_not_in

    @created_at_not_in.setter
    def created_at_not_in(self, created_at_not_in):
        """Sets the created_at_not_in of this ContentLibraryVmTemplateWhereInput.


        :param created_at_not_in: The created_at_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type created_at_not_in: list[str]
        """

        self._created_at_not_in = created_at_not_in

    @property
    def description(self):
        """Gets the description of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The description of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ContentLibraryVmTemplateWhereInput.


        :param description: The description of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type description: str
        """

        self._description = description

    @property
    def description_contains(self):
        """Gets the description_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The description_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_contains

    @description_contains.setter
    def description_contains(self, description_contains):
        """Sets the description_contains of this ContentLibraryVmTemplateWhereInput.


        :param description_contains: The description_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type description_contains: str
        """

        self._description_contains = description_contains

    @property
    def description_ends_with(self):
        """Gets the description_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The description_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_ends_with

    @description_ends_with.setter
    def description_ends_with(self, description_ends_with):
        """Sets the description_ends_with of this ContentLibraryVmTemplateWhereInput.


        :param description_ends_with: The description_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type description_ends_with: str
        """

        self._description_ends_with = description_ends_with

    @property
    def description_gt(self):
        """Gets the description_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The description_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_gt

    @description_gt.setter
    def description_gt(self, description_gt):
        """Sets the description_gt of this ContentLibraryVmTemplateWhereInput.


        :param description_gt: The description_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type description_gt: str
        """

        self._description_gt = description_gt

    @property
    def description_gte(self):
        """Gets the description_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The description_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_gte

    @description_gte.setter
    def description_gte(self, description_gte):
        """Sets the description_gte of this ContentLibraryVmTemplateWhereInput.


        :param description_gte: The description_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type description_gte: str
        """

        self._description_gte = description_gte

    @property
    def description_in(self):
        """Gets the description_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The description_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._description_in

    @description_in.setter
    def description_in(self, description_in):
        """Sets the description_in of this ContentLibraryVmTemplateWhereInput.


        :param description_in: The description_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type description_in: list[str]
        """

        self._description_in = description_in

    @property
    def description_lt(self):
        """Gets the description_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The description_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_lt

    @description_lt.setter
    def description_lt(self, description_lt):
        """Sets the description_lt of this ContentLibraryVmTemplateWhereInput.


        :param description_lt: The description_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type description_lt: str
        """

        self._description_lt = description_lt

    @property
    def description_lte(self):
        """Gets the description_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The description_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_lte

    @description_lte.setter
    def description_lte(self, description_lte):
        """Sets the description_lte of this ContentLibraryVmTemplateWhereInput.


        :param description_lte: The description_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type description_lte: str
        """

        self._description_lte = description_lte

    @property
    def description_not(self):
        """Gets the description_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The description_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not

    @description_not.setter
    def description_not(self, description_not):
        """Sets the description_not of this ContentLibraryVmTemplateWhereInput.


        :param description_not: The description_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type description_not: str
        """

        self._description_not = description_not

    @property
    def description_not_contains(self):
        """Gets the description_not_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The description_not_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_contains

    @description_not_contains.setter
    def description_not_contains(self, description_not_contains):
        """Sets the description_not_contains of this ContentLibraryVmTemplateWhereInput.


        :param description_not_contains: The description_not_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type description_not_contains: str
        """

        self._description_not_contains = description_not_contains

    @property
    def description_not_ends_with(self):
        """Gets the description_not_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The description_not_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_ends_with

    @description_not_ends_with.setter
    def description_not_ends_with(self, description_not_ends_with):
        """Sets the description_not_ends_with of this ContentLibraryVmTemplateWhereInput.


        :param description_not_ends_with: The description_not_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type description_not_ends_with: str
        """

        self._description_not_ends_with = description_not_ends_with

    @property
    def description_not_in(self):
        """Gets the description_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The description_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._description_not_in

    @description_not_in.setter
    def description_not_in(self, description_not_in):
        """Sets the description_not_in of this ContentLibraryVmTemplateWhereInput.


        :param description_not_in: The description_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type description_not_in: list[str]
        """

        self._description_not_in = description_not_in

    @property
    def description_not_starts_with(self):
        """Gets the description_not_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The description_not_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_starts_with

    @description_not_starts_with.setter
    def description_not_starts_with(self, description_not_starts_with):
        """Sets the description_not_starts_with of this ContentLibraryVmTemplateWhereInput.


        :param description_not_starts_with: The description_not_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type description_not_starts_with: str
        """

        self._description_not_starts_with = description_not_starts_with

    @property
    def description_starts_with(self):
        """Gets the description_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The description_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_starts_with

    @description_starts_with.setter
    def description_starts_with(self, description_starts_with):
        """Sets the description_starts_with of this ContentLibraryVmTemplateWhereInput.


        :param description_starts_with: The description_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type description_starts_with: str
        """

        self._description_starts_with = description_starts_with

    @property
    def entity_async_status(self):
        """Gets the entity_async_status of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The entity_async_status of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status

    @entity_async_status.setter
    def entity_async_status(self, entity_async_status):
        """Sets the entity_async_status of this ContentLibraryVmTemplateWhereInput.


        :param entity_async_status: The entity_async_status of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type entity_async_status: EntityAsyncStatus
        """

        self._entity_async_status = entity_async_status

    @property
    def entity_async_status_in(self):
        """Gets the entity_async_status_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The entity_async_status_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_in

    @entity_async_status_in.setter
    def entity_async_status_in(self, entity_async_status_in):
        """Sets the entity_async_status_in of this ContentLibraryVmTemplateWhereInput.


        :param entity_async_status_in: The entity_async_status_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type entity_async_status_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_in = entity_async_status_in

    @property
    def entity_async_status_not(self):
        """Gets the entity_async_status_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The entity_async_status_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status_not

    @entity_async_status_not.setter
    def entity_async_status_not(self, entity_async_status_not):
        """Sets the entity_async_status_not of this ContentLibraryVmTemplateWhereInput.


        :param entity_async_status_not: The entity_async_status_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type entity_async_status_not: EntityAsyncStatus
        """

        self._entity_async_status_not = entity_async_status_not

    @property
    def entity_async_status_not_in(self):
        """Gets the entity_async_status_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The entity_async_status_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_not_in

    @entity_async_status_not_in.setter
    def entity_async_status_not_in(self, entity_async_status_not_in):
        """Sets the entity_async_status_not_in of this ContentLibraryVmTemplateWhereInput.


        :param entity_async_status_not_in: The entity_async_status_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type entity_async_status_not_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_not_in = entity_async_status_not_in

    @property
    def id(self):
        """Gets the id of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The id of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ContentLibraryVmTemplateWhereInput.


        :param id: The id of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The id_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this ContentLibraryVmTemplateWhereInput.


        :param id_contains: The id_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The id_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this ContentLibraryVmTemplateWhereInput.


        :param id_ends_with: The id_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The id_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this ContentLibraryVmTemplateWhereInput.


        :param id_gt: The id_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The id_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this ContentLibraryVmTemplateWhereInput.


        :param id_gte: The id_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The id_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this ContentLibraryVmTemplateWhereInput.


        :param id_in: The id_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The id_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this ContentLibraryVmTemplateWhereInput.


        :param id_lt: The id_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The id_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this ContentLibraryVmTemplateWhereInput.


        :param id_lte: The id_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The id_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this ContentLibraryVmTemplateWhereInput.


        :param id_not: The id_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The id_not_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this ContentLibraryVmTemplateWhereInput.


        :param id_not_contains: The id_not_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this ContentLibraryVmTemplateWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The id_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this ContentLibraryVmTemplateWhereInput.


        :param id_not_in: The id_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this ContentLibraryVmTemplateWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The id_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this ContentLibraryVmTemplateWhereInput.


        :param id_starts_with: The id_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def labels_every(self):
        """Gets the labels_every of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The labels_every of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: LabelWhereInput
        """
        return self._labels_every

    @labels_every.setter
    def labels_every(self, labels_every):
        """Sets the labels_every of this ContentLibraryVmTemplateWhereInput.


        :param labels_every: The labels_every of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type labels_every: LabelWhereInput
        """

        self._labels_every = labels_every

    @property
    def labels_none(self):
        """Gets the labels_none of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The labels_none of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: LabelWhereInput
        """
        return self._labels_none

    @labels_none.setter
    def labels_none(self, labels_none):
        """Sets the labels_none of this ContentLibraryVmTemplateWhereInput.


        :param labels_none: The labels_none of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type labels_none: LabelWhereInput
        """

        self._labels_none = labels_none

    @property
    def labels_some(self):
        """Gets the labels_some of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The labels_some of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: LabelWhereInput
        """
        return self._labels_some

    @labels_some.setter
    def labels_some(self, labels_some):
        """Sets the labels_some of this ContentLibraryVmTemplateWhereInput.


        :param labels_some: The labels_some of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type labels_some: LabelWhereInput
        """

        self._labels_some = labels_some

    @property
    def memory(self):
        """Gets the memory of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The memory of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._memory

    @memory.setter
    def memory(self, memory):
        """Sets the memory of this ContentLibraryVmTemplateWhereInput.


        :param memory: The memory of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type memory: int
        """

        self._memory = memory

    @property
    def memory_gt(self):
        """Gets the memory_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The memory_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._memory_gt

    @memory_gt.setter
    def memory_gt(self, memory_gt):
        """Sets the memory_gt of this ContentLibraryVmTemplateWhereInput.


        :param memory_gt: The memory_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type memory_gt: int
        """

        self._memory_gt = memory_gt

    @property
    def memory_gte(self):
        """Gets the memory_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The memory_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._memory_gte

    @memory_gte.setter
    def memory_gte(self, memory_gte):
        """Sets the memory_gte of this ContentLibraryVmTemplateWhereInput.


        :param memory_gte: The memory_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type memory_gte: int
        """

        self._memory_gte = memory_gte

    @property
    def memory_in(self):
        """Gets the memory_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The memory_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._memory_in

    @memory_in.setter
    def memory_in(self, memory_in):
        """Sets the memory_in of this ContentLibraryVmTemplateWhereInput.


        :param memory_in: The memory_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type memory_in: list[int]
        """

        self._memory_in = memory_in

    @property
    def memory_lt(self):
        """Gets the memory_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The memory_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._memory_lt

    @memory_lt.setter
    def memory_lt(self, memory_lt):
        """Sets the memory_lt of this ContentLibraryVmTemplateWhereInput.


        :param memory_lt: The memory_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type memory_lt: int
        """

        self._memory_lt = memory_lt

    @property
    def memory_lte(self):
        """Gets the memory_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The memory_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._memory_lte

    @memory_lte.setter
    def memory_lte(self, memory_lte):
        """Sets the memory_lte of this ContentLibraryVmTemplateWhereInput.


        :param memory_lte: The memory_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type memory_lte: int
        """

        self._memory_lte = memory_lte

    @property
    def memory_not(self):
        """Gets the memory_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The memory_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._memory_not

    @memory_not.setter
    def memory_not(self, memory_not):
        """Sets the memory_not of this ContentLibraryVmTemplateWhereInput.


        :param memory_not: The memory_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type memory_not: int
        """

        self._memory_not = memory_not

    @property
    def memory_not_in(self):
        """Gets the memory_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The memory_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._memory_not_in

    @memory_not_in.setter
    def memory_not_in(self, memory_not_in):
        """Sets the memory_not_in of this ContentLibraryVmTemplateWhereInput.


        :param memory_not_in: The memory_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type memory_not_in: list[int]
        """

        self._memory_not_in = memory_not_in

    @property
    def name(self):
        """Gets the name of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The name of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContentLibraryVmTemplateWhereInput.


        :param name: The name of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def name_contains(self):
        """Gets the name_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The name_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_contains

    @name_contains.setter
    def name_contains(self, name_contains):
        """Sets the name_contains of this ContentLibraryVmTemplateWhereInput.


        :param name_contains: The name_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type name_contains: str
        """

        self._name_contains = name_contains

    @property
    def name_ends_with(self):
        """Gets the name_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The name_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_ends_with

    @name_ends_with.setter
    def name_ends_with(self, name_ends_with):
        """Sets the name_ends_with of this ContentLibraryVmTemplateWhereInput.


        :param name_ends_with: The name_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type name_ends_with: str
        """

        self._name_ends_with = name_ends_with

    @property
    def name_gt(self):
        """Gets the name_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The name_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gt

    @name_gt.setter
    def name_gt(self, name_gt):
        """Sets the name_gt of this ContentLibraryVmTemplateWhereInput.


        :param name_gt: The name_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type name_gt: str
        """

        self._name_gt = name_gt

    @property
    def name_gte(self):
        """Gets the name_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The name_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gte

    @name_gte.setter
    def name_gte(self, name_gte):
        """Sets the name_gte of this ContentLibraryVmTemplateWhereInput.


        :param name_gte: The name_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type name_gte: str
        """

        self._name_gte = name_gte

    @property
    def name_in(self):
        """Gets the name_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The name_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_in

    @name_in.setter
    def name_in(self, name_in):
        """Sets the name_in of this ContentLibraryVmTemplateWhereInput.


        :param name_in: The name_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type name_in: list[str]
        """

        self._name_in = name_in

    @property
    def name_lt(self):
        """Gets the name_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The name_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lt

    @name_lt.setter
    def name_lt(self, name_lt):
        """Sets the name_lt of this ContentLibraryVmTemplateWhereInput.


        :param name_lt: The name_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type name_lt: str
        """

        self._name_lt = name_lt

    @property
    def name_lte(self):
        """Gets the name_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The name_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lte

    @name_lte.setter
    def name_lte(self, name_lte):
        """Sets the name_lte of this ContentLibraryVmTemplateWhereInput.


        :param name_lte: The name_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type name_lte: str
        """

        self._name_lte = name_lte

    @property
    def name_not(self):
        """Gets the name_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The name_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not

    @name_not.setter
    def name_not(self, name_not):
        """Sets the name_not of this ContentLibraryVmTemplateWhereInput.


        :param name_not: The name_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type name_not: str
        """

        self._name_not = name_not

    @property
    def name_not_contains(self):
        """Gets the name_not_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The name_not_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_contains

    @name_not_contains.setter
    def name_not_contains(self, name_not_contains):
        """Sets the name_not_contains of this ContentLibraryVmTemplateWhereInput.


        :param name_not_contains: The name_not_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type name_not_contains: str
        """

        self._name_not_contains = name_not_contains

    @property
    def name_not_ends_with(self):
        """Gets the name_not_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The name_not_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_ends_with

    @name_not_ends_with.setter
    def name_not_ends_with(self, name_not_ends_with):
        """Sets the name_not_ends_with of this ContentLibraryVmTemplateWhereInput.


        :param name_not_ends_with: The name_not_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type name_not_ends_with: str
        """

        self._name_not_ends_with = name_not_ends_with

    @property
    def name_not_in(self):
        """Gets the name_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The name_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_not_in

    @name_not_in.setter
    def name_not_in(self, name_not_in):
        """Sets the name_not_in of this ContentLibraryVmTemplateWhereInput.


        :param name_not_in: The name_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type name_not_in: list[str]
        """

        self._name_not_in = name_not_in

    @property
    def name_not_starts_with(self):
        """Gets the name_not_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The name_not_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_starts_with

    @name_not_starts_with.setter
    def name_not_starts_with(self, name_not_starts_with):
        """Sets the name_not_starts_with of this ContentLibraryVmTemplateWhereInput.


        :param name_not_starts_with: The name_not_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type name_not_starts_with: str
        """

        self._name_not_starts_with = name_not_starts_with

    @property
    def name_starts_with(self):
        """Gets the name_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The name_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_starts_with

    @name_starts_with.setter
    def name_starts_with(self, name_starts_with):
        """Sets the name_starts_with of this ContentLibraryVmTemplateWhereInput.


        :param name_starts_with: The name_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type name_starts_with: str
        """

        self._name_starts_with = name_starts_with

    @property
    def os(self):
        """Gets the os of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The os of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os

    @os.setter
    def os(self, os):
        """Sets the os of this ContentLibraryVmTemplateWhereInput.


        :param os: The os of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type os: str
        """

        self._os = os

    @property
    def os_contains(self):
        """Gets the os_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The os_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_contains

    @os_contains.setter
    def os_contains(self, os_contains):
        """Sets the os_contains of this ContentLibraryVmTemplateWhereInput.


        :param os_contains: The os_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type os_contains: str
        """

        self._os_contains = os_contains

    @property
    def os_ends_with(self):
        """Gets the os_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The os_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_ends_with

    @os_ends_with.setter
    def os_ends_with(self, os_ends_with):
        """Sets the os_ends_with of this ContentLibraryVmTemplateWhereInput.


        :param os_ends_with: The os_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type os_ends_with: str
        """

        self._os_ends_with = os_ends_with

    @property
    def os_gt(self):
        """Gets the os_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The os_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_gt

    @os_gt.setter
    def os_gt(self, os_gt):
        """Sets the os_gt of this ContentLibraryVmTemplateWhereInput.


        :param os_gt: The os_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type os_gt: str
        """

        self._os_gt = os_gt

    @property
    def os_gte(self):
        """Gets the os_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The os_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_gte

    @os_gte.setter
    def os_gte(self, os_gte):
        """Sets the os_gte of this ContentLibraryVmTemplateWhereInput.


        :param os_gte: The os_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type os_gte: str
        """

        self._os_gte = os_gte

    @property
    def os_in(self):
        """Gets the os_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The os_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._os_in

    @os_in.setter
    def os_in(self, os_in):
        """Sets the os_in of this ContentLibraryVmTemplateWhereInput.


        :param os_in: The os_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type os_in: list[str]
        """

        self._os_in = os_in

    @property
    def os_lt(self):
        """Gets the os_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The os_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_lt

    @os_lt.setter
    def os_lt(self, os_lt):
        """Sets the os_lt of this ContentLibraryVmTemplateWhereInput.


        :param os_lt: The os_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type os_lt: str
        """

        self._os_lt = os_lt

    @property
    def os_lte(self):
        """Gets the os_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The os_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_lte

    @os_lte.setter
    def os_lte(self, os_lte):
        """Sets the os_lte of this ContentLibraryVmTemplateWhereInput.


        :param os_lte: The os_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type os_lte: str
        """

        self._os_lte = os_lte

    @property
    def os_not(self):
        """Gets the os_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The os_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_not

    @os_not.setter
    def os_not(self, os_not):
        """Sets the os_not of this ContentLibraryVmTemplateWhereInput.


        :param os_not: The os_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type os_not: str
        """

        self._os_not = os_not

    @property
    def os_not_contains(self):
        """Gets the os_not_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The os_not_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_not_contains

    @os_not_contains.setter
    def os_not_contains(self, os_not_contains):
        """Sets the os_not_contains of this ContentLibraryVmTemplateWhereInput.


        :param os_not_contains: The os_not_contains of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type os_not_contains: str
        """

        self._os_not_contains = os_not_contains

    @property
    def os_not_ends_with(self):
        """Gets the os_not_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The os_not_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_not_ends_with

    @os_not_ends_with.setter
    def os_not_ends_with(self, os_not_ends_with):
        """Sets the os_not_ends_with of this ContentLibraryVmTemplateWhereInput.


        :param os_not_ends_with: The os_not_ends_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type os_not_ends_with: str
        """

        self._os_not_ends_with = os_not_ends_with

    @property
    def os_not_in(self):
        """Gets the os_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The os_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._os_not_in

    @os_not_in.setter
    def os_not_in(self, os_not_in):
        """Sets the os_not_in of this ContentLibraryVmTemplateWhereInput.


        :param os_not_in: The os_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type os_not_in: list[str]
        """

        self._os_not_in = os_not_in

    @property
    def os_not_starts_with(self):
        """Gets the os_not_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The os_not_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_not_starts_with

    @os_not_starts_with.setter
    def os_not_starts_with(self, os_not_starts_with):
        """Sets the os_not_starts_with of this ContentLibraryVmTemplateWhereInput.


        :param os_not_starts_with: The os_not_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type os_not_starts_with: str
        """

        self._os_not_starts_with = os_not_starts_with

    @property
    def os_starts_with(self):
        """Gets the os_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The os_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._os_starts_with

    @os_starts_with.setter
    def os_starts_with(self, os_starts_with):
        """Sets the os_starts_with of this ContentLibraryVmTemplateWhereInput.


        :param os_starts_with: The os_starts_with of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type os_starts_with: str
        """

        self._os_starts_with = os_starts_with

    @property
    def size(self):
        """Gets the size of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The size of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this ContentLibraryVmTemplateWhereInput.


        :param size: The size of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type size: int
        """

        self._size = size

    @property
    def size_gt(self):
        """Gets the size_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The size_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_gt

    @size_gt.setter
    def size_gt(self, size_gt):
        """Sets the size_gt of this ContentLibraryVmTemplateWhereInput.


        :param size_gt: The size_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type size_gt: int
        """

        self._size_gt = size_gt

    @property
    def size_gte(self):
        """Gets the size_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The size_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_gte

    @size_gte.setter
    def size_gte(self, size_gte):
        """Sets the size_gte of this ContentLibraryVmTemplateWhereInput.


        :param size_gte: The size_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type size_gte: int
        """

        self._size_gte = size_gte

    @property
    def size_in(self):
        """Gets the size_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The size_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._size_in

    @size_in.setter
    def size_in(self, size_in):
        """Sets the size_in of this ContentLibraryVmTemplateWhereInput.


        :param size_in: The size_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type size_in: list[int]
        """

        self._size_in = size_in

    @property
    def size_lt(self):
        """Gets the size_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The size_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_lt

    @size_lt.setter
    def size_lt(self, size_lt):
        """Sets the size_lt of this ContentLibraryVmTemplateWhereInput.


        :param size_lt: The size_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type size_lt: int
        """

        self._size_lt = size_lt

    @property
    def size_lte(self):
        """Gets the size_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The size_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_lte

    @size_lte.setter
    def size_lte(self, size_lte):
        """Sets the size_lte of this ContentLibraryVmTemplateWhereInput.


        :param size_lte: The size_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type size_lte: int
        """

        self._size_lte = size_lte

    @property
    def size_not(self):
        """Gets the size_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The size_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._size_not

    @size_not.setter
    def size_not(self, size_not):
        """Sets the size_not of this ContentLibraryVmTemplateWhereInput.


        :param size_not: The size_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type size_not: int
        """

        self._size_not = size_not

    @property
    def size_not_in(self):
        """Gets the size_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The size_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._size_not_in

    @size_not_in.setter
    def size_not_in(self, size_not_in):
        """Sets the size_not_in of this ContentLibraryVmTemplateWhereInput.


        :param size_not_in: The size_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type size_not_in: list[int]
        """

        self._size_not_in = size_not_in

    @property
    def vcpu(self):
        """Gets the vcpu of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The vcpu of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._vcpu

    @vcpu.setter
    def vcpu(self, vcpu):
        """Sets the vcpu of this ContentLibraryVmTemplateWhereInput.


        :param vcpu: The vcpu of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type vcpu: int
        """

        self._vcpu = vcpu

    @property
    def vcpu_gt(self):
        """Gets the vcpu_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The vcpu_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._vcpu_gt

    @vcpu_gt.setter
    def vcpu_gt(self, vcpu_gt):
        """Sets the vcpu_gt of this ContentLibraryVmTemplateWhereInput.


        :param vcpu_gt: The vcpu_gt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type vcpu_gt: int
        """

        self._vcpu_gt = vcpu_gt

    @property
    def vcpu_gte(self):
        """Gets the vcpu_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The vcpu_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._vcpu_gte

    @vcpu_gte.setter
    def vcpu_gte(self, vcpu_gte):
        """Sets the vcpu_gte of this ContentLibraryVmTemplateWhereInput.


        :param vcpu_gte: The vcpu_gte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type vcpu_gte: int
        """

        self._vcpu_gte = vcpu_gte

    @property
    def vcpu_in(self):
        """Gets the vcpu_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The vcpu_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._vcpu_in

    @vcpu_in.setter
    def vcpu_in(self, vcpu_in):
        """Sets the vcpu_in of this ContentLibraryVmTemplateWhereInput.


        :param vcpu_in: The vcpu_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type vcpu_in: list[int]
        """

        self._vcpu_in = vcpu_in

    @property
    def vcpu_lt(self):
        """Gets the vcpu_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The vcpu_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._vcpu_lt

    @vcpu_lt.setter
    def vcpu_lt(self, vcpu_lt):
        """Sets the vcpu_lt of this ContentLibraryVmTemplateWhereInput.


        :param vcpu_lt: The vcpu_lt of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type vcpu_lt: int
        """

        self._vcpu_lt = vcpu_lt

    @property
    def vcpu_lte(self):
        """Gets the vcpu_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The vcpu_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._vcpu_lte

    @vcpu_lte.setter
    def vcpu_lte(self, vcpu_lte):
        """Sets the vcpu_lte of this ContentLibraryVmTemplateWhereInput.


        :param vcpu_lte: The vcpu_lte of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type vcpu_lte: int
        """

        self._vcpu_lte = vcpu_lte

    @property
    def vcpu_not(self):
        """Gets the vcpu_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The vcpu_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._vcpu_not

    @vcpu_not.setter
    def vcpu_not(self, vcpu_not):
        """Sets the vcpu_not of this ContentLibraryVmTemplateWhereInput.


        :param vcpu_not: The vcpu_not of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type vcpu_not: int
        """

        self._vcpu_not = vcpu_not

    @property
    def vcpu_not_in(self):
        """Gets the vcpu_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The vcpu_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._vcpu_not_in

    @vcpu_not_in.setter
    def vcpu_not_in(self, vcpu_not_in):
        """Sets the vcpu_not_in of this ContentLibraryVmTemplateWhereInput.


        :param vcpu_not_in: The vcpu_not_in of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type vcpu_not_in: list[int]
        """

        self._vcpu_not_in = vcpu_not_in

    @property
    def vm_templates_every(self):
        """Gets the vm_templates_every of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The vm_templates_every of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: VmTemplateWhereInput
        """
        return self._vm_templates_every

    @vm_templates_every.setter
    def vm_templates_every(self, vm_templates_every):
        """Sets the vm_templates_every of this ContentLibraryVmTemplateWhereInput.


        :param vm_templates_every: The vm_templates_every of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type vm_templates_every: VmTemplateWhereInput
        """

        self._vm_templates_every = vm_templates_every

    @property
    def vm_templates_none(self):
        """Gets the vm_templates_none of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The vm_templates_none of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: VmTemplateWhereInput
        """
        return self._vm_templates_none

    @vm_templates_none.setter
    def vm_templates_none(self, vm_templates_none):
        """Sets the vm_templates_none of this ContentLibraryVmTemplateWhereInput.


        :param vm_templates_none: The vm_templates_none of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type vm_templates_none: VmTemplateWhereInput
        """

        self._vm_templates_none = vm_templates_none

    @property
    def vm_templates_some(self):
        """Gets the vm_templates_some of this ContentLibraryVmTemplateWhereInput.  # noqa: E501


        :return: The vm_templates_some of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :rtype: VmTemplateWhereInput
        """
        return self._vm_templates_some

    @vm_templates_some.setter
    def vm_templates_some(self, vm_templates_some):
        """Sets the vm_templates_some of this ContentLibraryVmTemplateWhereInput.


        :param vm_templates_some: The vm_templates_some of this ContentLibraryVmTemplateWhereInput.  # noqa: E501
        :type vm_templates_some: VmTemplateWhereInput
        """

        self._vm_templates_some = vm_templates_some

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ContentLibraryVmTemplateWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ContentLibraryVmTemplateWhereInput):
            return True

        return self.to_dict() != other.to_dict()
